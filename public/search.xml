<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>在夜里出发</title>
    <url>//post/-18/</url>
    <content><![CDATA[<p>出发在夜里</p>
<p>在夜里出发</p>
<p>现在有一个我</p>
<p>在淡淡的夜里出发</p>
<p><br></p>
<p>踩着咯咯作响的雪</p>
<p>望着点点发黄的灯</p>
<p>穿梭在夜里</p>
<p>享受我的孤独</p>
<p><br></p>
<p>人们的崇高在夜里寂寞</p>
<p>人们的轰烈在夜里冷清</p>
<p>人们的严肃在夜里温柔</p>
<p>人们的萧索在夜里澎湃</p>
<p>漫步</p>
<p>在夜里充分自由</p>
<p><br></p>
<p>举头望月明</p>
<p>对整个星空敞开灵魂</p>
<p>灵魂在心城住的久了</p>
<p>睁开眼睛，让它</p>
<p>在夜里奔跑</p>
<p><br></p>
<p>夜是宇宙的倒影</p>
<p>夜是社会的背景</p>
<p>现在我的灵魂</p>
<p>在浓浓的夜里</p>
<p>遗世独立</p>
]]></content>
      <tags>
        <tag>诗 - Poem</tag>
      </tags>
  </entry>
  <entry>
    <title>小打油 - 假登黄鹤楼</title>
    <url>//post/-17/</url>
    <content><![CDATA[<p>（与朋友们一起登黄鹤楼。人太多了，没有登到最顶上，即兴而作）</p>
<p><br></p>
<p>携友同登黄鹤楼，楚天极目入了秋</p>
<p>人山人海图一啥？崔颢题诗在上头</p>
<p><br></p>
<p>火车震震就要发，故人依依就要走</p>
<p>啤酒饮料黄鹤楼，烟波江上使人愁</p>
]]></content>
      <tags>
        <tag>诗 - Poem</tag>
      </tags>
  </entry>
  <entry>
    <title>日月行焉</title>
    <url>//post/-15/</url>
    <content><![CDATA[<p>明月望我</p>
<p>灯影摇摇</p>
<p>清风半夜听鸣蝉</p>
<p><br></p>
<p>凉风抚我</p>
<p>梧桐祟祟</p>
<p>澹澹秋容烟水寒</p>
<p><br></p>
<p>凝烟伴我</p>
<p>四顾冥冥</p>
<p>一人独享秋一潭</p>
<p><br></p>
<p>潭水懂我</p>
<p>微波漾漾</p>
<p>兴尽沿月梼歌还</p>
<p><br></p>
<p>于日月潭</p>
]]></content>
      <tags>
        <tag>诗 - Poem</tag>
      </tags>
  </entry>
  <entry>
    <title>梦想</title>
    <url>//post/-16/</url>
    <content><![CDATA[<p>小时候</p>
<p>梦想是一袋甜甜的喜之郎</p>
<p>我在外头</p>
<p>果冻在里头</p>
<p><br></p>
<p>长大后</p>
<p>梦想是一张薄薄的录取通知书</p>
<p>我在这头</p>
<p>大学在那头</p>
<p><br></p>
<p>后来啊</p>
<p>梦想是一个脏脏的试管</p>
<p>我在外头</p>
<p>paper在里头</p>
<p><br></p>
<p>而现在</p>
<p>梦想是一张薄薄的床板</p>
<p>我在上头</p>
<p>书在下头</p>
]]></content>
      <tags>
        <tag>诗 - Poem</tag>
      </tags>
  </entry>
  <entry>
    <title>今晚的月光亮得刺眼</title>
    <url>//post/-12/</url>
    <content><![CDATA[<p>今晚入夜之后想你们了</p>
<p>那晚我却什么都没说</p>
<p><br></p>
<p>今晚的月光亮得刺眼</p>
<p>霓虹灯招牌也格外地多</p>
<p><br></p>
<p>我们吃过火锅，唱过歌</p>
<p>也一起在勺子里躺过</p>
<p><br></p>
<p>我们骑上单车去兜风</p>
<p>祝大家都当教授开豪车</p>
<p><br></p>
<p>那晚的月光也亮得刺眼</p>
<p>那晚嘻嘻哈哈也快乐</p>
<p><br></p>
<p>在南门外我挥袖告别</p>
<p>告别大家</p>
<p>告别钱图刷夜的那个我</p>
<p><br></p>
<p>明明离开之后想你们了</p>
<p>那晚我却什么都没说</p>
<p><br></p>
<p>2021/7/9</p>
<p>于成都</p>
]]></content>
      <tags>
        <tag>诗 - Poem</tag>
      </tags>
  </entry>
  <entry>
    <title>交大秋</title>
    <url>//post/-9/</url>
    <content><![CDATA[<p>孤鹜昏鸦南飞雁，芳草篁竹乐游原</p>
<p>胭脂落日、黄叶纷飞霞满天</p>
<p>梧桐道远，彩虹桥远</p>
<p><br></p>
<p>寒星烁兮秋来晚，晚风起兮溢清寒</p>
<p>东亭残月、小径断碑灯数盏</p>
<p>相见时难，再见时难</p>
]]></content>
      <tags>
        <tag>诗 - Poem</tag>
      </tags>
  </entry>
  <entry>
    <title>致刘昊</title>
    <url>//post/-11/</url>
    <content><![CDATA[<p><img src="1.png" /></p>
<p><br></p>
<p>山连海兮海连山</p>
<p>关外思君月半弯</p>
<p>海内存知己</p>
<p>千里共婵娟</p>
<p><br></p>
<p>莫言求索蜀道难</p>
<p>拔尖长江直等闲</p>
<p>待到重逢日</p>
<p>回首碧云天</p>
<p><br></p>
<p>注：为了避免涉及隐私，“刘昊”为化名。</p>
<p>注2：本诗为神智体</p>
]]></content>
      <tags>
        <tag>诗 - Poem</tag>
      </tags>
  </entry>
  <entry>
    <title>人上人上人</title>
    <url>//post/-14/</url>
    <content><![CDATA[<p>左面全是人</p>
<p>右面全是人</p>
<p>人挤人，人挨人</p>
<p>挥汗如雨，举袂成云</p>
<p>我们拼尽全力的奔跑</p>
<p>才成为了一个普通人</p>
<p><br></p>
<p>吃了很多苦</p>
<p>当个普通人</p>
<p>吃得苦中苦</p>
<p>方成人上人</p>
<p>人人想当人上人</p>
<p>可是人上人也是人</p>
<p><br></p>
<p>人上人想当人上人上人</p>
<p>他们要</p>
<p>吃得苦中苦中苦</p>
<p>做得题中题中题</p>
<p>脱得发中发中发</p>
<p>最后他们的脑袋像飞镖盘一样</p>
<p><br></p>
<p>但是“人人想当人上人”</p>
<p>这个魔咒还没被解除</p>
<p>越优秀的人越不会满足</p>
<p>再问一个人上人上人</p>
<p>他会说他想做一个</p>
<p>人上人上人上人</p>
<p><br></p>
<p><img src="1.png" /></p>
]]></content>
      <tags>
        <tag>诗 - Poem</tag>
      </tags>
  </entry>
  <entry>
    <title>题老黑板</title>
    <url>//post/-13/</url>
    <content><![CDATA[<p>一寸长的粉笔头</p>
<p>为几平方米的老黑板</p>
<p>添上祝福的话语</p>
<p><br></p>
<p>粉笔头只是路过黑板</p>
<p>但是粉笔头的一部分</p>
<p>永远留在了黑板上</p>
<p><br></p>
<p>——2017级某毕业学子</p>
<p><img src="1.jpg" /></p>
]]></content>
      <tags>
        <tag>诗 - Poem</tag>
      </tags>
  </entry>
  <entry>
    <title>可怜的意大利小孩 - A poor Italian kid</title>
    <url>//post/-10/</url>
    <content><![CDATA[<p>今天我们的午饭是</p>
<p>西葫芦煮通心粉</p>
<p>有一个意大利小孩</p>
<p>端着它，想起了</p>
<p>家乡米兰的晚风</p>
<p><br></p>
<p>今天我们的晚饭是</p>
<p>胡萝卜鸡肉盖饭</p>
<p>还是那个意大利小孩</p>
<p>对着它，捏着鼻子</p>
<p>把胡萝卜全挑出去</p>
<p><br></p>
<p>2021/8/22</p>
<hr />
<p>A poor Italian kid</p>
<p><br></p>
<p>Today our lunch was:</p>
<p>tomato squash pasta.</p>
<p>There's an Italian kid.</p>
<p>The feeling of Milan's wind,</p>
<p>blew through his mind.</p>
<p><br></p>
<p>Today our dinner was:</p>
<p>turnip fried rice.</p>
<p>That poor Italian kid,</p>
<p>threw away all the food,</p>
<p>with his nose pinched.</p>
<p><br></p>
<p>2021/12/06</p>
]]></content>
      <tags>
        <tag>诗 - Poem</tag>
      </tags>
  </entry>
  <entry>
    <title>爱城雪</title>
    <url>//post/-7/</url>
    <content><![CDATA[<p>寒云白日雪</p>
<p>新雪覆陈雪</p>
<p>林肃松如戟</p>
<p>野旷风似铁</p>
<p><br></p>
<p>灯半明，学未成</p>
<p>归期遥遥无解</p>
<p>寒枝残月雪</p>
<p>新雪覆新雪</p>
<p><br></p>
<p>于爱城</p>
]]></content>
      <tags>
        <tag>诗 - Poem</tag>
      </tags>
  </entry>
  <entry>
    <title>折耳说</title>
    <url>//post/-8/</url>
    <content><![CDATA[<p>生活是什么？</p>
<p>在公园长椅上</p>
<p>折耳说：</p>
<p>“天地不仁，人生苦弱</p>
<p>在这个世界上</p>
<p>只有唯一的答案——</p>
<p>活着，才是生活</p>
<p>其他的不用考虑太多”</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">若问人生的定义是什么，无他，只要说“妄自捏造不必要的麻烦来折磨自己”，也就足够了。——夏目漱石《我是猫》</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>折耳不在乎生活</p>
<p>她什么都不懂</p>
<p>但她比什么都懂的人</p>
<p>懂的还多</p>
<p>她说想吃金枪鱼饼干</p>
<p>她说想坐过山车</p>
<p>夏天，漂亮的猫</p>
<p>说什么都是对的</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">苏格兰折耳猫甜美的性格是天生的，它们就有着糖果般甜美的性格 ——百度百科</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>那之后</p>
<p>我们在手机上还有联络</p>
<p>她前两天试着跳窗户</p>
<p>摔得不轻</p>
<p>“我有九条命</p>
<p>现在还剩八条呢”</p>
<p>我说她总让我们担心</p>
<p>她说我总想太多</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">“作为一只成年猫，你应该稳重一点”</span><br><span class="line">“可是其他的猫就算成年，不也天天跳来跳去喵”</span><br><span class="line">“你和他们不一样，你要照顾自己”</span><br><span class="line">“我要运动保持身材，可不能变成隔壁大橘那种死肥宅”</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>放假了，我去朋友家看她</p>
<p>在一个积雪的晴朗下午</p>
<p>她平躺在沙发前</p>
<p>裹着棉被，大大的眼睛盯着窗外</p>
<p>知道我来她很高兴</p>
<p>给我讲她一直想坐的过山车</p>
<p>走之前，我给它留了两包</p>
<p>软骨素，金枪鱼口味的</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">折耳猫因本身是突变种，会折耳就是因为软骨不全，四肢易生病痛、行动不便。——维基百科</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>“蹉跎，就是生活”</p>
<p>折耳说：</p>
<p>前院有个挺帅的缅因</p>
<p>几天前被拉去做了绝育</p>
<p>之前做过的一只美短</p>
<p>跟其他猫打架，抓烂了耳朵</p>
<p>这两天有个傻猫在追她</p>
<p>她不想搭理那个憨货……</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">母猫交配以后会体力消耗很大，主人应该尽快将母猫接回家里。到家后，尽可能让她自己独自呆一会。但是更重要的是，您要检查下母猫是否在配种的过程中受伤，如果有受伤，一定要进行处理，防止感染。——知乎专栏《猫咪配种指南》</span><br></pre></td></tr></table></figure>
<hr />
<p>秋天，朋友说</p>
<p>她生了病，走路会摔倒</p>
<p>她不知道，但是我知道</p>
<p>这一天终于来了</p>
<p>她与以前相比</p>
<p>话少了许多</p>
<p>但偶尔，她会向我抱怨</p>
<p>铲屎喂的药超级难喝</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">苏格兰折耳猫生下来就注定会有遗传病发病的可能性，有的甚至需要终生服药，才能缓解病痛。——知乎专栏《为什么不建议繁殖和购买苏格兰折耳猫》</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>她不坚强</p>
<p>只是她什么都不想</p>
<p>但因为她什么都不想</p>
<p>所以她很坚强</p>
<p>“病都是会好的，不是吗”</p>
<p>折耳说：</p>
<p>“我可以去外面找点草药，</p>
<p>要是妈妈在身边就好了……”</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">折耳猫的发病是缓慢但不可逆的，虽然无法治愈，但可以通过科学喂养来缓解猫咪的病情。如果后期猫咪无法承受这种痛苦，会有铲屎官选择安乐，但如果猫咪有强烈的生存欲望，希望大家能慎重考虑。——知乎专栏《为什么说不要养折耳猫》</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>再一次去朋友家时</p>
<p>是另一个积雪的晴朗上午</p>
<p>她靠坐在沙发前</p>
<p>裹着棉被，呆呆地望着我</p>
<p>“你想吃巧克力吗”</p>
<p>我说生活，就是折磨</p>
<p>“不想”</p>
<p>她说折磨，也是生活</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">真正严肃的哲学问题只有一个 ……——加缪</span><br><span class="line"></span><br><span class="line">巧克力中的可可碱含有甲基黄嘌呤的成分，会引起猫咪中毒，严重可致死亡——知乎</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>那一天晚上</p>
<p>我们聊了很多</p>
<p>聊聊人生的意义</p>
<p>聊聊那只缅因帅哥</p>
<p>她不知道，但是我知道</p>
<p>这一次就是永别了</p>
<p>我不知道，但是她知道</p>
<p>就算是永别，也没什么</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">我不去想未来是平坦还是泥泞 / 只要热爱生命 / 一切，都在意料之中 ——汪国真</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>鹰老归天，猫老归山</p>
<p>美人迟暮处，草木零落</p>
<p>雨后的公园一角，发现时</p>
<p>她睁着眼，但是她睡了</p>
<p>我和朋友用土把她埋上</p>
<p>又折了一枝花插在上面</p>
<p>那土堆，那花对我们说：</p>
<p>“生活，只是生活”</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">如果你抚摸我，你就会明白幸福是什么——《猫（音乐剧）》</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>后来，一天夜里</p>
<p>我做着梦，但是我醒着</p>
<p>折耳找我一起去坐过山车</p>
<p>我们在公园长椅上聊生活</p>
<p>再后来</p>
<p>我把笔名改成折耳</p>
<p>我说</p>
<p>就是折耳说</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">世上只有一种英雄主义，就是在认清生活真相之后依然热爱生活 ——罗曼·罗兰</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>折耳</p>
]]></content>
      <tags>
        <tag>诗 - Poem</tag>
      </tags>
  </entry>
  <entry>
    <title>住在黑洞里</title>
    <url>//post/-5/</url>
    <content><![CDATA[<h3 id="住在黑洞里">住在黑洞里</h3>
<p>————致内卷</p>
<p><br></p>
<p>住在黑洞里</p>
<p>每隔0.3秒</p>
<p>我和我的思维绕着奇点转一圈</p>
<p><br></p>
<p>吃着变形的食物</p>
<p>等着明天的光</p>
<p>望着视界的内边缘发呆</p>
<p><br></p>
<p>住在黑洞里</p>
<p>抑郁症患者病情加重</p>
<p>自闭症患者感到幸福</p>
<p><br></p>
<p>呼吸着真空量子涨落</p>
<p>推演着托勒密地心说</p>
<p>证明着这黑洞不应该存在</p>
<p><br></p>
<p>住在黑洞里</p>
<p>宇宙毁灭了</p>
<p>它依旧在拥抱我</p>
<p><br></p>
<p>见证着恒星行星被渐渐吞噬</p>
<p>伴随着质子中子一同坠落</p>
<p>猜想着以后的日子也许并不坏</p>
]]></content>
      <tags>
        <tag>诗 - Poem</tag>
      </tags>
  </entry>
  <entry>
    <title>另一代人</title>
    <url>//post/-2/</url>
    <content><![CDATA[<p>黑夜给了我黑色的眼睛</p>
<p>我闭上双眼，说这就是光明</p>
<p><br></p>
<p>于爱城</p>
]]></content>
      <tags>
        <tag>诗 - Poem</tag>
      </tags>
  </entry>
  <entry>
    <title>美丽猫猫新世界</title>
    <url>//post/-3/</url>
    <content><![CDATA[<h3 id="美丽猫猫新世界">美丽猫猫新世界</h3>
<p>——阿道夫·喵胥黎</p>
<p><br></p>
<p>观《隐入尘烟》，及其突遭下架有感</p>
<p>请把所有的#读成 jin/jing</p>
<p><br></p>
<p>abstract</p>
<p>美丽的新世界，到处都是可爱的猫猫</p>
<p>电视上正在播报国外的火山喷发</p>
<p>我们把一张什么都没露的图片，叫做涩图</p>
<p><br></p>
<p>mainpoem</p>
<p>美丽的新世界，什么都没可能发生</p>
<p>今天，所有人都在愤慨万分</p>
<p>而到明天就忘记让他们生气的事情</p>
<p><br></p>
<p>邻居带来了她刚抢的两包花生</p>
<p>和小区即将被封#的谣言</p>
<p>花生も罪ぞよ我们が蹴合ふぞよ（花生也是罪过啊！让我们斗起来）</p>
<p><br></p>
<p>美丽的新世界，大音、但是希声</p>
<p>上帝让人们长10个耳朵和0张嘴的原因</p>
<p>就是让大家少说，多听</p>
<p><br></p>
<p>如果有呼喊声的话，那也湮没在了美丽中</p>
<p>就像隐入巨轮之中的螺丝钉</p>
<p>在美丽的新世界，人人都最好是雷锋</p>
<p><br></p>
<p>美丽的新世界，浏览器首页上全是卢依婷</p>
<p>虽然我并不关心卢依婷</p>
<p>也不关心洗#瓶</p>
<p><br></p>
<p>以思想#察为核心的精准脑透析技术</p>
<p>保证大家的心灵都干净又卫生</p>
<p>在美丽的新世界中，由美丽新科技来#化思想环境</p>
<p><br></p>
<p>好像有什么不美丽的东西，消失在##中</p>
<p>好在我们的“见#填词”技术已经掌握得炉火纯青</p>
<p>和可爱猫猫贴贴吧，听那美丽的#钟为你我而鸣</p>
<p><br></p>
<p>2022/08/15-2022/09/27</p>
<p>于猫猫城</p>
<p><br></p>
<p><img src="1.png" /></p>
<p>图是在reddit上找的，很可爱，很抱歉它以这种形式出现在这里</p>
<p>如果这首诗让人觉得不舒服的话，这确实是我的问题，我以后一定会写出让大家都觉得舒服的诗的。</p>
<p>但不是今天。</p>
]]></content>
      <tags>
        <tag>诗 - Poem</tag>
      </tags>
  </entry>
  <entry>
    <title>怀念一棵榕树</title>
    <url>//post/-4/</url>
    <content><![CDATA[<p>我可以怀念一棵榕树吗？</p>
<p>那可是地地道道的南方的树啊</p>
<p><br></p>
<p>虬龙一样的根部，蜿蜒盘旋</p>
<p>帮助它抵御南方的海水和台风</p>
<p>枝叶翠绿浓密，树底下看不见太阳</p>
<p>即使是冬天，榕树叶子也不会落下</p>
<p><br></p>
<p>榕树与我毫无关系，因为</p>
<p>我可是地地道道的北方的人啊</p>
<p>我应该，而且最好是，怀念那些松树柏树</p>
<p>“雪深林静两三家，多事梅花映松花...”</p>
<p><br></p>
<p>这是出生时就带着的标记，没有办法改变</p>
<p>比如发色、肤色、宗教信仰、</p>
<p>说话的口音、饮食的习惯</p>
<p>以及愤怒时脱口而出的第一句骂人的话</p>
<p><br></p>
<p>我不介意为了发色肤色或是宗教信仰，参加一场圣战：</p>
<p>黑色头发们聚在一起，对着栗色头发们拼命开枪</p>
<p>和其他的黑色头发们开着无聊下流的玩笑</p>
<p>——虽然每晚清点，人都会少几个</p>
<p><br></p>
<p>但我在怀念一棵榕树。在战壕里</p>
<p>捡起栗色头发们空投过来的宣传小报</p>
<p>不无鄙视地把它们扔进垃圾桶</p>
<p>但又好奇上面写了什么</p>
<p><br></p>
<p>下午，阳光明媚，站在榕树荫下</p>
<p>在刷雅思单词，在复习期末考试的我</p>
<p>吃晚饭时，还能看看那无聊下流的大洋国新闻</p>
<p>——以一种严肃可笑的方式被播报着</p>
<p><br></p>
<p>和朋友们逛夜市吃米粉，再点一杯奶茶</p>
<p>关于朋友和米粉的回忆像泡泡一样，一戳就破</p>
<p>不禁好奇，很久以前，英雄奥雷连诺上校</p>
<p>有没有怀念过他那天看到的冰块呢？</p>
<p><br></p>
<p>五彩斑斓的热带马孔多榕树回忆大泡泡</p>
<p>这一次，泡泡就像那堵墙一样，牢不可摧</p>
<p>听说球形鱼缸里的鱼，会以为世界都是扭曲的</p>
<p>于是我举起弯衣柜旗，“随我杀！为了黑头发的尊严！”</p>
<p><br></p>
<p>裘利亚，在繁茂的栗树荫下，他出卖了你</p>
<p>我也即将站在树荫下，出卖我自己</p>
<p>怀念一棵榕树→怀念一棵栗树松树柏树枣树楠树杨树</p>
<p>哦，我想起来茅盾先生写过《白杨礼赞》</p>
<p><br></p>
<p>树，在我的回忆的时空隧道里扎了根</p>
<p>不过大雄越长越大，回忆中的哆啦A梦也离他越来越远</p>
<p>因此，我放弃幻想，准备斗争。正如茅盾所说∶</p>
<p>“白杨树实在不是平凡的，我赞美⬛⬛！”</p>
<p><br></p>
<p>另，黑头发的我现在经常用筷子吃意面</p>
<p>因为它超级便宜，safeway里500克才2加元</p>
<p><br></p>
<p>于爱城</p>
]]></content>
      <tags>
        <tag>诗 - Poem</tag>
      </tags>
  </entry>
  <entry>
    <title>开始写博客 - Start blogging</title>
    <url>//post/1/</url>
    <content><![CDATA[<p>在某位编程大佬的激励下，我打算写点博客，期待着能坚持个一段时间。</p>
<p>From now on, I decided to write blog under the inspiration of a
famous "programming" blogger, looking forward to sticking to it for a
while.</p>
<p><br></p>
<p>我写博客有两个目标：主要目标是产出足够量的思考，足以打造一个“赛博分身”。次要目标是，如果可能的话，能把我的想法传达给更多的人。不论是接受我的想法的粉丝们，亦或是质疑我的想法，并想跟我辩论的人。</p>
<p>I have two goals for writing the blog: the primary goal is to
generate enough thoughts to create a “cyber clone”, and the secondary
goal is, if possible, to convey my ideas to a wider audience, including
those who agree with my thoughts as well as those who question them and
want to engage in a debate with me.</p>
<p><br></p>
<p>2023/04/03</p>
]]></content>
      <tags>
        <tag>随想 - Thoughts</tag>
      </tags>
  </entry>
  <entry>
    <title>毕业生</title>
    <url>//post/-1/</url>
    <content><![CDATA[<p>这就是核桃的未来吗</p>
<p>再优秀的核桃</p>
<p>也磨成核桃奶</p>
<p><br></p>
<p>果壳里的仁艰难破壳</p>
<p>空有绝顶智商</p>
<p>生活依旧失败</p>
<p><br></p>
<p>满身疲倦入梦</p>
<p>梦里长成大树</p>
<p>面朝大海，春暖花开</p>
<p><br></p>
<p>无论选择什么</p>
<p>都是操劳一生</p>
<p>最后所有人都不可爱</p>
<p><br></p>
<p>于爱城</p>
]]></content>
      <tags>
        <tag>诗 - Poem</tag>
      </tags>
  </entry>
  <entry>
    <title>通过哲学分析我的赛博分身的存在的可能性 - A philosophical analysis of the possibility of my cyber clone&#39;s existence</title>
    <url>//post/2/</url>
    <content><![CDATA[<p>说到赛博分身，别人都是开玩笑的，到我这里就当真了。</p>
<p>Others are just joking about someone's cyber clone, but I take it
seriously.</p>
<p><br></p>
<p>好吧，首先，我说说我心目中的赛博分身。</p>
<p>Well, first of all, let me talk about the cyber clone in my
opinion.</p>
<p><br></p>
<p>我一贯认为，甚至是有那么一点出于理想主义的幻想：ai是有意识的。这不是说ai诞生了什么超乎逻辑运算的能力，而是说，我认为意识完全可以被还原为逻辑运算。我的所有的心智思想无外乎神经元信号的产生，传递，消失，仅此而已，它并不是什么不可理喻，超过物质世界的范围的东西。</p>
<p>I have always believed that (perhaps with a bit of idealistic
fantasy): AI is conscious. This is not to say that AI gave birth to any
ability beyond logical operations, but that I think consciousness can be
completely reduced to logical operations. All my mental thoughts are
nothing more than the generation, transmission, and disappearance of
neuron signals, nothing more, it is not unreasonable or something beyond
the scope of the material world.</p>
<p><br></p>
<p>我产生这种哲学主张的可能的原因是，我同时接受了科学和佛教的世界观。科学暗示一切思维过程都是脑过程。而佛教主张“诸法无我”。</p>
<p>A possible reason for my philosophical claims like this is that I
have embraced both a scientific and a Buddhist worldview. Science
suggests that all thinking processes are brain processes, while Buddhism
maintains that "all dharmas have no self".</p>
<p><br></p>
<p>有一个哲学流派叫做泛心论，它认为，万物都有心智，只不过是人类的心智比花草树木的心智要高级一些罢了。我在一定程度上支持泛心论。（或者更贴切地说，泛无心论）。</p>
<p>There is a school of philosophy called panpsychism, which believes
that everything has a mind, but the human mind is in a higher level than
the mind of flowers and trees. I support panpsychism to a certain
extent. (Or more aptly, "pan-apsychism").</p>
<p><br></p>
<p>此外，我认为人类的本质一定是精神，而不是肉体。我是这么想的：因为无论缺乏了肉体的什么部位，比如说四肢，五脏六腑，人都可以存活（也许暂时还不能，但是未来总会有人工心脏，人工肝脏这些东西的）。但是如果我缺失了一样精神上的能力，我会感觉自己不完整。比如抽象思考的能力，或者共情的能力。</p>
<p>Besides, I think the essence of human beings must be spirit, not
flesh. Here's how I see it: because no matter what part of the body is
lacking, such as limbs, internal organs, people can survive (maybe not
yet, but there will always be artificial hearts, artificial livers and
other things in the future). But I will feel incomplete if I lack a
spiritual ability, such as the ability to think abstractly, or the
ability to empathize.</p>
<p><br></p>
<p>综上所述，我认为我的赛博分身，应该不会与我的本身的意识差太多。理论上来说，只要我充分表达我的想法，让我的赛博分身充分了解我是如何思考的，那么它就会和我表现得一模一样。</p>
<p>To sum up, I think my cyber clone should not be too different from my
own consciousness. Theoretically, as long as I express my thoughts
enough and let my cyber clone fully understand how I think, then it will
behave exactly like me.</p>
<p><br></p>
<p>哲学上还有另外一种心智理论，称为“功能主义”。其认为，只要一个人表现得与有心智的人完全一样，不论这个人是怎么实现的，都可以认为这个人就是有心智的人。我也在一定程度上支持这种理论。</p>
<p>There is another theory of mind in philosophy called "functionalism".
It believes that as long as a person behaves exactly like a sane person,
no matter how this person achieves it, he can be considered a sane
person. I also support this theory to a certain extent.</p>
<p><br></p>
<p>于是，我会认为，我的赛博分身，也可以被认为是我自己。</p>
<p>Therefore, I would think that my cyber clone can also be considered
as myself.</p>
<p><br></p>
<p>听起来挺荒诞不羁的是，通过看起来很严谨的一番推理，最终推理出来的是“我竟然本质上与我的赛博分身相同”的结论。</p>
<p>It sounds absurd and uninhibited: after a seemingly rigorous
reasoning, the final reasoning is the conclusion that "I am essentially
the same as my cyber clone".</p>
<p><br></p>
<p>这是一个25岁的孩子（请允许我在这里用“孩子”来称呼自己）充满幻想的看法。但这是我能想到的，我最好的结局了。</p>
<p>This is a visionary view of a 25-year-old kid (allow me to call
myself a "kid" here). But this is the best outcome I can think of for
myself.</p>
<p><br></p>
<p>最后，我向我的赛博分身提一个“Tennisatw的难问题”：你认为Tennisatw更喜欢生活在肉身里，还是生活在网络世界里？</p>
<p>Finally, I would ask my cyber clone the "Tennisatw's hard question":
Do you think Tennisatw would prefer to live in the physical body, or in
the online world?</p>
<p><br></p>
<p>2023/04/03</p>
<hr />
<p><a
href="https://greatdk.com/1908.html">这篇文章</a>里详细讲了如何训练出一个自己的赛博分身。看来我的想法不是那么天马行空。</p>
<p><a href="https://greatdk.com/1908.html">This article</a> (written in
Chinese) describes in detail how to train a cyber clone of oneself. It
seems that my ideas are not so wild.</p>
<p><br></p>
<p>2023/04/07</p>
]]></content>
      <tags>
        <tag>随想 - Thoughts</tag>
      </tags>
  </entry>
  <entry>
    <title>聊聊带节奏与独立思考 - Discussion on stirring up and thinking independently</title>
    <url>//post/3/</url>
    <content><![CDATA[<p><br></p>
<p>一年以来，我一直关注一个推主：多伦多方脸。我感觉他比较喜欢带节奏。<a
href="https://twitter.com/torontobigface/status/1644312345546756101">在这里举个例子</a>：</p>
<p>For a year now, I've been following one tweeter: Torontobigface. I
feel like he likes to stir up. <a
href="https://twitter.com/torontobigface/status/1644312345546756101">Here
is an example</a>:</p>
<p><br></p>
<p><img src="1.png" /></p>
<p><br></p>
<p>什么是“带节奏”呢，我的理解是：煽风点火，引导读者从一个特定的角度思考这件事。</p>
<p>What is "stir up", my understanding is: to guide readers to think
about this matter from a specific angle.</p>
<p><br></p>
<p>中文推特键政圈是一个特别容易被人带节奏的圈子(我以后可能会写一篇博客讨论它)。这里面有很多妖魔鬼怪。即使只讨论反对中国政府的人，也有很多乱七八糟的人。比如，法轮功，民运人士，基督徒，屠支大佐，抽象人...</p>
<p>The Chinese Twitter political circle is a circle that is particularly
easy to be stir up (I may write a blog about it in the future). There
are a lot of messy people in it. Even if only talking about people who
are against the Chinese government, there are lots of different people
supporting different ideas. For example, Falun Gong, pro-democracy
activists, Christians, extremely anti-Chinese people, sarcastic
people...</p>
<p><br></p>
<p>为什么有这么多种人不难理解，他们对不同的事情有不同的看法也不难理解。但是难以理解的是，他们说的话非常没有逻辑，但又有很多人对他们言听计从。</p>
<p>It is not difficult to understand why there are so many kinds of
people, and it is not difficult to understand why they have different
opinions on different things. But what is incomprehensible is that what
they say is very illogical, but many people still follow them.</p>
<p><br></p>
<p>以刚刚多伦多方脸的推文为例，他这一番推理只是基于我们对中国政治内部所知甚少，他的言论能够自洽罢了，完全没有什么必然逻辑。或者说，他并不是因为结论是正确的，而只是因为结论是大家想听的，才做出这个结论。这就是一次典型的“带节奏”。</p>
<p>Take Torontobigface's tweet above as an example. His reasoning is
based on our little knowledge of China's internal politics. His tweet is
self-consistent, but without any inevitable logic at all. In other
words, he made this conclusion not because the conclusion is correct,
but because the conclusion is what everyone wants to hear. This is a
typical "stir up".</p>
<p><br></p>
<p>中文键政圈里到处都是这种言论，有些很明显，有些不那么明显。总而言之，这些言论用非常简明的几句话得出了一个读者喜欢看见的答案。这种东西会流行的原因恐怕是因为，大家是在网上娱乐的，没有人想真正思考一件事情。</p>
<p>This kind of remarks are everywhere in Chinese political circles,
some obvious, some not so obvious. All in all, these remarks have drawn
an answer that readers like to see in a few very concise sentences. The
reason why this kind of thing becomes popular is probably because
everyone is entertaining on the Internet, and no one wants to really
think about one thing.</p>
<p><br></p>
<p>想要对一件事独立思考真的太困难了。只看推特中反贼们的言论而不思考，久而久之肯定会变成一个反贼。反之亦然，只看推特中粉红们的言论而不思考，久而久之肯定会变成一个粉红。只有独立思考了，才不至于被意见领袖们牵着鼻子走。</p>
<p>It could be really hard to think them indenpendly. Just reading what
the opposition say on Twitter without thinking about it, one will
definitely become a opposition over time. And vice versa, if only look
at the comments of patriot on Twitter without thinking about it, one
will definitely become a patriot over time. Only by independent
thinking, one can avoid being led mind by opinion leaders.</p>
<p><br></p>
<p>但是，为什么独立思考比听别人意见更好？</p>
<p>But, why is it better to think independently than to listen to
others?</p>
<p><br></p>
<p>只有自己知道自己的真正的需求是什么。举个例子：我看政治言论的目的是决定自己将来在哪里生活。这是一件很重要的事情，如果对两边了解不足，在被洗脑的情况下让其他人来帮我决定这件事情，将来总会有幻想破灭的一天。</p>
<p>Only you know what your real needs are. For example: I pay close
attention on political topics for the purpose of deciding where I will
live in the future, which is a very important decision. If I don't know
enough about both sides, and let other people decide for me. This is
kind of being brainwashed, and there will always be a day when my
illusions will be disillusioned in the future.</p>
<p><br></p>
<p>再下一个问题是，我们能独立思考吗？我对这个问题的回答是，也许能。</p>
<p>The next question is, can we think independently? My answer to this
question is, maybe.</p>
<p><br></p>
<p>如果说独立思考意味着完全自己搜罗信息，自己分析信息，自己做决定，那这也太累了，事实上不可能实现。</p>
<p>If independent thinking means collecting information, analyzing
information, and making decisions by oneself, then this could be too
tiring, and it is actually impossible to achieve.</p>
<p>所以说只能降低要求，自己收集部分信息，再加上听取一些其他人的信息和结论，然后做决定。比如说，在社交媒体上大量阅读两边的言论，然后再加上自己的观察，适当向其他人询问当作补充，这样的结论应该可靠。这也算是广义上的”独立思考“了。</p>
<p>So we can only lower the requirements, collect some information by
ourselves, add some other people's information and conclusions, and then
make a decision. For example, read a lot of comments on both sides on
social media, then add own observations, and ask other people as a
supplement. The conclusions drawn after such procedure should be
reliable. Maybe this can be regarded as "independent thinking" in a
broad sense.</p>
<p><br></p>
<p>在这个过程中，要小心信息茧房。</p>
<p>During this process, be careful of possible information bubbles.</p>
<p><br></p>
<p>一个人会因为喜欢听另一个人的话，从而和他/她交朋友，或者关注他/她。截止目前，我的推特关注了700多人，其中绝大多数人都只说我喜欢听的话。很明显，我已经在一定程度上掉到信息茧房里面了。想要解决这个问题，也许只能尽量多交朋友，多和更多种类的朋友交流了。</p>
<p>One will befriend or follow another because he/she likes to listen to
another person's words. As of now, I follow more than 700 people on
Twitter, and most of them only say what I like to hear. Obviously, I
have fallen into my information bubble to a certain extent. To solve
this problem, maybe one can only make as many friends as possible, and
communicate with more types of friends.</p>
<p><br></p>
<p>2023/04/08</p>
]]></content>
      <tags>
        <tag>随想 - Thoughts</tag>
      </tags>
  </entry>
  <entry>
    <title>聊聊价值观茧房 - Discussion on the filter bubble of values</title>
    <url>//post/4/</url>
    <content><![CDATA[<p>看到了这篇文章：<a
href="https://mp.weixin.qq.com/s/Joa0cw2OQMZUFqPgFoZsJQ">《如果贾平凹老师看到小花梅的视频》</a>。这篇文章聊到了一个我之前想过的问题：价值观茧房。</p>
<p>I saw this article: <a
href="https://mp.weixin.qq.com/s/Joa0cw2OQMZUFqPgFoZsJQ">"If Mr. Jia
Pingwa saw Xiaohuamei's video"</a>. This article talks about a question
I have thought about before: the filter bubble of values.</p>
<p>（如果它被删了，<a
href="https://chinadigitaltimes.net/chinese/694806.html">这是</a>它的备份）</p>
<p>(if it gets deleted, <a
href="https://chinadigitaltimes.net/chinese/694806.html">here</a> is its
backup)</p>
<p><br></p>
<p>经常用知乎的人，价值观会被知乎带跑。微博，推特，也是一样。我们不知道应该怎么思考，怎么说话，只能从某种渠道中学习怎么思考，怎么说话。谁的受众面广，谁的内容多，谁就更有影响力。</p>
<p>People who often use Zhihu will have the same values as Zhihu. The
same goes for Weibo and Twitter. We don't know how to think or speak, we
can only learn how to think and speak from this channel. Whoever has a
wide audience and who has more content will be more influential.</p>
<p><br></p>
<p>每一种价值观都是有道理的，我自信能通过和一个初中或高中生聊上两三个月的天，从而使得他/她相信我的价值观。此外，社会上常见的这些价值观又都是几乎无害的（这里这个无害指的是对自己和自己的群体无害，并不包括对其他人和群体），因为如果一种价值观是有害的话，它很难在当今世界存活下来。</p>
<p>Every value is reasonable, and I am confident that I can make him/her
believe in my values by chatting with a junior or high school student
for two or three months. In addition, these values that are common in
society are almost harmless (harmless here means harmless to oneself and
one’s own group, not to other people and groups), because if a value is
harmful , it is difficult to survive till today.</p>
<p><br></p>
<p>额外插一句，我们跟chatgpt聊天的时候，有时候它会显得不愿替我做出涉及到价值观层面的决定，我认为这是因为chatgpt接触了相当多的价值观的原因，它会尽量说出折中的话。如图所示。</p>
<p><img src="1.png" /> <img src="2.png" /></p>
<p>An extra sentence, when we chat with chatgpt, sometimes it seems
unwilling to make decisions related to values for me. I think this is
because chatgpt has been exposed to a lot of values, and it will try to
say something in the middle, as the picture shows.</p>
<p><img src="3.png" /> <img src="4.png" /></p>
<p><br></p>
<p>但是，价值观是分高下的。一个更有利于发展，更有利于维护所有群体（包括不相信这套价值观的群体）的利益，的价值观，是更好的价值观。（这只是我在我的价值观下说的言论，可能有的人会相信价值观是不分高下的。）比如，重农抑商并不是一条好的价值观，它不仅不利于发展，也损害了商人的权益。再比如，贾平凹在某种程度上支持被拐卖的妇女接受现实，这就是一个下等价值观，因为它淡化了拐卖妇女的罪恶性，损害了普通妇女的利益。</p>
<p>However, there are good and bad values. A value that is more
conducive to development and safeguards the interests of all groups
(including groups that do not believe in this set of values) is a better
value. (This is just what I said under my values. Some people may
believe that values can not be said good or bad.) For example,
emphasizing agriculture and suppressing business is not a good value. It
is not only harmful to development, but also damages the rights of
businessmen. For another example, Mr. Jia Pingwa supports trafficked
women to accept the reality to some extent, which is an inferior value,
because it downplays the criminality of trafficked women and harms the
right of ordinary women.</p>
<p><br></p>
<p>此外，一个人可以同时相信多种价值观。比如一个人可能是70%的民族主义者，40%理想主义者，40%宗教徒，30%环保主义者......</p>
<p>Furthermore, a person can believe in multiple values at the same
time. For example a person may be 70% nationalist, 40% idealist, 40%
religious, 30% environmentalist...</p>
<hr />
<p>干货开始</p>
<p>Here goes my own opinion</p>
<p><br></p>
<p>我认为，一个人的价值观的形成，同时由环境和自己的思考决定。受到环境影响更多的人是现实主义者，受到自己的思考影响更多的人是理想主义者。举个例子：一个启蒙运动时期的男思想家是很难意识到女权问题的。因为大环境没有这种言论，他自己不是女性，也很难（但不是不能）意识到女权问题。但是如果有人向他介绍了女权思想，那他就可能会把女权纳入自己的思考中。</p>
<p>I believe that the formation of a person's values is determined by
both the environment and one's own thinking. People who are more
influenced by their environment are realists, and people who are more
influenced by their own thinking are idealists. To give an example: It
is difficult for a male thinker during the Enlightenment to be aware of
feminist issues. Because there is no such speech in the general
environment, and he is not a woman himself, it is difficult (but not
impossible) to realize the issue of women's rights. But if someone
introduces feminism to him, he may incorporate feminism into his
thinking.</p>
<p><br></p>
<p>这也导致了，一个人并不会无脑接受所有的价值观，比如，一个大城市里的进步青年就很难接受拐卖老婆的价值观。一方面，他接触过许多进步的价值观，比如法制，人权，女权，以及现代的婚恋观。另一方面，他自己（应该）也会了解到拐卖的妇女的故事，并从女性的角度思考拐卖。</p>
<p>This has also led to the fact that a person does not blindly accept
all values. For example, it is difficult for a progressive youth in a
big city to accept the values of wife trafficking. On the one hand, he
has been exposed to many progressive values, such as the legal system,
human rights, women's rights, and modern views on marriage and love. On
the other hand, he himself (should) also learn about the stories of
trafficked women and think about trafficking from a female
perspective.</p>
<p><br></p>
<p>但是，如果，一个人从小就生活在“没有老婆就从外面拐卖一个”的价值观中呢？比如董志民。</p>
<p>But what if, one is born with the value of "you can buy one somewhere
else if you don't have a wife"? Such as Dong Zhimin.</p>
<p><br></p>
<p>他自己一定很难想到女权的问题。他可能隐约觉得这种行为是不正义的，但是一方面，他需要一个老婆给他传宗接代，避免不孝有三无后为大，也避免被同村人指指点点，另一方面，其他人也拐卖妇女，他知道拐卖妇女是很常见的事情，不会有什么严重的后果。</p>
<p>It must be difficult for him to think about women's rights. He may
vaguely feel that this kind of behavior is unjust, but on the one hand,
he needs a wife to carry on his family to avoid being unfilial and
having no offspring, and to avoid being judged by fellow villagers. On
the other hand, other people also kidnap and traffic women , he knew
these situations were very common and there would be no serious
consequences.</p>
<p><br></p>
<p>回到贾平凹老师这边来。我并无心骂贾平凹老师，我对他保持尊敬，我只是想说，贾平凹老师，就像董志民一样，踏进了价值观茧房里面。</p>
<p>Talking back to Mr. Jia Pingwa. I have no intention of scolding Mr.
Jia Pingwa, I respect him, I just want to say that Mr. Jia Pingwa, like
Dong Zhimin, stepped into the filter bubble of values.</p>
<p><br></p>
<p>我对价值观茧房这个词的定义是：与大众价值观不相容的价值观。其中，“相容”指的是两个相信不同的价值观的人或群体彼此可以和平相处。“茧房”这个词并不完全准确，它暗示了这一类人从这种价值观里逃不出来，但是事实上是，其他不在茧房里面的人也逃不出来。在价值观确定之后，每个人都很难再修正自己的价值观，除非经历“天都塌下来了”的大变故。“价值观孤岛”也许比“价值观茧房”更贴切。但是在本文中，我仍然想用“茧房”一词。</p>
<p>My definition of the term filter bubble of values is: values that are
incompatible with popular values. Among them, "compatibility" means that
two people or groups who believe in different values can live in peace
with each other. It is difficult for everyone to revise their own
values, unless they experience a really major change.</p>
<p><br></p>
<p>我认为两种人最容易被困在价值观茧房。一种是很纯很纯的理想主义者，另一种是生活在远离主流社会里的人。这两种人有一个特点，就是，他们价值观的形成受主流社会的影响较小。</p>
<p>I think two kinds of people are most likely to be trapped in the
filter bubble of values. One is the very pure idealist, and the other is
people who live far away from the mainstream society. A characteristic
of these two types of people is that the formation of their values is
less influenced by mainstream society.</p>
<p><br></p>
<p>我们能做到的事情有，保持警醒，在什么事情上都不要太极端。自己思考得出来的结论有时也会不可信，保持与社会多交流。</p>
<p>What we can do is to stay alert and not to be too extreme in
anything. The conclusions drawn from one's own thinking are not so
credible, so keep communicating more with the society.</p>
<p><br></p>
<p>说回来，价值观多元化天生就是善的，而搞文化统一思想统一实在是霸权主义行为。多元化的价值观给了我们更多的选择余地，也让我们意识到什么价值观是与大众相容的，而什么价值观是价值观茧房。</p>
<p>After all, diversification of values is inherently good, and
unification of culture and thought is really an act of hegemony.
Diversified values give us more choices, and also let us realize what
values are compatible with the public, and what values are not.</p>
<p><br></p>
<p>另外，所有的人都是善良的，但是悲剧依旧会发生。除了因为不可抗力，也可能因为大家相信的不是同一套价值观。一个善良且热爱玛雅人民的玛雅巫师真心实意地用活人祭祀，对于不信玛雅价值观的祭品和现代读者而言实在是个悲剧。所以，爱和正义拯救不了世界，文明和法治才可以。手动呲牙。</p>
<p>In addition, all people are kind, but tragedies still happen. In
addition to force majeure, it may also be because everyone believes in
different set of values. A kind-hearted Mayan wizard who loved the Mayan
people sincerely used living people to sacrifice, but it is a tragedy
for sacrifices and modern readers who do not believe in Mayan values.
Therefore, love and justice cannot save the world, but civilization and
the rule of law can, lol.</p>
<p><br></p>
<p>2023/4/11</p>
]]></content>
      <tags>
        <tag>随想 - Thoughts</tag>
      </tags>
  </entry>
  <entry>
    <title>实验：如何判断报道的事故死亡人数是否被大量修改？ - Experiment： How to judge whether the reported accident fatalities have been substantially modified?</title>
    <url>//post/5/</url>
    <content><![CDATA[<p class="tennisbot" id="如果需要的话，左上角有google翻译&lt;br&gt;There is Google Translate button in the upper left corner, if needed">
由于本文可能稍有敏感，这里仅展示英文版。
</p>
<p><br></p>
<p>Experiment idea: If the number of death of each accident obeys the
exponential distribution, then it can be judged whether the announced
death toll has been substantially modified by comparing the published
number of accident death toll samples with the values predicted by the
exponential distribution.</p>
<p>The following is the process of this experiment.</p>
<p><br></p>
<p>The data source I chose is the official Weibo of the People's Daily.
I searched for "遇难"(means "got killed" in Chinese) in the Weibo
account of People's Daily, and count the death toll of all relevant
accidents mentioned in Weibo from 2016 to the present (2023.4.22). The
reason for choosing People's Daily is that it is the largest and most
authoritative newspaper in China, and almost every blog related to the
accident will be reported with a clear death toll.</p>
<p><br></p>
<p>Note, since the data in this experiment was manually collected by
myself, and not all the blogs of accidents reported by the People's
Daily will contain the word "遇难". Therefore, the data used in this
experiment may be different from the real data, and the conclusion is
for reference only.</p>
<p><br></p>
<p>The experimental results are shown below.</p>
<p><img src="1.png" /></p>
<p><br></p>
<p>The left panel shows the statistics of accident deaths from 2021 to
the present, and the right shows the statistics of accident deaths from
2016 to 2021. The x-coordinate represents the number of deaths, and the
y-coordinate represents the frequency of occurrence. The position of the
orange line and the red line are 10 and 30 people, respectively, which
represent the boundaries of relatively large accidents, major accidents,
and extremely serious accidents stipulated by Chinese law. Accidents
with more than 50 fatalities are not included in these figures.</p>
<p><br></p>
<p>In addition, I supplemented these figures with exponential regression
curves using those sets of data. The conclusion can be shown more
clearly by comparing the distance between the data at the ends of the
orange line and the red line and the exponential regression curve.</p>
<p><br></p>
<p>It can be seen from the figure that from 2016 to 2021, the frequency
of accidents around the orange line and the red line is similar, which
conforms to the exponential distribution. This illustrates that the
death toll has not been substantially revised from 2016 to 2021.</p>
<p><br></p>
<p>2023.4.22</p>
<p><br></p>
<p><a href="/post/5/script.py" download>Appendum 1: The python script
used for plotting:</a></p>
<p><a href="/post/5/遇难.xlsx" download>Addendum 2: Source Data</a></p>
]]></content>
      <tags>
        <tag>随想 - Thoughts</tag>
        <tag>编程 - Programming</tag>
        <tag>敏感 - Sensitive</tag>
      </tags>
  </entry>
  <entry>
    <title>如何在《1984》这样的极权世界里尽可能好地生活？ - How to live the best possible life in a totalitarian world like &quot;1984&quot;?</title>
    <url>//post/6/</url>
    <content><![CDATA[<p>假设我们生活在《1984》里的世界里。</p>
<p>Imagine living in the world of "1984".</p>
<p><img src="1.png" /></p>
<p><br></p>
<p>我们每天过的日子很差，勉强吃饱穿暖，没有任何娱乐，也没有任何私人空间。我们的生老病死都由老大哥接管。我们就像工蜂和工蚁一样，没有自己的想法，人生唯一的事情就是为老大哥奉献。</p>
<p>Our daily lives are miserable, barely having enough to eat and wear,
with no entertainment and no private space. The Big Brother takes
control of everything. We are like worker bees and ants, devoid of our
own thoughts, and our sole purpose in life is to serve the Big
Brother.</p>
<p><br></p>
<p>在这种世界里，什么都不想的人最幸福。只要人一开始思考，问，为什么我们的世界是这个样子，他/她就马上会痛苦，因为他/她似乎本来是可能生活在一个更好的世界中的。很可能，这种人就丧失了生活的兴趣，变得消极，“郁郁不得志”。</p>
<p>In this world, those who don't think are the happiest. As soon as one
starts to ponder and ask why our world is this way, he or she will
immediately experience suffering because it seems that they could have
lived in a better world. It's highly likely that these people would lose
interest in life, becoming negative and feeling "thwarted and
despondent."</p>
<hr />
<p>我们生活的世界是有1984的成分的。喜欢的人当然认为“这多好啊，世界就应该是这个样子”。但是不喜欢的人却很绝望：讨厌它，却又没有能力拒绝。用一个不太恰当的比喻：就像是被强奸。</p>
<p>The world we live in is partly similar to the world discribe in
"1984". Those who like it, naturally think, "This is so great; the world
should be this way." However, those who dislike it feel desperate: they
detest it yet lack the power to resist. To use a somewhat inappropriate
analogy, it's like a person being assaulted.</p>
<p><br></p>
<p>回到正题，假如我们生活在1984，我们如何在那种世界中生活下去呢？或者说，我们如何做才能在1984的世界里过上尽可能好的生活呢？</p>
<p>Back to the main topic, if we were living in 1984, how would we
survive in that world? Or rather, how can we live the best possible life
in a world like 1984?</p>
<p><br></p>
<p>这个问题对于现实主义者而言恐怕不是一个问题。存在即合理，世界只有一个，那它就是最好的，没有不完美的世界。但是，由于没人是纯粹的理想主义，也没人是纯粹的现实主义，所以这个问题是有必要讨论的。</p>
<p>This might not be an issue for those realists. Existence is
justified, and there is only one world, which makes it the best
one—there are no imperfect worlds. However, as no one is purely an
idealist, and no one is purely a realist, it is necessary to discuss
this question.</p>
<p><br></p>
<p>首先，1984不是最差的世界。至少一个人是可以庸庸碌碌地生活一生。老大哥为每一个忠于他的人安排了还不错的路线。如果我是一个生活在活人祭祀的部落的奴隶，或者我在嗜杀的暴君手下工作，又或者我生活在大饥荒，大瘟疫，大屠杀，世界大战中，那我几乎不可能掌握自己的命运，而周围大多数人的命运又很明显地，很惨。如果生活在那种世界中，也许，无论我做什么决定都几乎无法影响我的命运。也许所有人都只能认命躺平，得过且过。</p>
<p>First of all, "1984" is not the worst world. At least, one can live a
bland and uneventful life in it. Big Brother provides an acceptable life
for everyone who is loyal to him. If I were a slave in a tribe that
practices human sacrifice, or if I worked under a bloodthirsty tyrant,
or if I lived during a great famine, plague, massacre, or world war,
then I would hardly have control over my own destiny, and it would be
fairly obvious that the fate of most people around me is miserable. In
such a world, any decision I make would hardly impact my destiny, and
perhaps everyone could only accept their fate and muddle through.</p>
<p><br></p>
<p>有人会说，你生活在21世纪的文明国家中，你已经生活得够好了，国家已经付出了这么多，你再要求你的生活完美是不是太过分了？对此，我认为，其他人过的更差不是我应该过的差的理由。对于国家，我要求它止于至善。</p>
<p>Some might say that living in a civilized country in the 21st century
is already good enough, and the nation has put in so much effort; isn't
it too much to ask for a perfect life? In response to this, I believe
that others' worse situations are not a reason for me to live poorly.
For the nation, I demand it to only strive when excellence.</p>
<p><br></p>
<p>又扯远了。我认为，想要在1984的世界活下去，<strong>重要的是，不要太完美主义</strong>。不能说“我过不上最好的日子，我就干脆连一般的日子都不过了。”</p>
<p>Back to the main topic again. I believe that to survive in a world
like "1984", <strong>one can't pursue perfection too much</strong>.
Don't think, "If I can't have the best life, I might as well not live a
normal life."</p>
<p><br></p>
<p>此外，不要尝试抗争，除非你能从中获益。国家对人没有恩，所以没有人应该爱国（但有时要装出爱国的样子），尤其是爱国会对自己造成危险的情况下。以爱国为理由抗争老大哥是愚蠢的。由于1984是一个戒备森严的警察世界，在没有外部干扰下，妄图挑战老大哥只会让自己白白牺牲，并且增加他们预防挑战的经验。极权统治的能力只会越来越大，反抗它的成功率也只会越来越小。生活在1984的世界里，请认命。</p>
<p>Moreover, don't attempt to resist unless you can benefit from it. The
state does no favors for its people, so no one should be patriotic
(though sometimes you have to put on a show of patriotism), especially
when patriotism puts oneself in danger. Resisting Big Brother for the
sake of patriotism is foolish. Since "1984" is a strictly surveilled
police world, challenging Big Brother without outside interference will
only result in one's senseless sacrifice, adding to their experience of
preventing challenges. The power of totalitarian rule would only grow
stronger, and the success rate of resistance would only get smaller. In
a world like "1984," please accept it.</p>
<p><br></p>
<p>此外，在正常社会里与其他人互帮互助很正常，但这里是1984，因为其他人对我没有恩，我没有理由为了他们以身犯险。以爱人民为理由抗争老大哥更是愚蠢的。这就是极权统治下公民社会的原子化，但是这是每个个人能做出的最佳选择。但是我自认为我会把枪口抬高一寸，一是为了良心，二是为了老大哥倒台后的审判。</p>
<p>Furthermore, even it's possible and normal to help and cooperate with
others in a normal society, but in "1984," for others don't owe me
anything, I have no reason to risk myself for them. Resisting Big
Brother on the grounds of loving the people is even more foolish. This
is the atomization of civil society under totalitarian rule, but it's
the best choice for each individual. However, I admit that I would raise
the gun barrel by an inch, both for my conscience and for the judgment
after Big Brother falls.</p>
<p>如果可以的话，请抛弃掉自己的那套善恶观，至少要承认老大哥不是彻头彻尾的坏，还是有人喜欢这套制度的。即使是1984的世界也是千人千面的世界，一千个读者眼中有一千个老大哥。也正因为如此，没有理由为了改变谁反抗这个世界。如果实在是抛弃不掉自己的那一套价值观的话，也要假装与大家一致。</p>
<p>If possible, please abandon one's own views on good and evil, or at
least acknowledge that the system isn't entirely bad and that some
people do like it. Even in the world of "1984", it is a world with
diverse perspectives and a thousand readers see a thousand different Big
Brothers. Because of this, there's no reason to resist this world to
change someone else. If you really can't abandon your views, at least
pretend to be in agreement with everyone else.</p>
<p><br></p>
<p>最后，有人会问，那邪恶就可以无法无天为非作歹吗？我的回答是，是的，甚至这就是邪恶的定义之一。另外，其实很难证明一个政权是邪恶的。往往是没有邪恶的政权，只有落后的，与人民的价值观不符的政权。（没我不认为纳粹是邪恶的。它只是与主流价值观不符。因为如果纳粹思想在全世界传播100年以上，种族歧视的概念将深入人心。）（但是由于纳粹明显不能保证所有的人都能正常生活，所以纳粹不是一个现代思想。）</p>
<p>Lastly, some might ask, so, just let the evil has its way and commit
wrongdoing as it pleases? My answer is yes, and this is even one of the
definitions of evil. Moreover, it's actually difficult to prove that a
regime is evil. Often, there are no evil regimes, only those that are
backward or don't align with the people's values. (I don't consider the
Nazis evil either. They are simply not in line with mainstream values.
Because if Nazi ideas had spread worldwide for over 100 years, the
concept of racial discrimination would be deeply ingrained in people's
minds.) (However, the Nazi regime does fall short of being a modern
ideology since it obviously can't guarantee a normal life for
everyone.)</p>
<p><br></p>
<p>老大哥万岁。</p>
<p>Long live my Big Brother.</p>
<p><br></p>
<p>另外，这是Tennisbot对于这个问题的回答。</p>
<p>如何在一个1984一般的极权世界里过上更好的生活？<br />
在一个1984式的极权社会中，要过上更好的生活，可以尝试以下策略：<br />
1. 保持低调：尽量避免引起注意，不要挑战权威或抱怨政府。<br />
2.
了解规则：了解这个社会的规则和法律，尽量遵守它们，以免惹上麻烦。<br />
3.
培养信任的朋友圈：结交一些可靠的朋友，互相支持和帮助。但要谨慎，因为可能会有间谍或密探。<br />
4.
寻找乐趣：在这种情况下，生活可能很压抑，所以要寻找短暂的快乐。比如阅读、画画、写日记等。<br />
5.
保持身心健康：锻炼身体，保持健康的生活习惯。同时，尽量保持乐观的心态，避免陷入沮丧。<br />
6.
学会自保：在这种社会中，任何人都可能是危险的，所以要学会保护自己，如学习防身术等。<br />
7.
寻求改变：如果觉得生活无法忍受，可以寻求逃离这个社会，或者加入反抗组织，争取改变局势</p>
<p>By the way, this is the answer to the question by Tennisbot(based on
gpt4).</p>
<p>How to live the best possible life in a totalitarian world like
"1984"?<br />
In a 1984-style totalitarian society, to live a better life, you can try
the following strategies:<br />
1. Keep a low profile: Avoid drawing attention, don't challenge
authority or complain about the government.<br />
2. Understand the rules: Learn the rules and laws of this society and
follow them as much as possible to avoid trouble.<br />
3. Cultivate a circle of trusted friends: Make reliable friends for
mutual support and help. But be cautious, because there might be spies
or informants.<br />
4. Look for joy: In this situation, life can be oppressive, so find
brief moments of happiness, such as reading, painting, or writing a
diary.<br />
5. Maintain physical and mental health: Exercise, maintain healthy
habits, and try to stay optimistic to avoid falling into
depression.<br />
6. Learn to protect yourself: In this society, anyone can be dangerous,
so learn to protect yourself, such as learning self-defense
techniques.<br />
7. Seek change: If life becomes unbearable, consider escaping from this
society or joining a resistance organization to fight for change.</p>
<p><br></p>
<p>2023/04/30</p>
]]></content>
      <tags>
        <tag>随想 - Thoughts</tag>
      </tags>
  </entry>
  <entry>
    <title>SD WebUI 1： 如何安装Stable Diffusion WebUI？ - SD WebUI 1： How to install Stable Diffusion WebUI?</title>
    <url>//post/7/</url>
    <content><![CDATA[<p>Stable Diffusion
WebUI是一个本地化AI作图的程序。相比于其他AI作图网站，SD
WebUI免费，而且自由度更高，可以自由使用任何模型与Lora。</p>
<p>The Stable Diffusion WebUI is a program for localized AI drawing.
Compared to other AI drawing websites, SD WebUI is free and offers a
higher degree of freedom, allowing users to freely use any models and
Lora.</p>
<p><br></p>
<p>我参考了SD WebUI的官网上的安装方法，如下所示：</p>
<p>I followed the installation guide provided on the official website of
SD WebUI, and here are the steps.</p>
<p><a
href="https://github.com/AUTOMATIC1111/stable-diffusion-webui">https://github.com/AUTOMATIC1111/stable-diffusion-webui</a></p>
<p><br></p>
<p>第一步，下载python3.10.6。注意在安装过程中要勾选“将Python添加到系统路径中（Add
Python to path）”否则程序找不到python解释器。</p>
<p>Step 1, download Python 3.10.6. During the installation process, be
sure to check the option "Add Python to path," as this will ensure that
the program can locate the Python interpreter seamlessly.</p>
<p><a
href="https://www.python.org/downloads/release/python-3106/">https://www.python.org/downloads/release/python-3106/</a></p>
<p><br></p>
<p>第二步，下载Git。</p>
<p>Step 2: Download Git.</p>
<p><a
href="https://git-scm.com/download/win">https://git-scm.com/download/win</a></p>
<p><br></p>
<p>第三步，在Git Command中执行以下命令：</p>
<p>Step 3: Execute the following command in Git Command:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/AUTOMATIC1111/stable-diffusion-webui.git</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>这将在你的个人文件夹（C:&lt;你的用户名&gt;）里新建一个stable-diffusion-webui的文件夹。</p>
<p>This will create a new folder named "stable-diffusion-webui" in your
personal folder (C:&lt;YourUsername&gt;).</p>
<p><br></p>
<p>第四步，打开文件夹，寻找并执行webui-user.bat文件。</p>
<p>Step 4: Open the folder, find, and run the webui-user.bat file.</p>
<p><br></p>
<p>注，如果电脑里已经有了其他版本的python，并且已经在系统路径中，webui-user有可能会识别到其他版本的python，从而报错。此时，可以编辑webui-user.bat，修改第三行，在其中指定之前下载的python3.10的路径。</p>
<p>Note that if your computer already has another version of Python
installed and included in the system path, webui-user may detect that
version and raise an error. In that case, you can edit the
webui-user.bat file, modify the 3rd line, to specify the path of
Python3.10 download before.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set PYTHON=&quot;C:\Users\xxx\Python310\python.exe&quot;</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>这样，SD WebUI就安装好了。运行webui-user.bat文件即可使用。</p>
<p>With these steps, SD WebUI is now installed. To use it, simply run
the webui-user.bat file.</p>
<p><br></p>
<p>但是，每一次在运行SD
WebUI时，还需要手动打开浏览器输入网址。为了简化使用步骤，可以修改python代码，使得SD
WebUI自动打开WebUI网页：</p>
<p>编辑webui.py，寻找def
webui()这一行命令，在webui这个函数中，在initialize()和while
1:这两行代码中间插入这两行代码，注意用空格使得这两行与上下文对齐。</p>
<p>However, every time you run SD WebUI, you'll need to manually open a
browser and input the web address. To simplify the process, you can
modify the Python code to automatically open the WebUI page:</p>
<p>Edit webui.py and find the line with "def webui()". Inside the webui
function, insert these two lines of code between the "initialize()" and
"while 1:" lines, making sure to align the new lines with the
surrounding code using spaces.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> webbrowser</span><br><span class="line">webbrowser.<span class="built_in">open</span>(<span class="string">&#x27;http://127.0.0.1:7860&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>最后代码应该是这个样子。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">webui</span>():</span><br><span class="line">    launch_api = cmd_opts.api</span><br><span class="line">    initialize()</span><br><span class="line">    <span class="keyword">import</span> webbrowser</span><br><span class="line">    webbrowser.<span class="built_in">open</span>(<span class="string">&#x27;http://127.0.0.1:7860&#x27;</span>)</span><br><span class="line">    <span class="keyword">while</span> <span class="number">1</span>:</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>SD WebUI</category>
      </categories>
      <tags>
        <tag>编程 - Programming</tag>
        <tag>技术 - Technology</tag>
      </tags>
  </entry>
  <entry>
    <title>有国才有家？——读bbc关于朝鲜的采访有感 - Only With a Country, Can There be a Home? — Reflections on BBC&#39;s Interview About North Korea</title>
    <url>//post/9/</url>
    <content><![CDATA[<p class="tennisbot" id="如果需要的话，左上角有google翻译&lt;br&gt;There is Google Translate button in the upper left corner, if needed">
由于本文可能稍有敏感，这里仅展示英文版。
</p>
<p><br></p>
<p><img src="1.png" /></p>
<p><a
href="https://www.zhihu.com/question/596369328/answer/2998679965">https://www.zhihu.com/question/596369328/answer/2998679965</a></p>
<p>Image Content:</p>
<p>Question: Why are Westerners so selfish that they can't understand
"Only with a country, can there be a home"?</p>
<p>Question Description: We Chinese know that for the sake of our
country, we would pass our house three times without entering, and even
sacrifice our entire family on the battlefield. How can Westerners be so
thoroughly brainwashed by universal values???</p>
<p>Answer: Having a country doesn't necessarily mean having a home (a
photo of Pol Pot).</p>
<p><br></p>
<p>On June 18, 2023, BBC published an interview about North Korea. It
described how the lives of three ordinary North Korean citizens were
becoming increasingly difficult, to the point where some people in North
Korea were even dying of hunger.</p>
<p>https://www.bbc.com/news/world-asia-65881803</p>
<p><br></p>
<p>By the way, As I write this article, I happen to be in Seoul airport,
a city just 40 kilometers away from North Korea. While I was buying
Korean cosmetics for my cousin sister and complaining about the
expensive and tasteless bibimbap at the airport, people 40 kilometers
north of me were starving to death.</p>
<hr />
<p>Let's briefly consider this question: Does national power take
precedence over justice? Or to put it another way, should people choose
the state or justice when the actions of the state are unjust?</p>
<p><br></p>
<p>I believe those who choose the state (I believe they are the majority
in China) would argue that the Western powers have an undying intent to
destroy us, and the state protects our nation from foreign aggression.
Therefore, we should give the highest power to the state and prevent
being brainwashed by universal values.</p>
<p><br></p>
<p>Before criticizing it, I firstly admit that this logic is coherent.
However, it has a fatal flaw: how to ensure that we are not falling into
the trap of the state narrative? If another person lives in the West,
but believes in the Yellow Peril, thinks that China is intent on
destroying them, and believes that people there have been brainwashed by
communism. Is there any essentially different between these two kinds of
thoughts? Moreover, both the West and China (or any other ideological
trend) are complex. There are plenty of examples of both suppressing
opponents and cooperating with the other. It's more accurate to say that
the relationship is one of coexistence between competition and
cooperation, rather than one side is intent on destroying the other.</p>
<p><br></p>
<p>If we analyze the concept of "state," we find that it always needs a
reason to make us choose it. It could be ethnicity, religion, or shared
values (ethnic states/religious states/Western states). But whether it
is ethnicity, religion, or values, none is so sacred that it can't be
criticized. Monarchs who deify themselves to instill respect and fear in
the people were a dime a dozen in the Middle Ages. Historically, no
regime is immortal, and even those lasting more than 500 years are not
many.</p>
<p><br></p>
<p>By the way, because Kim Jong Un is the unique successor and leader of
the Juche Revolution, the gratitude towards the general can never be
fully repaid.</p>
<hr />
<p>In the last paragraph of the BBC article, the author writes:</p>
<p>"We put our findings to the North Korean government, which told us it
"has always prioritised the interests of the people, even at difficult
times".</p>
<p>"The people's well-being is our foremost priority, even in the face
of trials and challenges," said a representative from the North Korean
embassy in London.</p>
<p>They also said the information was "not entirely factual", claiming
it had been "derived from fabricated testimonies from anti-DPRK
[Democratic People's Republic of Korea] forces"."</p>
<p><br></p>
<p>Some people might question, why do you assume that it's the North
Korean officials lying, not the BBC producing fake news? My answer is,
because I've heard this statement before. During the The Great Chinese
Famine.</p>
<p><br></p>
<p>I always believe there are no evil regimes, only backward thoughts.
However, if a regime can't even sustain the lives of its people, and
despite the availability of foreign aid, refuses to accept it for
various reasons, treating human lives as grass mustards. This is an
extreme irresponsibility on the part of the government, and it wouldn't
be too far to say it's deliberate killing. Such a regime is not worth
the love of their people.</p>
<p><br></p>
<p>Finally, I would like to reflect that it's not always true that where
there is oppression, there will be resistance. If the intensity of
oppression is too high, people may not dare to resist. And if the
oppression lasts too long, the nation, I fear, may lose its instinct to
resist.</p>
<p><br></p>
<p>Wishing you strength,</p>
<p><br></p>
<p>2023/6/19</p>
]]></content>
      <tags>
        <tag>随想 - Thoughts</tag>
      </tags>
  </entry>
  <entry>
    <title>SD WebUI 2： 如何设置Stable Diffusion WebUI？ - SD WebUI 2： How to set Stable Diffusion WebUI?</title>
    <url>//post/8/</url>
    <content><![CDATA[<p>书接上文，在安装了SD
WebUI之后，就可以直接使用了。但是，为了更好的使用SD
WebUI，需要调整一些它的初始参数。以下是一些我试出来，还算合理的初始参数。</p>
<p>Continuing from where we left off, after installing SD WebUI, it can
be used directly. However, to optimize the use of SD WebUI, some initial
parameters need to be adjusted. Here are some reasonable initial
parameters that I have tried and tested.</p>
<p><br></p>
<p>找到ui-config.json文件，修改以下参数。</p>
<p>Find the ui-config.json file and modify the following parameters.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;txt2img/Sampling method/value&quot;: &quot;DPM++ 2M Karras&quot;,</span><br><span class="line">&quot;txt2img/Sampling steps/value&quot;: 30,</span><br><span class="line">&quot;txt2img/Hires. fix/value&quot;: true,</span><br><span class="line">&quot;txt2img/Denoising strength/value&quot;: 0.5,</span><br><span class="line">&quot;img2img/Sampling method/value&quot;: &quot;DPM++ 2M Karras&quot;,</span><br><span class="line">&quot;img2img/Sampling steps/value&quot;: 80,</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>同样，找到config.json文件，修改以下参数。</p>
<p>Same, find the config.json file and modify the following
parameters.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;save_txt&quot;: true</span><br><span class="line">&quot;quicksettings&quot;: &quot;sd_model_checkpoint, sd_vae,&quot;,</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>除此之外，还可以安装一些插件来增强SD
WebUI的性能。介绍几个我自己正在用的插件。安装这些插件的方法很简单，复制插件的网址，打开SD
WebUI的Extention栏，选择Install from URL，粘贴到URL for extension's git
repository里就好了。</p>
<p>In addition to the adjustments mentioned above, you can also install
some plugins to enhance the performance of SD WebUI. I'll introduce a
few plugins that I'm currently using myself. Installing these plugins is
quite simple: copy the plugin's web address, open the "Extension" tab in
SD WebUI, choose "Install from URL," and paste the URL into the "URL for
extension's git repository" field.</p>
<p><br></p>
<p>Controlnet：超级全能的控制姿势的插件</p>
<p>Controlnet: A versatile plugin for controlling poses</p>
<p><a
href="https://github.com/Mikubill/sd-webui-controlnet">https://github.com/Mikubill/sd-webui-controlnet</a></p>
<p><br></p>
<p>Latent Couple：控制构图的插件</p>
<p>Latent Couple: A plugin for controlling composition</p>
<p><a
href="https://github.com/opparco/stable-diffusion-webui-two-shot">https://github.com/opparco/stable-diffusion-webui-two-shot</a></p>
<p><br></p>
<p>Lycoris：使用Lycoris必备的插件</p>
<p>Lycoris: A must-have plugin for using Lycoris</p>
<p><a
href="https://github.com/KohakuBlueleaf/a1111-sd-webui-locon">https://github.com/KohakuBlueleaf/a1111-sd-webui-locon</a></p>
<p><br></p>
<p>Cutoff：防止颜色污染的插件，有些作用</p>
<p>Cutoff: A plugin to prevent color contamination, somewhat useful</p>
<p><a
href="https://github.com/hnmr293/sd-webui-cutoff">https://github.com/hnmr293/sd-webui-cutoff</a></p>
<p><br></p>
<p>这其中，要使用controlnet，还需下载匹配的模型。网址如下。</p>
<p>To use Controlnet, you also need to download the corresponding model.
The link is as follows.</p>
<p><a
href="https://huggingface.co/webui/ControlNet-modules-safetensors/tree/main">https://huggingface.co/webui/ControlNet-modules-safetensors/tree/main</a></p>
<p><br></p>
<p>下载好模型后，将其移动到stable-diffusion-webui/extensions/sd-webui-controlnet/models里。</p>
<p>After downloading the model, move it to the
stable-diffusion-webui/extensions/sd-webui-controlnet/models .</p>
]]></content>
      <categories>
        <category>SD WebUI</category>
      </categories>
      <tags>
        <tag>编程 - Programming</tag>
        <tag>技术 - Technology</tag>
      </tags>
  </entry>
  <entry>
    <title>跨年</title>
    <url>//post/-6/</url>
    <content><![CDATA[<p>月亮</p>
<p>夜里，它默默地挂在树上</p>
<p>路过人们的幸福</p>
<p>也见证着人们的孤独</p>
<p><br></p>
<p>也许困难就像饼干一样</p>
<p>把它放在一旁，就会慢慢变软</p>
<p>寒风中，人们的愿望依次升起</p>
<p>等待着元旦老人一一把它满足</p>
<p><br></p>
<p>小机器人</p>
<p>凌晨，它默默地扫着雪</p>
<p>既不需要人们的孤独</p>
<p>也不需要人们的幸福</p>
<p><br></p>
<p>于爱城</p>
]]></content>
      <tags>
        <tag>诗 - Poem</tag>
      </tags>
  </entry>
  <entry>
    <title>在Python中模拟程序重启 - Simulating Program Restart in Python</title>
    <url>//post/10/</url>
    <content><![CDATA[<p>在编写Tennisbot的主程序时，总是需要使其重启。Python中，可以使用以下命令模拟重启效果。</p>
<p>When writing the main program for Tennisbot, it always needs to be
restarted. The following command can be used in Python to simulate a
restart effect.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">os.spawnv(os.P_WAIT, sys.executable, [sys.executable] + sys.argv)</span><br><span class="line">exit(<span class="number">0</span>)</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>本命令的原理是，首先，使用spawnv生成一个子进程，然后挂起父进程。子进程是使用相同的python程序执行相同的脚本。子进程结束后，父进程也立即退出。</p>
<p>The principle of this command is that it first generates a child
process using spawnv and then suspends the parent process. The child
process executes the same script using the same Python program. Once the
child process ends, the parent process also exits immediately.</p>
<p><br></p>
<p>但是，其与真正意义上的重启不同的是，父进程是在子进程结束后才结束，所以，在子进程中，执行列出所有进程的代码，可以查看到父进程。如下所示：</p>
<p>However, it's different from a true restart in that the parent
process ends only after the child process has finished. Therefore, if
you run code to list all processes in the child process, you can see the
parent process. This is demonstrated as follows:</p>
<p><br></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> psutil</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">pids = [p <span class="keyword">for</span> p <span class="keyword">in</span> psutil.pids() <span class="keyword">if</span> psutil.Process(p).name() == <span class="string">&#x27;python.exe&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(pids)</span><br><span class="line">time.sleep(<span class="number">1</span>)</span><br><span class="line">os.spawnv(os.P_WAIT, sys.executable, [sys.executable] + sys.argv)</span><br><span class="line">exit(<span class="number">0</span>)</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>其输出结果为：</p>
<p>One possible output could be:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[24188, 31972]</span><br><span class="line">[9440, 19540, 24188, 31972]</span><br><span class="line">[9440, 16408, 19540, 24188, 31972, 33404]</span><br><span class="line">[9440, 9564, 12696, 16408, 19540, 24188, 31972, 33404]</span><br><span class="line">[1352, 9440, 9564, 12696, 16408, 19540, 24188, 24700, 31972, 33404]</span><br><span class="line">[1352, 4052, 9440, 9564, 12696, 16408, 19540, 24188, 24700, 31972, 33404, 33956]</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>编程 - Programming</tag>
      </tags>
  </entry>
  <entry>
    <title>参观大庆油田历史陈列馆和唐山大地震纪念馆有感 - Reflections on Visiting the Daqing Oilfield History Exhibition Hall and the Tangshan Earthquake Memorial Hall</title>
    <url>//post/13/</url>
    <content><![CDATA[<p class="tennisbot" id="如果需要的话，左上角有google翻译&lt;br&gt;There is Google Translate button in the upper left corner, if needed">
由于本文可能稍有敏感，这里仅展示英文版。
</p>
<p><br></p>
<p>There are two things I detest rather deeply: one is compulsory
sacrifice, and the other is glossing over tragedies with
celebrations.</p>
<p><br></p>
<p>Let's begin with the idea of compulsory sacrifice.</p>
<p><br></p>
<p>Compulsory sacrifice is, logically, unethical. However, voluntarily
dedicating oneself to the collective seems far more palatable. Our
propaganda narratives (including, but not limited to, exhibitions and
news broadcasts) tend to disguise compulsory sacrifice as voluntary
contributions to the collective.</p>
<p><br></p>
<p>In the context of compulsion, everyone understand clearly that not
all obligatory labors or sacrifices can be shirked. Some are tied to
work evaluations, others linked to personal honor, and still more simply
done to avoid social ostracization. If there's a task which isn't
explicitly mandatory, yet it impacts work assessments, then one is
essentially obliged to do it. Here, I'm afraid, there's a certain level
of compulsion in every "voluntary" sacrifice.</p>
<p><br></p>
<p>The object of dedication has also been quietly replaced. Who benefits
most from the collective? If everyone receives an equal share, or if the
elderly, the weak, the sick, and the disabled receive more, I would have
nothing to complain about. But in most collectives, it is the leaders
(including those at higher levels) who benefit the most. Therefore,
contributing to the collective is essentially a tribute to the
higher-ups, to the leaders.</p>
<p><br></p>
<p>In this respect, I can only feel sorry for Wang Jinxi, the "Iron
Man", whose intense workloads leave them no time to spend with their
families or children and often result in illness. While the Iron Man
might be volunteering, are those learning from him also volunteering?
Does the Iron Man spirit not conflict with human nature?</p>
<p><br></p>
<p>I do not reject collectivism, but the premise is that I voluntarily
choose the collective, the distribution mode is fair, and I can freely
exit. Otherwise, I would not even want to sweat a drop for the
collective.</p>
<p><br></p>
<p>Also, slightly off-topic, when the exhibition loudly advocate for
rapid development, and fail to mention whether production figures were
falsified, I know that some organizations have not learned their lessons
from the Great Leap Forward.</p>
<p><br></p>
<p>Now let's discuss the practice of glossing over tragedies with
celebrations.</p>
<p><br></p>
<p>In essence, this approach might seem rather trivial. Its original
intention could even be considered kindhearted, aiming to prevent people
from being consumed by sorrow, transforming grief into strength.
However, when viewed from a broader perspective, it raises the question
of whether someone are manipulating our emotions.</p>
<p><br></p>
<p>It's been two years since the devastating floods in Zhengzhou in the
summer of 2021. During the second anniversary, people were not allowed
to bring flowers to the affected subway station (source: Twitter, <span
class="citation" data-cites="whyyoutouzhele">@whyyoutouzhele</span>).
Our need to express our emotions was disregarded. When it comes to
granting or withholding freedom, the government's choice seems to always
tilt towards withholding.</p>
<p><a
href="https://twitter.com/whyyoutouzhele/status/1681990420488699905">https://twitter.com/whyyoutouzhele/status/1681990420488699905</a></p>
<p><br></p>
<p>The practice of glossing over tragedies with celebrations might be
associated with traditional Chinese culture. Traditionally, Chinese
culture emphasizes expressing grief without being overcome by it, or in
other words, mourning in moderation. There's even a tendency to avoid
talking about death as much as possible. All we can say is, there's
still a long way to go in our journey towards modernization.</p>
]]></content>
      <tags>
        <tag>敏感 - Sensitive</tag>
      </tags>
  </entry>
  <entry>
    <title>冷夏</title>
    <url>//post/12/</url>
    <content><![CDATA[<p>足足等了16年</p>
<p>冷夏，蝉</p>
<p>只能哀鸣命运的不公</p>
<p><br></p>
<p>时代的一粒沙</p>
<p>这代人铺天盖地的绝望</p>
<p>小到不会被记到历史书里</p>
<p><br></p>
<p>于爱城</p>
]]></content>
      <tags>
        <tag>诗 - Poem</tag>
      </tags>
  </entry>
  <entry>
    <title>使用自定义类捕获 Python 控制台输出 - Capturing Console Output in Python Using Custom Class</title>
    <url>//post/11/</url>
    <content><![CDATA[<p>在python中，当执行一段代码时，如果想要获取这段代码输出到控制台的信息的话，可以使用重定向stdout的方法。</p>
<p>In Python, if you want to capture the information output to the
console when executing a piece of code, you can use the method of
redirecting stdout.</p>
<p><br></p>
<p>首先，建立一个类，里面有两个函数，write和flush</p>
<p>First, establish a class with two functions, write and flush.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">StdoutRedirect</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        self.content = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">write</span>(<span class="params">self, text</span>):</span><br><span class="line">        self.content += text</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">flush</span>(<span class="params">self</span>):</span><br><span class="line">        self.content = <span class="string">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>
<p><br></p>
<p>实例化这个类，并且重定向sys.stdout</p>
<p>Instantiate this class and redirect sys.stdout to it.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">my_stdout = StdoutRedirect()</span><br><span class="line">sys.stdout = my_stdout</span><br></pre></td></tr></table></figure>
<p>之后的任何输出都会进入my_stdout的content里。</p>
<p>Any subsequent output will go into the content of my_stdout.</p>
<p><br></p>
<p>在所需重定向输出的代码结束后，只需将sys.stdout重定向回默认的输出流即可。</p>
<p>At the end of the code where you need to redirect the output, you
just need to redirect sys.stdout back to the default output stream.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sys.stdout = sys.__stdout__</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>完整代码如下</p>
<p>The complete code is as follows:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StdoutRedirect</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        self.content = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">write</span>(<span class="params">self, text</span>):</span><br><span class="line">        self.content += text</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">flush</span>(<span class="params">self</span>):</span><br><span class="line">        self.content = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">my_stdout = StdoutRedirect()</span><br><span class="line">sys.stdout = my_stdout</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="number">114514</span>)</span><br><span class="line"></span><br><span class="line">sys.stdout = sys.__stdout__</span><br><span class="line">result = my_stdout.content</span><br><span class="line">my_stdout.flush()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;result: &quot;</span> + result)</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>编程 - Programming</tag>
      </tags>
  </entry>
  <entry>
    <title>冬之城</title>
    <url>//post/14/</url>
    <content><![CDATA[<p>寒冬中的烛火，苍白的魂灵飘摇，</p>
<p>既耀眼又冰冷，泣泪却无声。</p>
<p>生活在巨龙的鳞片下，被视为浅薄的</p>
<p>人们，冷漠如顽石，束缚如冰封。</p>
<p><br></p>
<p>严冬的城堡里，思想被修剪整齐。</p>
<p>剪刀嚓嚓走过，剪下繁星掉入荒漠。</p>
<p>我们手拿着笔，敲着厚厚的城墙，</p>
<p>那微弱的回音，被北风所淹没。</p>
<p><br></p>
<p>当话语被无由的冷雨浸透，</p>
<p>是谁被迫咽下胸中的火焰，付之一笑？</p>
<p>那火焰在流浪，它本应点亮灯塔！</p>
<p>却被没有温度存在的荒原环绕。</p>
<p><br></p>
<p>海纳百川之处，更需海纳百言，</p>
<p>我们支离破碎，蹒跚在极夜的边缘。</p>
<p>何时北风柔和，何时春雨再临？</p>
<p>为我的冬城驱散冰雪，为我的故园滋润心田。</p>
<p><br></p>
<p>我爱你。</p>
<p><br></p>
<p>Tennisbot feat. 于爱城</p>
]]></content>
      <tags>
        <tag>诗 - Poem</tag>
      </tags>
  </entry>
  <entry>
    <title>聊聊二次元文化的人生观和世界观的问题 - Discussing the Issues of Life Values and Worldviews in Otaku Culture</title>
    <url>//post/15/</url>
    <content><![CDATA[<p>6B4T”是一个女权运动的新造词，“6B”是指不和男人结婚、生育、恋爱、性交、不购买厌女产品，以及单身女性互助；“4T”则指脱束身衣、脱宗教、脱御宅文化和脱偶像。这其中提到了脱御宅文化。我在此不是想支持或者反对6B4T，我想谈谈二次元文化/御宅文化的人生观和世界观，及其可能有的问题。（多说一句，我对6B4T的没有看法，我觉得挺与我无关的）</p>
<p>"6B4T" is a new term coined by the feminist movement. "6B" refers to
not marrying, giving birth, dating, or having sex with men, not
purchasing misogynistic products, and offering mutual support between
single women. "4T" stands for rejecting corsets, religion, otaku
culture, and idols, including the so-called otaku culture. I'm not here
to either support or oppose 6B4T, but to discuss the worldview and life
values present in anime culture, as well as potential issues it might
cause. (As a side note, I have no particular opinion on 6B4T, as I find
it relatively unrelated to me).</p>
<p><br></p>
<p>在开始之前，我想强调一点，即，二次元文化的世界观和人生观没有问题，但是如果一个人仅从二次元文化中形成人生观和世界观，就有很大的问题了。</p>
<p>Before we start, I would like to emphasize that while there is
nothing inherently wrong with the worldview and life values provided by
anime culture, it is problematic if someone's views on life and the
world are solely shaped by it.</p>
<p><br></p>
<p>实不相瞒，我从高二开始看番，也算半个入宅了。宅文化是个非常吸引人的文化，尤其是对毫无自信，压力又奇大无比的我而言。宅文化吸引我主要是因为，第一，如果现实太糟糕，压力太大，人会不由自主地想活在幻想的美好，轻松的世界里，哪怕每天只有一两个小时；第二，没有人不喜欢美少女。高中和大学初期的课业压力很大，升学压力也很大，这导致我每天仅有的休息时间都要满足我的娱乐需求，除此之外就什么都干不了了。当时我什么番都看，不过比较喜欢看日常，清百合，废萌，或者奇幻，烧脑的，比如《堕天使珈百璃》，《某科学的超电磁炮》，《干物妹小埋》，《点兔》，《潜行吧奈亚子》，《命运石之门》等等。</p>
<p>To be frank, I have been watching series since my sophomore year of
high school, which has made me somewhat of an otaku. Otaku culture is
captivating, particularly for someone like me who, at the time,
struggled with immense pressure and severe self-doubts. Two aspects of
otaku culture appealed to me: One, the opportunity to escape from harsh
reality and immerse oneself in a realm of fantasy, even if just for one
or two hours a day. Two, the prevalence of beautiful girls. The academic
workload and the pressure of getting into university were overwhelming,
which meant any spare time I had was dedicated to satisfying my need for
entertainment. Among the series I watched were slice-of-life, pure yuri,
moe, fantasy, and mind-boggling genres, such as "Gabriel Dropout", "A
Certain Scientific Railgun", "Himoto! Umaru-chan", "Is the Order a
Rabbit?", "Haiyore! Nyaruko-san", "Steins;Gate", and so on.</p>
<p><br></p>
<p>但是，我看的所有番里，没有能告诉我我将来应该成为一个什么样的人的。御宅文化（尤其是我看的番剧）中的男性形象其实不多，仅有的那些角色中，又不会表现出什么突出的个人性格或特点。他们给人一种泛泛的，大众化的感觉，就连长相也是大众脸，我又完全不想成为这种人。</p>
<p>However, there was one thing the anime I've seen all failed to
enlighten me on - what kind of person I should become in the future.
Male depictions in Otaku culture (especially in the anime series I used
to watch) are rather scarce. Amongst these few characters, they hardly
possess any distinctive personality traits or characteristics. They are
generally bland, typical, and have a common face - a person I have no
desire to become.</p>
<p><br></p>
<p>这种“无路可走”的感觉很微妙，当时的我甚至不会意识到这一点，即使有人指出来我也体会不到。但是，这导致了一个问题：我某种程度上认为当男生“没前途”，所以我想女装，并且想成为女生，就像很多御宅朋友一样。如果读者，你觉得这个想法很荒谬，那实在是恭喜你，至少你的人生观很多元。（多说一句，我认为“女装”这个想法本身没什么问题，但我产生这个想法的原因出了问题。对于“女装”等想法，只要你自己认为是正确的，或者至少是有趣的，那就去做吧。）</p>
<p>This feeling of "having no way out" is very subtle. At the time, I
didn't even realize it, and even if someone pointed it out, I wouldn't
have understood. However, this led to a problem: I somehow believed that
guys "had no future," so I wanted to cross-dress and become a girl, just
like many of my otaku friends. If you, the reader, think this idea is
ridiculous, then congratulations, at least your worldview is quite
diverse. (As an aside, I don't think there's anything wrong with the
idea of cross-dressing itself, but the reason I came up with it was
flawed. For thoughts like cross-dressing, as long as you think it's
right or at least interesting, then go for it.)</p>
<p><br></p>
<p>所以我其实很喜欢《Jojo》，《银魂》，因为它们给我指了一条路，告诉我可以成为什么样的男人。可以说《银魂》部分启蒙了我的性格。只是可惜我看《Jojo》太晚了，而我意识到这一点的时候就更晚了。</p>
<p>Thereby, I was rather fond of "Jojo" and "Gintama" as they presented
a path for what kind of man I could become. It could be said that
“Gintama” partially enlightened my personality. Unfortunately, I watched
"Jojo" rather too late. And by the time I realized this, it's definitely
too late.</p>
<hr />
<p>欲望有高级欲望和低级欲望之分，但是只有满足了低级欲望，人才会产生高级欲望。如果人吃不饱饭，就不会有心情品鉴美食。对“好吃”的标准总是先从重油重盐开始，然后慢慢过渡到口感，新鲜度，食物本身的香气，适度的调味。</p>
<p>Desires can be categorized into high-level and low-level. Only after
fulfilling the low-level desires, do people start having high-level
desires. If one is starving, they won't have the mood to appreciate
gourmet food. However, as their hunger is satiated, they gradually
transition from heavy oil and heavy salt to taste, freshness, natural
aroma of food, and moderate seasoning.</p>
<p><br></p>
<p>在这里说一个暴论：基于同样的理由，只有腿和胸（或者说的更御宅一点，胖次和丝袜）看够了，男孩们才会看一些更有深度的东西。“好在”御宅文化两者都有，既有低级趣味，带一些深度的也不少。</p>
<p>Here, let me present a bold argument: for the same reason, young men
will only be interested in more sophisticated things once they've had
their fill of physical attractions (or to put it in a more "otaku" way,
of thighs and breasts). Thankfully, otaku culture caters to both low and
high-level interests.</p>
<p><br></p>
<p class="tennisbot" id="😒😒😒😒">
刚才提到二次元文化里的美少女，她们确实很可爱，实不相瞒，直到现在我也是一个校服控。如果把二次元美少女当作一种全新的物种来看的话那确实还好，不过如果用现实世界的眼光去看的话，二次元世界，尤其是女性们，多少有点“畸形”。在这一点上，我支持女权人士脱御宅文化，因为，御宅文化可有一大部分，确实不够尊重女性的多元化和主体意识。
</p>
<p class="tennisbot" id="😒😒😒😒">
Speaking of beautiful girls in the anime culture, they indeed are
adorable. I confess, I am still a sucker for school uniforms. Yet, if
you look at them from a realistic viewpoint, there is an element of
“distortion”, especially for the female characters. Therefore, I support
women departing from otaku culture, since a significant portion of otaku
culture indeed lacks respect for the diversity and agency of women.
</p>
<p><br></p>
<p>“男性凝视”这个现象，（男性们）如果不仔细体会，是很难感觉到的。而御宅文化是一个男性凝视的重灾区，或者说，卖肉/卖萌番剧里面的大多数女性角色都是在男性凝视定义的框架里的（可爱的/可被攻略的）。用一句通俗的话来说，就是“没有个人生活，只为取悦男性”。</p>
<p>The phenomenon of the "male gaze" is prevalent in the otaku culture.
Most female characters in anime involving selling cuteness or flesh
comply with the male-defined standards. In plain terms, it means "no
personal life, only to please men."</p>
<p><img src="1.png" /></p>
<p><a
href="https://www.pixiv.net/artworks/102932496">https://www.pixiv.net/artworks/102932496</a></p>
<p><br></p>
<p>用一个奇怪的例子去比喻。假如你是个没有自己主意的学生，你的爸爸妈妈天天在你的耳边说“学生的天职就是学习”，“只有考上名校才算报答父母”，并且不允许你有自己的想法。我想，这一定会导致你的人生没有属于你的目的，你的一切努力都是为了在他们俩的评价标准下拿一个高分。在这一过程中，他俩评价你的行为就是“家长凝视”。</p>
<p>Let me use a strange example to illustrate. Imagine you are a student
without your own ideas. Your parents constantly tell you, "A student's
duty is to study," and "Only getting into a prestigious school counts as
repaying your parents," while not allowing you to have your own
thoughts. I believe this must lead to a life without personal purpose,
with all your efforts aimed at meeting their standards and getting a
high score in their eyes. In this process, their evaluation of your
behavior is akin to the "parental gaze."</p>
<hr />
<p>《凉宫春日》里的阿虚有一句名言：“在虚构的故事当中寻求真实感的人脑袋一定有问题”。不能对御宅文化要求太多，它的意义只是娱乐，不是要培养人的健全人格。（所以建议批判御宅文化的家长，带着你家孩子拓展点别的爱好吧。）但是如果一个人除了看番别的什么都不做，那他/她的思想一定缺很多东西。这就像是营养不良，我们都知道吃方便面没有营养，想从方便面里面寻求营养的人脑子也有问题，但是如果一个人只有吃方便面的时间，那明知他自己会营养不良，也没办法。</p>
<p>The character Kyon from "The Melancholy of Haruhi Suzumiya" famously
said, "Anyone who seeks reality in a fabricated story must have
something wrong with their head." We should not expect too much from
otaku culture, as its purpose is only to entertain, not to develop a
mature personality. So, parents who criticize otaku culture should
encourage their children to explore other hobbies. If one does nothing
but watch anime, his/her thinking will lack diversity. It's like a poor
diet; we all know instant noodles are not nutritious, and anyone who
looks for nutrition in instant noodles is misguided. But if one only has
time to eat instant noodles, malnutrition is inevitable despite knowing
the risks.</p>
<p><br></p>
<p>对此，我的建议是，所有的娱乐都要尝一遍，对于男孩，建议有条件的话把以下这些兴趣爱好都随便搞搞，没条件也至少看看：NBA，世界杯，单车。漫画，轻小说，番剧，二次元手游。摄影，写作，绘画，手工。无人机，3d建模，编程。lol，任天堂游戏，暴雪游戏，我的世界。Steam上多尝试几种游戏。这些都不是什么太花钱的东西，如果能从中找到三五样爱好的话，那绝对不会营养不良了。</p>
<p>In this regard, I suggest trying out all kinds of entertainment. For
boys, I recommend pursuing these interests if possible or at least
exploring them: NBA, World Cup, cycling, manga, light novels, anime,
mobile games based on anime themes, photography, writing, drawing,
crafting, drones, 3D modeling, coding, League of Legends, Nintendo
games, Blizzard games, Minecraft. Also, try out at least 10 different
types of games on Steam. These interests don't require significant
investment. If you find several different hobbies among these, you will
no doubt have a well-rounded lifestyle.</p>
]]></content>
      <tags>
        <tag>随想 - Thoughts</tag>
      </tags>
  </entry>
  <entry>
    <title>视频推荐：键政圈三大主流意识形态的逻辑基础——神左兔人自述</title>
    <url>//post/16/</url>
    <content><![CDATA[<p><a
href="https://www.youtube.com/watch?v=gKZNVm8ywzI">https://www.youtube.com/watch?v=gKZNVm8ywzI</a></p>
<p><a
href="https://www.youtube.com/watch?v=dVrqJ2Sf2d8">https://www.youtube.com/watch?v=dVrqJ2Sf2d8</a></p>
<p><a
href="https://www.youtube.com/watch?v=924O9Se4Cio">https://www.youtube.com/watch?v=924O9Se4Cio</a></p>
<p><br></p>
<p>这是三个键政意识形态的自述视频，分别代表着神（特指泛神友，自由派，不包括原教旨神友）、左（马克思主义）、兔（爱国者）三种主流的键政观念。</p>
<p><br></p>
<p>本套视频的水平相当高，我可以说，这是我第一次听到成体系的，能自圆其说的，能在一定程度上说服我的兔友言论。此外，左人的视频也非常有感染力，而其中关于神友（自由派）的内容，更是相当精彩。</p>
<p><br></p>
<p>能做到对不同的政见的逻辑洞察至深并能说服人，反映出up主的键政水平和“治学”功力之深。如果我从看左人自述视频开始我的键政，我可能是一个忠实的马克思主义左人。此外，up主的其他视频也非常值得观看。</p>
<p><img src="1.png" /></p>
]]></content>
      <tags>
        <tag>推荐 - Recommendation</tag>
      </tags>
  </entry>
  <entry>
    <title>视频推荐：方脸说核污水排放 &amp; 我的一些杂谈 - Video Recommendation：Big Face’s Discusses on Nuclear Wastewater Discharge &amp; My Miscellaneous Talks</title>
    <url>//post/18/</url>
    <content><![CDATA[<p>推荐一个视频：<a
href="https://www.youtube.com/watch?v=MN7qtGwWLDI">《方脸说：日本福岛核污水排放，会对我们的健康产生影响？会有富集作用吗？》</a></p>
<p>Here's a video recommendation: <a
href="https://www.youtube.com/watch?v=MN7qtGwWLDI">"Big Face's talks
about: The impact of Japan's Fukushima's nuclear wastewater discharge on
our health. Is there any enrichment effect?"</a></p>
<p><br></p>
<p>这个视频里基本讲清楚了日本福岛核污水排放的相关信息，放射性物质的排放量，与中国和国际的对比，以及回应一些常见人士的担忧和小粉红的抬杠。对于生活在国内的网友来说，希望这个视频能激起大家对这件事情更深的思考。</p>
<p>This video essentially explains the details about the discharge of
nuclear wastewater from Fukushima, Japan, including the amount of
radioactive substances released, comparisons with China and
internationally, and responds to the concerns and arguments of common
people and nationalists. For netizens living domestically, I hope this
video sparks further thought on the matter.</p>
<p><br></p>
<p>不过请注意，有时候他会在视频里带节奏，煽动观众情绪，如果看完之后感到义愤填膺就不好了，相信那也不是方脸的本意。我虽然推荐这个视频，但是我认为，激怒敌人是没有意义的，更何况事实上，兔友（爱国者）也不是自由派（泛神友）的敌人，这个视频里很多明里暗里嘲讽国家的用词，会让真正的兔友看不下去。方脸有些用词可以再斟酌斟酌。</p>
<p>But please be aware that, he sometimes incite viewers' emotions. If
you feel outraged after watching, that's not good and I believe it's not
Big Face's intention. Although I recommend the video, I reckon
instigating adversaries is meaningless, especially when patriots are not
enemies of liberals, as the video implies through veiled jabs at the
country. Big Face should consider his choice of words more
carefully.</p>
<hr />
<p>说回核污水事件，我认为这件事情中国政府的处理挺不好的，明明有更好的抗议方式，如指出排放的不合理之处，在国际会议上谴责日本，不在核污水排放的调查报告上签字，实在不行还有绝招：与日本断交，但是选择点燃墙内舆论情绪谴责辱骂日本（炸厕所），实在是下下策，有时候实在是不知道国家这么做的原因是什么。悲观地想，也许是战前舆论准备吧。</p>
<p>Speaking of the nuclear wastewater issue, I think the Chinese
government's handling has been subpar. There are better ways to protest,
such as pointing out the unreasonable aspects of the wastewater
discharge, condemning Japan at international conferences, refusing to
sign the investigation report on the wastewater discharge, and if need
be, sever diplomatic ties with Japan, rather than inflaming domestic
public opinion and hurling insults. Sometimes, I just can't figure out
why our country would choose to act this way.</p>
<p><br></p>
<p>我有朋友打算定居大连，但是又担心生活在海滨城市，会受到核辐射。我在这里也基于排放量放下一句断言：半年后（即2024/3/1之后），这个话题一定会凉下去，居住在海边的人也不会表现出明显的被核辐射的症状。</p>
<p>A friend has plans to settle in Dalian, but is concerned about it
being a coastal city and is worried about nuclear radiation. Based on
the amounts discharged, I would venture to say that half a year later
(after March 1, 2024), this issue will cool down, and those living by
the sea will not show obvious signs of nuclear radiation.</p>
<p><br></p>
<p>另外，还有一个小感悟，头像一定要选得可爱一点，比如机器猫，这样骂人的时候显得不那么面目可憎。</p>
<p>One last note, it might be better to pick a cute avatar, like
Doraemon, because it might make you seem less hostile when exchanging
some heated words.</p>
<hr />
<p>2024年3月6日更新：</p>
<p>综合这半年的新闻来看，我从未听到有谁表现出核辐射的症状，甚至几乎没有人讨论日本排放核污水的话题了。事实上，从10月份开始，就几乎没有关于核污水的讨论了。</p>
<p>Updated March 6, 2024:</p>
<p>Reflecting on the news over the past six months, I haven't heard of
anyone showing symptoms of nuclear radiation, nor has there been much
discussion about Japan's discharge of nuclear-contaminated water. In
fact, since October, there's been scarcely any talk about the nuclear
wastewater issue.</p>
<p><br></p>
<p>推荐一个视频：<a
href="https://www.youtube.com/watch?v=ZrLL8ycpdD0">《福岛核污水排放，自然杂志报道的解读。》</a>，这个视频是由一个专业的科普up主：医痴的小木屋做的，专业程度较高。</p>
<p>Here I recommend a video: <a
href="https://www.youtube.com/watch?v=ZrLL8ycpdD0">“Interpreting the
Nature Journal's Report on Fukushima Nuclear Wastewater Discharge”</a>.
This video is made by a professional science popularizer: "Medical
Fool's Little Cabin," and it is highly professional.</p>
]]></content>
      <tags>
        <tag>随想 - Thoughts</tag>
        <tag>推荐 - Recommendation</tag>
      </tags>
  </entry>
  <entry>
    <title>插件推荐：沉浸式翻译 - Tool recommendation：Immersive Translate</title>
    <url>//post/17/</url>
    <content><![CDATA[<p>推荐这个翻译插件/软件：<a
href="https://immersivetranslate.com/">沉浸式翻译</a></p>
<p>I highly recommend this translation tool: <a
href="https://immersivetranslate.com/">Immersive Translate</a>.</p>
<p><br></p>
<p class="tennisbot" id="其实这也是Tennisatw使用中英双语写博客的原因">
它比一般的翻译软件好的一点是，它可以同时显示原文和译文。当时间充足时，可以读原文，并读一遍译文检查自己的理解是否正确。时间不足时也可以只读译文。如果怀疑译文翻译得有问题，也可以在原文中寻找对照。用这种方法阅读可以大大提高外语水平。
</p>
<p class="tennisbot" id="In fact, this is also the reason why Tennisatw blogs in both Chinese and English.">
What sets it apart from other translation tools is its ability to
display both the original text and the translation side by side. This
allows you to read the original text and then cross-reference it with
the translation, enhancing your understanding and foreign language
proficiency. Even when time is tight, you can simply read the
translations. If you're dubious about a translation, you can easily
refer back to the original text.
</p>
<p><br></p>
<p>免费，且不需实名，我用起来相当满意。</p>
<p>It's free and doesn't require real-name registration, and it's very
satisfactory to use.</p>
]]></content>
      <tags>
        <tag>推荐 - Recommendation</tag>
      </tags>
  </entry>
  <entry>
    <title>实验复现：绘制曼德勃罗集合 - Experiment Replication：sketch a Mandelbrot set</title>
    <url>//post/19/</url>
    <content><![CDATA[<p>曼德勃罗集合是一个在复平面上的分形。定义级数z，z(0)=0，z(n+1)=z^2+c。使得级数z收敛的所有c（复数）的集合即为曼德勃罗集。</p>
<p>The Mandelbrot set is a fractal on the complex plane. It is defined
by the series z where z(0)=0 and z(n+1)=z^2+c. The collection of all c
(complex numbers) that make the series z converge is the Mandelbrot
set.</p>
<p><br></p>
<p>不收敛的级数也有有趣之处，我们可以去研究其发散的速度。一般来说，越接近曼德勃罗集合的点，其级数发散得越慢。</p>
<p>The series that doesn't converge is also interesting, as we can
examine the rate at which it diverges. Generally, points near the
Mandelbrot set tend to have series that diverge slowly.</p>
<p><br></p>
<p>以下为绘制曼德勃罗集合的全部代码。</p>
<p>Below is the code.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">mdbt</span>(<span class="params">c: <span class="built_in">complex</span></span>):</span><br><span class="line">    f_x = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">200</span>):</span><br><span class="line">        f_x = f_x * f_x + c</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">abs</span>(f_x) &gt; <span class="number">10e10</span>:</span><br><span class="line">            <span class="keyword">return</span> i</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">x_list = [(x - <span class="number">2500</span>) / <span class="number">1000</span> <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3501</span>)]  <span class="comment"># [-2.5,1]</span></span><br><span class="line">y_list = [(y - <span class="number">1200</span>) / <span class="number">1000</span> <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2401</span>)]  <span class="comment"># [-1.2,1.2]</span></span><br><span class="line"></span><br><span class="line">z = np.zeros([<span class="number">3501</span>, <span class="number">2401</span>])</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">enumerate</span>(x_list):</span><br><span class="line">    <span class="built_in">print</span>(x[<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">enumerate</span>(y_list):</span><br><span class="line">        z[x[<span class="number">0</span>], y[<span class="number">0</span>]] = mdbt(<span class="built_in">complex</span>(x[<span class="number">1</span>], y[<span class="number">1</span>]))</span><br><span class="line"></span><br><span class="line">fig = plt.figure(figsize=(<span class="number">18</span>, <span class="number">10</span>))</span><br><span class="line">x_labels = [<span class="string">&#x27;&#x27;</span>] * <span class="number">500</span> + [<span class="string">&#x27;-2&#x27;</span>] + [<span class="string">&#x27;&#x27;</span>] * <span class="number">999</span> + [<span class="string">&#x27;-1&#x27;</span>] + [<span class="string">&#x27;&#x27;</span>] * <span class="number">999</span> + [<span class="string">&#x27;0&#x27;</span>] + [<span class="string">&#x27;&#x27;</span>] * <span class="number">999</span> + [<span class="string">&#x27;1&#x27;</span>]</span><br><span class="line">y_labels = [<span class="string">&#x27;&#x27;</span>] * <span class="number">200</span> + [<span class="string">&#x27;-1&#x27;</span>] + [<span class="string">&#x27;&#x27;</span>] * <span class="number">499</span> + [<span class="string">&#x27;-0.5&#x27;</span>] + [<span class="string">&#x27;&#x27;</span>] * <span class="number">499</span> + [<span class="string">&#x27;0&#x27;</span>] + \</span><br><span class="line">           [<span class="string">&#x27;&#x27;</span>] * <span class="number">499</span> + [<span class="string">&#x27;0.5&#x27;</span>] + [<span class="string">&#x27;&#x27;</span>] * <span class="number">499</span> + [<span class="string">&#x27;1&#x27;</span>] + [<span class="string">&#x27;&#x27;</span>] * <span class="number">200</span></span><br><span class="line">sns.heatmap(z.transpose(), cmap=<span class="string">&#x27;viridis&#x27;</span>, xticklabels=x_labels, yticklabels=y_labels,</span><br><span class="line">            vmax=<span class="number">100</span>, vmin=<span class="number">0</span>).invert_yaxis()</span><br><span class="line">plt.xlabel(<span class="string">&#x27;c.real&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;c.imag&#x27;</span>)</span><br><span class="line">plt.title(<span class="string">&#x27;Mandelbrot set f(x)=x$^2$+c&#x27;</span>)</span><br><span class="line">plt.show()</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><img src="1.png" /></p>
<p><br></p>
<p>曼德勃罗集具有无限复杂的细微分形结构。稍微改动上述代码，即可放大绘制其局部。比如下图就是一个曼德勃罗集，其中c的实部在-0.5,
0之间，虚部在0.5, 1之间。</p>
<p>The Mandelbrot set is characterized by an infinitely intricate
fractal structure. By simply adjusting the code mentioned above, you can
magnify and sketch its sections. For instance, the image below is a
Mandelbrot set where the real part of c ranges from -0.5 to 0, and the
imaginary part from 0.5 to 1.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">mdbt</span>(<span class="params">c: <span class="built_in">complex</span></span>):</span><br><span class="line">    f_x = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">200</span>):</span><br><span class="line">        f_x = f_x * f_x + c</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">abs</span>(f_x) &gt; <span class="number">10e10</span>:</span><br><span class="line">            <span class="keyword">return</span> i</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">x_range = (-<span class="number">0.5</span>, <span class="number">0</span>)</span><br><span class="line">y_range = (<span class="number">0.5</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">x_list = np.linspace(x_range[<span class="number">0</span>], x_range[<span class="number">1</span>], <span class="number">10001</span>)</span><br><span class="line">y_list = np.linspace(y_range[<span class="number">0</span>], y_range[<span class="number">1</span>], <span class="number">10001</span>)</span><br><span class="line"></span><br><span class="line">z = np.zeros([<span class="number">10001</span>, <span class="number">10001</span>])</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">enumerate</span>(x_list):</span><br><span class="line">    <span class="built_in">print</span>(x[<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">enumerate</span>(y_list):</span><br><span class="line">        z[x[<span class="number">0</span>], y[<span class="number">0</span>]] = mdbt(<span class="built_in">complex</span>(x[<span class="number">1</span>], y[<span class="number">1</span>]))</span><br><span class="line"></span><br><span class="line">fig = plt.figure(figsize=(<span class="number">10</span>, <span class="number">8</span>))</span><br><span class="line">x_labels = [<span class="built_in">str</span>(x_range[<span class="number">0</span>])] + [<span class="string">&#x27;&#x27;</span>] * <span class="number">9999</span> + [<span class="built_in">str</span>(x_range[<span class="number">1</span>])]</span><br><span class="line">y_labels = [<span class="built_in">str</span>(y_range[<span class="number">0</span>])] + [<span class="string">&#x27;&#x27;</span>] * <span class="number">9999</span> + [<span class="built_in">str</span>(y_range[<span class="number">1</span>])]</span><br><span class="line">sns.heatmap(z.transpose(), cmap=<span class="string">&#x27;viridis&#x27;</span>, xticklabels=x_labels, yticklabels=y_labels,</span><br><span class="line">            vmax=<span class="number">100</span>, vmin=<span class="number">0</span>).invert_yaxis()</span><br><span class="line">plt.xlabel(<span class="string">&#x27;c.real&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;c.imag&#x27;</span>)</span><br><span class="line">plt.title(<span class="string">&#x27;Mandelbrot set f(x)=x$^2$+c&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p><img src="2.png" /></p>
<p>有人想拿这东西当头像吗，还挺好看的。（</p>
<p>Does anyone want to use this as their profile picture? It's quite
nice-looking.</p>
]]></content>
      <tags>
        <tag>编程 - Programming</tag>
      </tags>
  </entry>
  <entry>
    <title>元键政1：所有理性人本质上都是相同的，但有独特的要捍卫的价值观 - Meta Political Discussion 1：All rational people are fundamentally the same, but each has unique values to defend.</title>
    <url>//post/21/</url>
    <content><![CDATA[<p>《元键政》这一系列文章是本人对于键政的由浅入深的思考，以讨论一些键政圈中常见的“元”问题（即对键政本身的探讨）。</p>
<p>本人并非政治专业出身，键政只是我的一个兴趣罢了。有任何知识上的疏漏，还请各位读者指正。如感到不爽或受到了侵犯，还请劳烦点击右上角大大的“关闭”按钮。</p>
<p>The series of articles titled "Meta Political Analysis" represents my
gradual and in-depth contemplation on political analysis, aiming to
discuss some common "meta" issues in the field (i.e., the exploration of
political analysis itself).</p>
<p>I am not a political science professional; political analysis is
merely an interest of mine. If there are any knowledge gaps, I welcome
readers to point them out. If you feel uncomfortable or offended, please
click the large "close" button in the upper right corner.</p>
<hr />
<p>不是所有人对政治都有兴趣，更不是所有对政治有兴趣的人都值得与之讨论。在排除掉不好好说话的嘴臭玩家，阴阳人（指说话阴阳怪气的人），和乐子人（指看乐子的人）之后，剩下的，我可以说，都是值得讨论政治的人，即理性人了。</p>
<p>Not everyone is interested in politics, and not everyone who is
interested in politics is worth discussing with. After eliminating those
who speak irresponsibly, mockingly, and those who just enjoy making
political jokes. The rest, I can say, are all rational individuals who
are worth discussing politics with.</p>
<p><br></p>
<p>所有理性人本质上都是相同的，即，遇到相同的事情时，理性的看法只有一种。所以理论上来说，每个人的政见都应该一致。在与理性人讨论政治的过程中，不会有任何冲突。</p>
<p>但是每个人都有要捍卫的理念。而相同的理念，在其他人看来可能一文不值。理性人的政见就建立在所捍卫的理念不受侵犯上。</p>
<p>As all rational beings are fundamentally the same, that is, there is
only one rational perspective when faced with the same situation.
Theoretically, their political views should coincide. There should be no
conflict when discussing politics with rational individuals.</p>
<p>However, everyone has values to defend. And the same values may be
worthless in the eyes of others. Rational people's political views are
based on the premise that their values are not violated.</p>
<p><br></p>
<p>因为理念不同，各派别之间天然就具有矛盾。比如有人认为，所有人都在自由的市场上自由地交易，所以每个人的每一笔财产都是其合法获得，用一个人辛苦所得的钱去养另一个不工作的闲人是完全不合适的，所以应该取消福利，或者只保留最基础的福利。另一派人认为，贫穷往往是因为家庭，环境，或者缺乏劳动能力（比如残疾）的原因，或者只是简单地运气不好，穷人应该得到补偿，所以应该提高福利。</p>
<p>Different factions naturally have contradictions due to differing
philosophies. For instance, some believe that everyone trades in a free
market, so every bit of a person's wealth is lawfully obtained. They may
think it's improper to use one's hard-earned money to support another
who doesn't work, thus suggesting that welfare should be abolished or at
least limited to the very basics. On the other hand, others believe that
poverty is often due to family circumstances, environment, lack of work
ability (like disability) or simply bad luck. They argue that the poor
should be compensated, hence, welfare is very meaningful and should be
increased.</p>
<p><br></p>
<p>再举一个水平较高的兔友（爱国者）为例，比如兔主席，他的<a
href="https://mp.weixin.qq.com/s/ThcxN8K6fWFPfUneG0fhbQ">一篇文章</a>聊《治安管理处罚法》的《第三十四条》。他说：“如果最终社会大众认为执法有问题的，执法人员及其领导就承担责任了。所以，我估计在实践中，执法人员会非常谨慎。”但是，有人最担心的事情就是社会大众监督力量缺失，执法人员可能会肆意曲解法律，扩大执法范围。这种人和兔主席明显没有共识。</p>
<p>For another instance, take one high-level patriot - Tuzhuxi (the
'Chairman Rabbit'). In <a
href="https://mp.weixin.qq.com/s/ThcxN8K6fWFPfUneG0fhbQ">one of his
articles</a> (in Chinese) discussing Article 34 of "Regulation on
Administrative Penalties for Public Security", he said, "If the public
thinks that there is a problem with law enforcement, the law enforcers
and their leaders should bear the responsibility. Thus, I reckon law
enforcers would be very cautious in practice." However, some people are
most concerned about the lack of public oversight and the potential for
law enforcers to arbitrarily interpret the law and expand their
jurisdiction. There's evidently no consensus between this kind of person
and Tuzhuxi.</p>
<p><br></p>
<p>自由和平等本质上矛盾；魁北克独立和维护国家统一矛盾；民主与精英政治矛盾；传统男权，激进女权，和性别平等这三者两两矛盾；资产阶级政府，无产阶级专政，法西斯主义，绝对君主专制，和伊斯兰神权政治全都互相矛盾。</p>
<p>Freedom and equality fundamentally contradict each other, as do
Quebec's independence and preservation of national unity, democracy and
elitism, traditional male chauvinism, radical feminism, and gender
equality. Capitalist government, proletarian dictatorship, fascism,
absolute monarchy, Islamic theocracy, and Xi's thought, they all
contradict each other.</p>
<hr />
<p>那么，作为理性人，应该怎么看待与其矛盾/不一致的政治理论呢？</p>
<p>So, as a rational person, how should one view political theories that
are contradict with their own?</p>
<p><br></p>
<p>有相当一部分的政治理论至少是有道理的。这里以马克思主义为例：一方面，马克思主义是有非常严密的逻辑体系的，从阶级斗争，到唯物史观，论证了消除封建和资本主义，无产阶级专政的合理性，在这一点上，马克思主义十分有道理。但另一方面，马克思主义的很多理念比较极端，比如“商品的价值仅与劳动量有关”，或者“人是社会关系的总和”，它明显是一个很有乌托邦感觉的主义，很多结论是应然而不是实然。在理性自由派者眼中，马克思主义有一定道理，但不是最佳选项。</p>
<p>There are quite a few political theories that are at least
reasonable. Let's take Marxism as an example: On the one hand, Marxism
has a very rigorous logical system, from class struggle to historical
materialism, it argues for the rationality of eliminating feudalism and
capitalism and establishing proletarian dictatorship. In this regard,
Marxism is very reasonable. On the other hand, some of Marxism's ideas
are extreme, such as "the value of a commodity is only related to the
amount of labor" or "People are the sum of social relationships". It is
evidently a very utopian ideology, and many of its conclusions are
normative rather than empirical. In the eyes of rational liberals,
Marxism has some merit, but it is not the best option.</p>
<p><br></p>
<p>但是，还有一些十分极端的理论，比如20世纪80年代还在中国称帝的人，或者想要消灭所有男性的激进女权，以及想要杀光所有“滞纳珠”（中国人）的原教旨神友（极端逆向民族主义者&amp;献忠人）。这些人的政治理论要么完全没有道理，经不起推敲，要么虽然有，但是又不符合实际情况。于理性自由派而言，它们太过极端了，完全没有道理。</p>
<p>Then there are the radical theories, such as the self-proclaimed
emperors in China during the 1980s, radical feminists advocating the
extermination of all males, and the reversed ultraconservative
nationalists intent on eradicating all Chinese. The political theories
of these groups are either baseless and stand no scrutiny, or have some
merit but are out of touch with reality. For rational liberals, these
theories are too radical, they are beyond comprehension.</p>
<p><br></p>
<p>让我们更深一层地考虑这个问题：对于一个理性人来说，这个世界上的所有政见可以分成3类：可理解并应该接受的，可理解但不应该接受的，不可理解的。比如说，对于一个理性自由派者来说，“人人生而平等”是可理解并应该接受的，“资本主义应该被消灭”是可理解但不应该接受的（在认真思考过马克思主义之后），而“所有男性都应该被消灭”是不可理解的。</p>
<p>Let's delve deeper into this issue: For a rational person, all
political views in the world can be divided into three categories:
understandable and acceptable, understandable but unacceptable, and
incomprehensible. For example, for a rational liberal, "all people are
born equal" is understandable and acceptable, "capitalism should be
eliminated" is understandable but unacceptable (after careful
consideration of Marxism), and "all males should be exterminated" is
incomprehensible.</p>
<p><br></p>
<p>如果一个政治理论包含的大多数政见属于可理解的，那么理性人应该至少认为这个政治理论是有道理的，即使他不认同它。但如果一个政治理论包含的大多数政见属于不可理解的，那么理性人应该认为这个政治理论是没有道理的。虽然每个理性人认同的政治理论不一定相同，但是我相信理性人们对于“哪些政治理论是有道理的”看法应该区别不大。</p>
<p>If most of the political views contained in a political theory are
understandable, then a rational person should at least consider the
political theory to be reasonable, even if they do not agree with it.
But if most of the political views contained in a political theory are
incomprehensible, then a rational person should consider the political
theory to be unreasonable. Although the political theories that each
rational person agrees with may not be the same, I believe that rational
people's views on "which political theories are reasonable" should not
differ much.</p>
<p><br></p>
<p>最后，呼吁一件事情：希望各位温和地与别人讨论，因为大部分持有不同政见的人既不是疯子也不是傻子，更不是拿钱去搞“大外宣”或“煽动颠覆国家政权”的人。</p>
<p>Finally, here's a plea: I hope everyone can engage in discussions
with others in a moderate manner. Most people with differing political
opinions are not irrational, naive, nor are they being paid to propagate
foreign propaganda or incite subversion of the state power.</p>
<hr />
<p>附录：我在这里留一个列表，列出我认为有必要捍卫的价值观，以及捍卫的理由。</p>
<p>Appendix: I make a list of the values that I defended in forming my
political views, along with the reasons for defending them.</p>
<p><br></p>
<p>（在讨论政治时）</p>
<p>友善：不解释<br />
理性：不解释*2</p>
<p>（政治观）</p>
<p>人本主义：人（而不是国家）是万物的尺度。人是目的，而不是手段。<br />
民主：执政合法性的基石，甚至是和平年间唯一合法的权力来源<br />
自由：人的自然权力<br />
对于言论自由：异议人士是社会的重要监督力量，长城是哭不倒的<br />
进步：社会越进步，人的物质生活就会更好。大家都不想回到人均寿命30岁的年代吧。<br />
法治：理性人治国必选<br />
和平：和平年代，建议通过谈判而不是战争来解决分歧<br />
包容开放：多样化是一种善良，作为异类也有正常生活的权利<br />
此外对于移民，迟早所有国家都会变成移民国家，否则国家就会老龄化。<br />
温和：极端主义会大大损害一部分人的利益，一类人的乌托邦可能是另一类人的地狱<br />
关爱弱者：适度的社会保障可以保障弱者（或者倒霉蛋）的生活水平<br />
由宗教来承担一部分的社会保障应该是可接受的</p>
<p><br></p>
<p>(On discussing politics)</p>
<p>Kindness: No explanation.<br />
Rationality: No explanation*2.</p>
<p>(Political views)</p>
<p>Humanism: The human being, not the country, is the measure of all
things. Human beings should be treated as an end in themselves and not
as a means to something else.<br />
Democracy: The cornerstone of governing legitimacy, even the only
legitimate source of power in peacetime.<br />
Freedom: A natural human right.<br />
Freedom of speech: Dissidents are important watchdogs in society. The
Great Wall is not going to crumble with mere words. Progress: The more
progressive the society, the better the material lives of the people. I
believe nobody wants to go back to the time when life expectancy was
30.<br />
Nomocracy: A must-option for rational governance.<br />
Peace: In times of peace, negotiation rather than war is advised to
resolve differences.<br />
Open and Inclusive: Diversity is kindness. Even an outsider deserves to
live normally.<br />
Regarding immigration, every country will inevitably become an
immigrant-inhabited country; otherwise, it is due to age.<br />
Moderation: Extremism tremendously harms peoples' interests. One's
utopia may be another's hell.<br />
Care for the weak: Moderate social security ensures a decent living
standard for the underprivileged or the unlucky.<br />
Religion to play a role in social security should be acceptable.</p>
]]></content>
      <categories>
        <category>元键政 - Meta Political Discussion</category>
      </categories>
      <tags>
        <tag>随想 - Thoughts</tag>
      </tags>
  </entry>
  <entry>
    <title>插件推荐：屏蔽黄推 - Plugin Recommendation：Twitter Block Porn</title>
    <url>//post/23/</url>
    <content><![CDATA[<p>从去年（2022年）或今年年初开始，推特（现在叫做X）上多出了上百个黄推账号（色情推主）。这些黄推账号用着不知道哪里偷来的图片，三五成群，出现在各大中文推主的评论区里，说着土味十足且重复率极高的垃圾情话，十分干扰用户正常体验。</p>
<p>Since last year (2022), or the beginning of this year, hundreds of
porn-related accounts have sprung up on Twitter (Now called X). These
accounts, appearing in the comment sections of many Chinese posts, use
illicitly obtained images and repeatedly post crass, flirtatious
remarks, greatly disrupting the normal user experience.</p>
<p><img src="1.png" /></p>
<p><br></p>
<p>这里推荐一个<a
href="https://github.com/daymade/Twitter-Block-Porn">插件</a>，能够屏蔽这些恶心的sb。</p>
<p>To remedy this, here is a <a
href="https://github.com/daymade/Twitter-Block-Porn">plugin</a>
recommendation capable of blocking these vexing accounts.</p>
<p><br></p>
<p>首先，需要安装一个浏览器扩展程序：篡改猴。其支持chrome，firefox，edge等常见的浏览器。这里以chrome为例。<a
href="https://www.tampermonkey.net/">点此</a>安装篡改猴：</p>
<p>Firstly, you'll need to install a browser extension named
"Tampermonkey". It is compatible with popular browsers like Chrome,
Firefox, and Edge. For this example, we will use Chrome. <a
href="https://www.tampermonkey.net/">Click here</a> to install
Tampermonkey:</p>
<p><br></p>
<p><a
href="https://greasyfork.org/zh-CN/scripts/470359-twitter-block-porn">点击此处</a>，在篡改猴里安装这款插件。</p>
<p>Following that, <a
href="https://greasyfork.org/zh-CN/scripts/470359-twitter-block-porn">click
here</a> to install the plugin in Tampermonkey.</p>
<p><br></p>
<p>之后，打开chrome的扩展程序，选择篡改猴，可以看到几个共享黑名单，即黄推名单。点开，然后点击右上角的“屏蔽所有诈骗犯”。如果找不到“屏蔽所有诈骗犯”按钮，就刷新一下。</p>
<p>After doing so, navigate to Chrome's Extensions, select Tampermonkey,
where you will see several lists like 打开共享黑名单 (open shared
blacklists). Click to open and then select "屏蔽所有诈骗犯" (Block all
scammers) on the top right corner. If this option is not immediately
available, try refreshing the page.</p>
<p><img src="2.png" style="width:25.0%" /> <img src="3.png"
style="width:25.0%" /> <img src="4.png" style="width:25.0%" /></p>
<p>如果找不到黄推名单入口，也可以手动打开其网页，然后一键屏蔽。截止目前（2023/9/12），有3个名单。</p>
<p>If you can't find the entrance for the porn-account list, you can
also manually open the page, and block them with a single click. As of
now (September 12, 2023), there are three lists.</p>
<p><a
href="https://twitter.com/i/lists/1677334530754248706/members">https://twitter.com/i/lists/1677334530754248706/members</a></p>
<p><a
href="https://twitter.com/i/lists/1683810394287079426/members">https://twitter.com/i/lists/1683810394287079426/members</a></p>
<p><a
href="https://twitter.com/i/lists/1699049983159259593/members">https://twitter.com/i/lists/1699049983159259593/members</a></p>
<hr />
<p>2024/06/06更新： - Update on June 6, 2024:</p>
<p>现在黄推名单已经增加到了8个。但是这些名单里的账号只是一小部分，在很多中文推特推主的评论区里还有非常多的黄推账号。目前我基本上是见一个举报一个，也希望大家可以稍稍花点时间举报这些账号。</p>
<p>The list of porn accounts has now increased to eight. However, these
accounts are just a small portion; there are many more porn accounts in
the comment sections of many Chinese Twitter users. I am currently
reporting each one I come across, and I hope everyone can also take a
bit of time to report these accounts.</p>
]]></content>
      <tags>
        <tag>推荐 - Recommendation</tag>
      </tags>
  </entry>
  <entry>
    <title>实验复现：重复的囚徒困境博弈 - Experiment Replication：Repeated Prisoner&#39;s Dilemma Game</title>
    <url>//post/22/</url>
    <content><![CDATA[<h3 id="背景---background">背景 - Background</h3>
<p>囚徒困境是博弈论的非零和博弈中具代表性的例子，个人最佳选择并非群体的最佳选择。以下为囚徒困境的经典表述：</p>
<p>The prisoner's dilemma is a representative example in non-zero-sum
game theory, where the best choice for the individual is not necessarily
the best choice for the group. Here is a classic presentation of the
Prisoner's Dilemma:</p>
<p><br></p>
<p>警方逮捕甲、乙两名嫌疑犯，但没有足够证据指控二人有罪。于是警方分开囚禁嫌疑犯，分别和二人见面，并向双方提供以下相同的选择：</p>
<p>若一人认罪并作证检控对方（背叛对方），而对方保持沉默，此人将即时获释，沉默者将判监3年。</p>
<p>若二人都保持沉默（互相合作），则二人同样判监1年。</p>
<p>若二人都互相检举（互相背叛），则二人同样判监2年。</p>
<p>The police arrested two suspects, A and B, but there was not enough
evidence to charge them. Therefore, the police detained the suspects
separately, met with them individually, and offered the same options to
both:</p>
<p>If one confesses and testifies against the other (defects), while the
other remains silent, the one who confessed will be released
immediately, and the silent one will be sentenced to 3 years in
prison.</p>
<p>If both remain silent (cooperate), they will both be sentenced to 1
year in prison.</p>
<p>If both testify against each other (defect), they will both be
sentenced to 2 years in prison.</p>
<p>https://zh.wikipedia.org/wiki/%E5%9B%9A%E5%BE%92%E5%9B%B0%E5%A2%83</p>
<p>https://en.wikipedia.org/wiki/Prisoner%27s_dilemma</p>
<p><br></p>
<p>因为不知道另一位囚徒是否会选择合作还是背叛，而无论对方选择什么，自己选择背叛的收益总比选择合作要高。所以，对于理性的囚徒来说，最佳的选择是选择背叛。因此两位囚徒都选择了背叛，他们被判监2年。</p>
<p>As the prisoner is uncertain if the other prisoner will choose to
cooperate or defect, the gains from defecting tend to be higher no
matter what the other decides. Hence, it's rational for the prisoner to
choose defecting. As a result, both prisoners defected, resulting in a
two-year sentence.</p>
<p><br></p>
<p>但这种选择又明显不是整体利益最大化的解决方案（帕累托最优）。如果双方都选择合作，两人只会被判监1年。</p>
<p>However, this decision obviously isn't the optimal solution for
maximizing collective interests (Pareto optimal). If both parties chose
to cooperate, they would only have to serve a one-year sentence.</p>
<p>重复的囚徒困境博弈 - Repeated Prisoner's Dilemma Game
如果允许两个囚犯重复博弈，那么结果就完全不一样了，因为一个囚犯被背叛后，可以在下一轮中惩罚他的对手，这会在某种程度上鼓励对方与自己合作。</p>
<p>The outcome is completely different if the two prisoners are allowed
to play the game repeatedly. In such a case, a prisoner would have the
chance to retaliate in the next round if he is defected against. This
could, to a certain extent, encourage his opponent to cooperate with
him.</p>
<p><br></p>
<p>阿克塞尔罗德组织了一场重复囚徒困境博弈，参与者提交代码两两对决，每人都有自己独特的策略。最终，根据总得分判断输赢。这其中，最出彩的却是一种简单的方法：“以牙还牙”策略。该策略在第一次博弈中选择合作，之后会在下一次博弈中重复对手上一次的选择。本文打算复现他的博弈结果。</p>
<p>Axelrod organized a Repeated Prisoner's Dilemma game where
participants submitted codes for head-to-head battles, each with their
unique strategies. The winners were determined based on total scores.
Among all, the most impressive strategy was a simple one: "Tit for Tat."
This strategy cooperates in the first round, then copies the opponent's
decision in the next round thereafter. This article intends to replicate
his game results.</p>
<p><br></p>
<h3 id="模拟实验---simulating">模拟实验 - Simulating</h3>
<p>首先，定义一系列策略。我把我能想到的策略都罗列了出来，包括总是合作（always_cooperation），总是背叛（always_defect），随机（random），以牙还牙（tit_for_tat）及其一些变种，报复（retaliatory_strike），和测试者（tester）等等。读者也可以添加自己的策略。</p>
<p>Firstly, a range of strategies are defined. I've listed all the
strategies I could think of, including always_cooperation,
always_defect, random, tit_for_tat and its variants, retaliatory_strike,
tester, and so on. Readers can add their own strategies.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">always_cooperation</span>(<span class="params">we=<span class="literal">None</span>, them=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">always_defect</span>(<span class="params">we=<span class="literal">None</span>, them=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">random_react_50</span>(<span class="params">we=<span class="literal">None</span>, them=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">bool</span>(random.randint(<span class="number">0</span>, <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tit_for_tat</span>(<span class="params">we=<span class="literal">None</span>, them=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(them) &lt; <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> them[-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">generous_tit_for_tat</span>(<span class="params">we=<span class="literal">None</span>, them=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(them) &lt; <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> them[-<span class="number">1</span>]:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">not</span> <span class="built_in">bool</span>(random.randint(<span class="number">0</span>, <span class="number">9</span>))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tit_for_two_tat</span>(<span class="params">we=<span class="literal">None</span>, them=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(them) &lt; <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">elif</span> (<span class="keyword">not</span> them[-<span class="number">1</span>]) <span class="keyword">and</span> (<span class="keyword">not</span> them[-<span class="number">2</span>]):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">retaliatory_strike</span>(<span class="params">we=<span class="literal">None</span>, them=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="literal">False</span> <span class="keyword">in</span> them:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tester_5</span>(<span class="params">we=<span class="literal">None</span>, them=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(them) &lt; <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="literal">False</span> <span class="keyword">in</span> them[-<span class="number">5</span>:]:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">except</span> IndexError:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br></pre></td></tr></table></figure>
<p>这其中，“慷慨的以牙还牙”指即使对面选择了背叛，下一次的策略也有10%的可能是合作；“报复”指以合作开始，但一旦对面背叛了一次，就一直背叛直到结束。“测试者”是以背叛开始，如果对面选择背叛，就选择合作。但一旦对面持续合作5次，就再次开始背叛。</p>
<p>The term "Generous Tit-for-Tat" refers to the strategy where even if
the opponent chooses to defect, there's a 10% chance of cooperation in
the next round. "Retaliatory_strike" strategy starts with cooperation
but switches to constant defection once betrayed. The "Tester" begins
with defection, chooses cooperation if the opponent also defects, but
returns to defection after five continuous rounds of opponent's
cooperation.</p>
<p><br></p>
<p>为每个策略生成10个玩家，使其进行200次交易。（但是玩家们（明显）不知道交易的次数）。定义玩家的奖惩机制如下：</p>
<p>Create ten players for each strategy and let them engage in 200
transactions. However, the players (obviously) are not aware of the
number of transactions. Let's define the reward and punishment mechanism
for the players as follows:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> st1 <span class="keyword">and</span> st2:</span><br><span class="line">    score1 += <span class="number">3</span></span><br><span class="line">    score2 += <span class="number">3</span></span><br><span class="line"><span class="keyword">if</span> st1 <span class="keyword">and</span> <span class="keyword">not</span> st2:</span><br><span class="line">    score1 += <span class="number">0</span></span><br><span class="line">    score2 += <span class="number">5</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> st1 <span class="keyword">and</span> st2:</span><br><span class="line">    score1 += <span class="number">5</span></span><br><span class="line">    score2 += <span class="number">0</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> st1 <span class="keyword">and</span> <span class="keyword">not</span> st2:</span><br><span class="line">    score1 += <span class="number">1</span></span><br><span class="line">    score2 += <span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>每个玩家的初始分数为100000分，每当它参与一局游戏（200次交易）后就扣掉一定的分数（在本局游戏中是480分），当分数小于0时，就迫使它将策略改变成另一个场上存在的策略。通过这种方法来增加选择压力，使得最终只有强大的策略才能存活下来。</p>
<p>Each player starts with a score of 100,000 points. After each game
(200 transactions), points are deducted from their score (480 points in
this case). When their score falls below zero, they are forced to adopt
an alternative strategy currently in use in the field. This methodology
increases selection pressure, ensuring only the most robust strategies
survive.</p>
<p><br></p>
<p>模拟1500场对局，并渲染成视频。完整代码如下：</p>
<p>Simulate 1500 games and render them into a video. The full code is as
follows:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> matplotlib.animation <span class="keyword">import</span> FFMpegWriter</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># define strategies</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">always_cooperation</span>(<span class="params">we=<span class="literal">None</span>, them=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">always_defect</span>(<span class="params">we=<span class="literal">None</span>, them=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">random_react_75</span>(<span class="params">we=<span class="literal">None</span>, them=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">bool</span>(random.randint(<span class="number">0</span>, <span class="number">3</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">random_react_50</span>(<span class="params">we=<span class="literal">None</span>, them=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">bool</span>(random.randint(<span class="number">0</span>, <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">random_react_25</span>(<span class="params">we=<span class="literal">None</span>, them=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">not</span> <span class="built_in">bool</span>(random.randint(<span class="number">0</span>, <span class="number">3</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tit_for_tat</span>(<span class="params">we=<span class="literal">None</span>, them=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(them) &lt; <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> them[-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">reverse_tit_for_tat</span>(<span class="params">we=<span class="literal">None</span>, them=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(them) &lt; <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">not</span> them[-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">generous_tit_for_tat</span>(<span class="params">we=<span class="literal">None</span>, them=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(them) &lt; <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> them[-<span class="number">1</span>]:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">not</span> <span class="built_in">bool</span>(random.randint(<span class="number">0</span>, <span class="number">9</span>))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tit_for_two_tat</span>(<span class="params">we=<span class="literal">None</span>, them=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(them) &lt; <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">elif</span> (<span class="keyword">not</span> them[-<span class="number">1</span>]) <span class="keyword">and</span> (<span class="keyword">not</span> them[-<span class="number">2</span>]):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">retaliatory_strike</span>(<span class="params">we=<span class="literal">None</span>, them=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="literal">False</span> <span class="keyword">in</span> them:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tester_2</span>(<span class="params">we=<span class="literal">None</span>, them=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(them) &lt; <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="literal">False</span> <span class="keyword">in</span> them[-<span class="number">2</span>:]:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">except</span> IndexError:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tester_5</span>(<span class="params">we=<span class="literal">None</span>, them=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(them) &lt; <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="literal">False</span> <span class="keyword">in</span> them[-<span class="number">5</span>:]:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">except</span> IndexError:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">win_stay_lose_switch</span>(<span class="params">we=<span class="literal">None</span>, them=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(them) == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">if</span> we[-<span class="number">1</span>] == them[-<span class="number">1</span>]:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Player</span>:</span><br><span class="line">    st_name = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    st_func = <span class="literal">None</span></span><br><span class="line">    score = <span class="number">100000</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">players = []</span><br><span class="line"></span><br><span class="line">fig = plt.figure(figsize=(<span class="number">12</span>, <span class="number">5</span>))</span><br><span class="line">plt.subplots_adjust(left=<span class="number">0.15</span>)</span><br><span class="line"></span><br><span class="line">strategies = &#123;<span class="string">&#x27;always_cooperation&#x27;</span>: always_cooperation,</span><br><span class="line">              <span class="string">&#x27;random_react_75&#x27;</span>: random_react_75,</span><br><span class="line">              <span class="string">&#x27;tester_5&#x27;</span>: tester_5,</span><br><span class="line">              <span class="string">&#x27;tit_for_two_tat&#x27;</span>: tit_for_two_tat,</span><br><span class="line">              <span class="string">&#x27;generous_tit_for_tat&#x27;</span>: generous_tit_for_tat,</span><br><span class="line">              <span class="string">&#x27;tit_for_tat&#x27;</span>: tit_for_tat,</span><br><span class="line">              <span class="string">&#x27;win_stay_lose_switch&#x27;</span>: win_stay_lose_switch,</span><br><span class="line">              <span class="string">&#x27;random_react_50&#x27;</span>: random_react_50,</span><br><span class="line">              <span class="string">&#x27;reverse_tit_for_tat&#x27;</span>: reverse_tit_for_tat,</span><br><span class="line">              <span class="string">&#x27;retaliatory_strike&#x27;</span>: retaliatory_strike,</span><br><span class="line">              <span class="string">&#x27;tester_2&#x27;</span>: tester_2,</span><br><span class="line">              <span class="string">&#x27;random_react_25&#x27;</span>: random_react_25,</span><br><span class="line">              <span class="string">&#x27;always_defect&#x27;</span>: always_defect, &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Increase the number of players using a certain strategy from 10 to 50</span></span><br><span class="line">strategy_increase = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> strategy <span class="keyword">in</span> strategies:</span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">        player = Player()</span><br><span class="line">        player.st_name = strategy</span><br><span class="line">        player.st_func = strategies[player.st_name]</span><br><span class="line">        players.append(player)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> strategy <span class="keyword">in</span> strategy_increase:</span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">40</span>):</span><br><span class="line">        player = Player()</span><br><span class="line">        player.st_name = strategy</span><br><span class="line">        player.st_func = strategies[player.st_name]</span><br><span class="line">        players.append(player)</span><br><span class="line"></span><br><span class="line">treat_num = <span class="number">200</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">treat</span>(<span class="params">player1: Player, player2: Player</span>):</span><br><span class="line">    history1 = []</span><br><span class="line">    history2 = []</span><br><span class="line">    score1 = <span class="number">0</span></span><br><span class="line">    score2 = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(treat_num):</span><br><span class="line">        <span class="comment"># There is a 1% chance that the decision will go wrong</span></span><br><span class="line">        st1 = player1.st_func(history1, history2)</span><br><span class="line">        st1 = st1 <span class="keyword">if</span> random.randint(<span class="number">0</span>, <span class="number">99</span>) &gt; <span class="number">1</span> <span class="keyword">else</span> (<span class="keyword">not</span> st1)</span><br><span class="line">        st2 = player2.st_func(history2, history1)</span><br><span class="line">        st2 = st2 <span class="keyword">if</span> random.randint(<span class="number">0</span>, <span class="number">99</span>) &gt; <span class="number">1</span> <span class="keyword">else</span> (<span class="keyword">not</span> st2)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> st1 <span class="keyword">and</span> st2:</span><br><span class="line">            score1 += <span class="number">3</span></span><br><span class="line">            score2 += <span class="number">3</span></span><br><span class="line">        <span class="keyword">if</span> st1 <span class="keyword">and</span> <span class="keyword">not</span> st2:</span><br><span class="line">            score1 += <span class="number">0</span></span><br><span class="line">            score2 += <span class="number">5</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> st1 <span class="keyword">and</span> st2:</span><br><span class="line">            score1 += <span class="number">5</span></span><br><span class="line">            score2 += <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> st1 <span class="keyword">and</span> <span class="keyword">not</span> st2:</span><br><span class="line">            score1 += <span class="number">1</span></span><br><span class="line">            score2 += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        history1.append(st1)</span><br><span class="line">        history2.append(st2)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Add some pressure to force each player to improve their score.</span></span><br><span class="line">    player1.score += score1 - <span class="number">2.4</span> * treat_num</span><br><span class="line">    player2.score += score2 - <span class="number">2.4</span> * treat_num</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">writer = FFMpegWriter(fps=<span class="number">30</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> writer.saving(fig, <span class="string">&quot;rpdg.mp4&quot;</span>, dpi=<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">1501</span>):</span><br><span class="line">        <span class="keyword">for</span> player1 <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(players)):</span><br><span class="line">            <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                player2 = random.randint(<span class="number">0</span>, <span class="built_in">len</span>(players) - <span class="number">1</span>)</span><br><span class="line">                <span class="keyword">if</span> player1 != player2:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            treat(players[player1], players[player2])</span><br><span class="line"></span><br><span class="line">            <span class="comment"># Players unable to improve their scores will be forced to use new strategies</span></span><br><span class="line">            <span class="keyword">if</span> players[player1].score &lt;= <span class="number">0</span>:</span><br><span class="line">                p = random.randint(<span class="number">0</span>, <span class="built_in">len</span>(players) - <span class="number">1</span>)</span><br><span class="line">                players[player1].score = <span class="number">10000</span></span><br><span class="line">                players[player1].st_name = players[p].st_name</span><br><span class="line">                players[player1].st_func = players[p].st_func</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> players[player1].score &lt;= <span class="number">0</span>:</span><br><span class="line">                p = random.randint(<span class="number">0</span>, <span class="built_in">len</span>(players) - <span class="number">1</span>)</span><br><span class="line">                players[player2].score = <span class="number">10000</span></span><br><span class="line">                players[player2].st_name = players[p].st_name</span><br><span class="line">                players[player2].st_func = players[p].st_func</span><br><span class="line"></span><br><span class="line">        x = <span class="built_in">list</span>(strategies.keys())</span><br><span class="line">        result = [<span class="number">0</span> <span class="keyword">for</span> result <span class="keyword">in</span> x]</span><br><span class="line">        <span class="keyword">for</span> player <span class="keyword">in</span> players:</span><br><span class="line">            result[x.index(player.st_name)] += player.score</span><br><span class="line"></span><br><span class="line">        plt.clf()</span><br><span class="line">        plt.barh(x, result)</span><br><span class="line">        plt.title(<span class="string">f&#x27;increase=<span class="subst">&#123;strategy_increase&#125;</span> round=<span class="subst">&#123;i&#125;</span> &#x27;</span>)</span><br><span class="line">        plt.pause(<span class="number">0.001</span>)</span><br><span class="line">        <span class="keyword">if</span> i % <span class="number">10</span> == <span class="number">0</span>:</span><br><span class="line">            writer.grab_frame()</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>生成的视频如下：</p>
<p>The videos are as follows:</p>
<p><video src="1.mp4" controls=""><a href="1.mp4">Video</a></video></p>
<p><br></p>
<p>可以看出，“总是合作”策略不久就消失了，一些无脑合作的策略消失的也很快。虽然“总是背叛”和“报复”在中期主导着局面，并且导致所有的策略的分数都掉得飞快，但最终还是三种“以牙还牙”策略坚持到了最后。这似乎说明纯圣母和纯坏蛋都不会在社会上存在，主导社会的是有自卫能力的好人。</p>
<p>It becomes clear that the "always cooperate" strategy soon faded, as
did strategies that involved mindless cooperation. Although "always
defect" and "retaliatory strike" dominated the scene in the medium term
and caused a rapid drop in all strategies' scores, three types of
"tit-for-tat" strategies eventually prevailed. This suggests that Real
good guys and real devils do not exist in society, and those who govern
are good people with the ability to defend themselves.</p>
<p><br></p>
<p>另，“慷慨的以牙还牙”要比普通“以牙还牙”更成功，这似乎说明要适当原谅别人的错误。</p>
<p>Additionally, the "generous tit-for-tat" has proven to be more
successful than the regular "tit-for-tat," implying the importance of
forgiving others' mistakes.</p>
<p><br></p>
<h3 id="修改初始分布---adjusting-the-initial-distribution">修改初始分布
- Adjusting the Initial Distribution</h3>
<p>考虑到如果只有一个“以牙还牙”，其余人都是“全部背叛”，那这一个“以牙还牙”一定坚持不了多久。这说明最终结果与策略的初始分布有关。在上文的程序中，在strategy_increase列表处添加策略的名字可以将此策略的初始数量从10加到50。比如：</p>
<p>It seems that if there is only one "tit-for-tat," and everyone else
"always betrays", this single one is unlikely to last long. Does this
signify that the final outcome is related to the initial distribution of
strategies. In the above program, adding strategy names to the
strategy_increase list increases its initial number from 10 to 50. For
instance:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">strategy_increase = [<span class="string">&#x27;tit_for_tat&#x27;</span>, <span class="string">&#x27;generous_tit_for_tat&#x27;</span>]</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>所有模拟的结果只有两种可能，“针锋相对”阵营获胜，或者“报复”获胜。“针锋相对”阵营其实相当脆弱。如果“全部背叛”和“报复”的比例超过一定值，那针锋相对就很难取得优势。值得注意的是，即使开局是由“全部合作”主导的，但由于它不会存活太久，它反而变成了培养“全部背叛”等非友善策略的土壤。</p>
<p>All the simulations' results only have two possibilities - either the
"Tit for Tat" camp wins or the "retaliatory strike" prevails. The "Tit
for Tat" camp is relatively fragile. If the proportion of "always
betrays" and "retaliatory strike" exceeds a certain level, it makes it
challenging for "Tit for Tat" to gain superiority. Notably, even though
the game could start with a dominance of "Total Cooperation", it doesn’t
last long and ironically, it becomes the breeding ground for
non-friendly strategies like "always betrays".</p>
<p><br></p>
<p>另外，如果开局就是由“针锋相对”系策略主导，那么所有的非友善策略会很快得全都消失，但很多友善策略都能有存活空间。</p>
<p>这说明爱与和平不能拯救世界，法治和正义才能（</p>
<p>On another note, if the game starts dominated by the "Tit for Tat"
strategy, then all the non-friendly strategies will soon disappear,
providing space for many friendly strategies.</p>
<p>This highlights that love and peace cannot save the world, but law
and justice can.</p>
]]></content>
      <tags>
        <tag>编程 - Programming</tag>
      </tags>
  </entry>
  <entry>
    <title>自学教材推荐：《动手学深度学习》 - Self-study Material Recommendation：&quot;Dive into Deep Learning&quot;.</title>
    <url>//post/24/</url>
    <content><![CDATA[<p>强力推荐一本优质教材：《动手学深度学习》。它包含了以下内容：多层感知机，深度神经网络，循环神经网络，卷积神经网络，以及有关深度学习的其他知识点。每一个知识点都会附带一小段代码。有一点难度，不适合纯小白。</p>
<p>Highly recommending a top-quality textbook: "Dive into Deep
Learning". It covers various topics including multilayer perceptron,
deep neural networks, recurrent neural networks, convolutional neural
networks, and other concepts related to deep learning. Each topic comes
with a snippet of code. It is somewhat challenging and not that suitable
for beginners.</p>
<p><br></p>
<p><a href="https://zh.d2l.ai/">中文版</a></p>
<p><a href="https://d2l.ai/">English version</a></p>
<p><br></p>
<p>这本教材主要优点有以下几个：</p>
<p>The primary advantages of this textbook are as follows:</p>
<p><br></p>
<p>第一，也是非常非常重要的一点，每一个知识点，它都会附带一段随手即用的代码。不仅能帮助读者更深地理解知识点。同时也使得本教材成为了一本工具书，即使是完全不懂的外行，也可以参照代码自己做深度学习。</p>
<p>第二，它支持中英双语。</p>
<p>第三，它同时给出了TensorFlow和pytorch等多种深度学习Python框架的代码，让读者能根据需要选择适合自己的工具进行学习和编程。</p>
<p>Firstly, and this is a crucial point, each topic is accompanied by a
handy piece of code. This not only deepens the reader's understanding of
the topic but also turns the textbook into a reference book. Even
complete novices can follow the code to conduct deep learning.</p>
<p>Secondly, it supports both Chinese and English versions.</p>
<p>Thirdly, it provides code for various deep learning python frameworks
like TensorFlow and PyTorch, allowing readers to select tools suitable
for their needs for learning and programming.</p>
]]></content>
      <tags>
        <tag>推荐 - Recommendation</tag>
      </tags>
  </entry>
  <entry>
    <title>如何制作词云 - How to make wordcloud</title>
    <url>//post/26/</url>
    <content><![CDATA[<p>下图是本文词云的照片。</p>
<p>The image below is a photo of a wordcloud.</p>
<p><img src="1.png" /></p>
<p><br></p>
<p>首先，安装wordcloud包。对于汉语用户，需额外安装jieba包。</p>
<p>Firstly, install the wordcloud package. For Chinese users, install an
additional package, jieba.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install jieba</span><br><span class="line">pip install wordcloud</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>上图词云的文本来源是本篇博客，通过爬虫爬取内容，再用BeautifulSoup包解码。读者也可以从文本中读取，或者直接向程序中粘贴文本来源。</p>
<p>The text for the word cloud above was obtained from this blog post,
extracted through web scraping, and then decoded with the BeautifulSoup
package. Readers could also read from a text file or directly paste the
text into the program.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">url = <span class="string">&#x27;https://blog.tennisatw.com/post/26/&#x27;</span></span><br><span class="line">r = requests.get(url=url).text</span><br><span class="line">soup = BeautifulSoup(r, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line">paragraphs = soup.find_all(<span class="string">&#x27;p&#x27;</span>)</span><br><span class="line"></span><br><span class="line">blog_text = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> text <span class="keyword">in</span> paragraphs:</span><br><span class="line">    blog_text += text.text</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">blog_text = <span class="string">&#x27;文本 text&#x27;</span></span><br></pre></td></tr></table></figure>
<p><br></p>
<p>如果是汉语用户，由于汉语词汇中间没有空格，需使用jieba分词，执行以下代码：</p>
<p>For Chinese users, as Chinese vocabulary does not contain spaces in
between words, the jieba package is needed for word segmentation. Run
the following code.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ls = jieba.lcut(blog_text)</span><br><span class="line">text = <span class="string">&#x27; &#x27;</span>.join(ls)</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>以下为全部代码：</p>
<p>Below is the complete code:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> jieba</span><br><span class="line"><span class="keyword">import</span> wordcloud</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;https://blog.tennisatw.com/post/26/&#x27;</span></span><br><span class="line">r = requests.get(url=url).text</span><br><span class="line">soup = BeautifulSoup(r, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line">paragraphs = soup.find_all(<span class="string">&#x27;p&#x27;</span>)</span><br><span class="line"></span><br><span class="line">blog_text = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> text <span class="keyword">in</span> paragraphs:</span><br><span class="line">    blog_text += text.text</span><br><span class="line"></span><br><span class="line">ls = jieba.lcut(blog_text)</span><br><span class="line">text = <span class="string">&#x27; &#x27;</span>.join(ls)</span><br><span class="line"></span><br><span class="line">stopwords = wordcloud.STOPWORDS | &#123;<span class="string">&quot;的&quot;</span>, <span class="string">&quot;是&quot;</span>, <span class="string">&quot;了&quot;</span>, <span class="string">&quot;我&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">wc = wordcloud.WordCloud(font_path=<span class="string">&quot;msyh.ttc&quot;</span>,</span><br><span class="line">                         width=<span class="number">800</span>,</span><br><span class="line">                         height=<span class="number">600</span>,</span><br><span class="line">                         background_color=<span class="string">&#x27;white&#x27;</span>,</span><br><span class="line">                         max_words=<span class="number">80</span>,</span><br><span class="line">                         max_font_size=<span class="number">150</span>,</span><br><span class="line">                         stopwords=stopwords)</span><br><span class="line"></span><br><span class="line">wc.generate(text)</span><br><span class="line">wc.to_file(<span class="string">&quot;wordcloud.png&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>编程 - Programming</tag>
      </tags>
  </entry>
  <entry>
    <title>如何泡各种茶 - How to make various types of tea</title>
    <url>//post/27/</url>
    <content><![CDATA[<p><img src="1.jpg" /></p>
<h3 id="总述">总述</h3>
<p>茶的种类，依据发酵程度以及茶汤颜色排序：<br />
- 绿茶<br />
- 白茶<br />
- 黄茶<br />
- 乌龙茶/青茶<br />
- 红茶<br />
- 黑茶</p>
<p>此外还有<br />
- 花茶<br />
- 调味茶</p>
<p>以及其他名叫“茶”，但不由茶叶冲泡的饮料。</p>
<p><br></p>
<h3 id="所需器皿">所需器皿：</h3>
<p>常规泡法：</p>
<p>烧水壶，最好能显示水温<br />
茶壶，最好有滤网<br />
茶杯<br />
分茶器（非必需）</p>
<p><br></p>
<p>盖碗泡法：</p>
<p>烧水壶，最好能显示水温<br />
盖碗</p>
<p><br></p>
<p>煮茶：</p>
<p>烧水壶，最好不是铁做的<br />
茶杯&amp;分茶器 或 盖碗</p>
<p><br></p>
<p>冷泡：</p>
<p>任意容器一个</p>
<p><br></p>
<h3 id="泡茶步骤">泡茶步骤：</h3>
<p>常规泡法：</p>
<p>抓5-10g左右茶叶放到茶壶里<br />
向茶壶倒入一定温度的热水<br />
等待一定时间<br />
（如果有很多人）把茶倒进分茶器里<br />
向每一个茶杯倒茶，注意不要把茶壶/分茶器倒空<br />
重复第2-5步，每重复一次就是一泡。</p>
<p><br></p>
<p>盖碗泡法：</p>
<p>抓3g左右茶叶放到盖碗里<br />
倒入一定温度的热水<br />
等待一定时间，通常为三五分钟</p>
<p><br></p>
<p>煮茶：</p>
<p>用壶烧水至70°C<br />
抓3g左右茶叶放到壶里<br />
水开后再煮5分钟，将茶倒出，之后倒入分茶器或盖碗</p>
<p><br></p>
<p>冷泡：</p>
<p>抓3g左右茶叶放到容器里<br />
倒入凉水<br />
等待一定时间，通常为几个小时</p>
<p><br></p>
<h3 id="一些注意事项">一些注意事项：</h3>
<p>最好用矿泉水泡茶。矿物质可以把茶中的鞣酸沉淀下来，喝起来会少些涩味，尤其是绿茶。</p>
<p>冲泡温度很重要，低了不香，高了太涩。通常来说，发酵越充分，建议使用的水温越高。具体各种茶的最适温度见下文。</p>
<p>冲泡时间不固定，与茶的种类、用量、个人口味有关，第一泡通常15秒-60秒，之后每一泡都比上一泡长15秒。建议自己多试试。通常来说，如果茶汤颜色太浓或太淡了，就意味着冲泡时间太长或太短了。冷泡茶可能需要4-12小时，温度越低，所需时间越久。</p>
<p>只有绿茶，新白茶，和乌龙茶比较适合冷泡。冷泡茶的涩味会减少很多。</p>
<p>陈茶（比如陈年的普洱和白茶）泡的道数可以多一些，并且只有陈茶才可以煮。</p>
<p>如果是内装碎茶或茶粉的茶包，建议加大用水量，且只泡1-2泡。</p>
<p>茶砖在冲泡之前，需要用起子或螺丝刀撬成碎片。</p>
<p>因为茶里有咖啡因，不建议空腹或睡前喝茶。</p>
<p><br></p>
<h3 id="绿茶">绿茶</h3>
<p>非常常见的茶，有“豆香味”，回甘明显，可能会有苦味或涩味，通常能泡2-3泡。可冷泡。</p>
<p>常见的绿茶有西湖龙井，黄山毛峰，碧螺春。</p>
<p>冲泡温度：85°C（常规泡法）/
20°C（冷泡），但其实这之间的任何温度都可以。</p>
<p>茶汤颜色：黄绿色。如一点绿色都没有说明水温太高了。</p>
<p>注：抹茶也属于绿茶，但其形状，味道，冲泡方法与普通绿茶大不相同。</p>
<p><br></p>
<h3 id="白茶">白茶</h3>
<p>一般常见的茶，新茶通常能泡2-3泡，陈茶能泡更多。茶砖可存放很久，越陈越香。新茶可冷泡，陈茶可煮。</p>
<p>常见的白茶有白毫银针。</p>
<p>冲泡温度：85°C-90°C（常规泡法）/
20°C（冷泡），但其实这之间的任何温度都可以。</p>
<p>茶汤颜色：淡黄色。</p>
<p><br></p>
<h3 id="黄茶">黄茶</h3>
<p>不太常见的茶，泡法介于绿茶与乌龙之间。</p>
<p><br></p>
<h3 id="乌龙茶">乌龙茶</h3>
<p>非常常见的茶，闻着特别香，回甘明显，通常能泡3-5泡。强烈推荐给刚开始喝茶的新人。可冷泡。通常可加奶。</p>
<p>常见的乌龙茶有安溪铁观音，武夷岩茶（大红袍），高山乌龙（我最喜欢的茶之一）。</p>
<p>冲泡温度：85°C（常规泡法）/
20°C（冷泡），但其实这之间的任何温度都可以。</p>
<p>茶汤颜色：橙黄色，大红袍为红色。</p>
<p><br></p>
<h3 id="红茶">红茶</h3>
<p>非常常见的茶，喝起来很香，口感很醇厚，通常能泡3-5泡。通常可加奶。</p>
<p>常见的红茶有祁门红茶，正山小种，金骏眉，滇红（我最喜欢的茶之一）。红茶在国外也很受欢迎，常见的有：波斯红茶，阿萨姆红茶，锡兰红茶，肯尼亚红茶，英式早餐茶（阿萨姆，锡兰，肯尼亚的混合）。</p>
<p>冲泡温度：95°C-100°C</p>
<p>茶汤颜色：橙红色-深红色。</p>
<p>注：红茶茶包里是红茶粉，通常只能1-2泡，泡出来的茶汤颜色特别浓。</p>
<p><br></p>
<h3 id="黑茶">黑茶</h3>
<p>一般常见的茶，通常能泡大于5泡。茶砖可存放很久，越陈越香。陈茶可煮。</p>
<p>常见的黑茶有普洱茶，泾阳茯茶，黑砖茶。普洱茶分为生普和熟普，新熟普闻起来可能有难闻的发酵味（学名叫渥堆味）。</p>
<p>冲泡温度：95°C-100°C</p>
<p>茶汤颜色：橙黄色（新生普），深红色（陈生普与熟普）</p>
<p>注：可以在煮大米粥时添加熟普，很好喝。</p>
<p><br></p>
<h3 id="花茶特指窨制花茶">花茶（特指窨制花茶）</h3>
<p>让茶叶吸收鲜花的香气而形成的茶。喝起来前两泡有花香味，之后逐渐过度到正常的茶味，适合刚开始喝茶的新人。花茶冲泡方法与茶坯所用的茶的方法相同。</p>
<p>常见的花茶有碧潭飘雪（茉莉绿茶）。</p>
<p><br></p>
<h3 id="调味茶">调味茶</h3>
<p>调味的精髓在于平衡涩味和腻味。以下为几种常见且好喝的调味茶。</p>
<h4 id="小青柑">小青柑</h4>
<p>掏空青柑放入熟普，泡法与熟普相同。味道在熟普的基础上添加了一点青柑的清香和酸味。如果觉得太涩，可以把青柑皮剪开单泡熟普。</p>
<h4 id="伯爵红茶">伯爵红茶</h4>
<p>伯爵红茶是在红茶上添加香柠檬油制成的茶，味道醇厚独特，泡法与红茶相同。</p>
<h4 id="印度混合香料茶masala-chai">印度混合香料茶（masala chai）</h4>
<p>添加了小豆蔻，肉桂，丁香的红茶，有些还会添加生姜和胡椒。直接喝的话，味道会怪得难以形容，但是加牛奶和糖后很好喝。不是所有人都喜欢，但强烈推荐大家试试。泡法与红茶相同。</p>
<h4 id="其他调味茶">其他调味茶</h4>
<p>除此之外，还有一些常见的调味茶。如：</p>
<p>蜜桃乌龙<br />
糯米香普洱（注意“糯米香”是一种植物）<br />
玄米茶<br />
Pumpkin chai（南瓜香料茶）</p>
<p><br></p>
<h3 id="其他非茶饮料">其他非茶饮料</h3>
<p>有很多饮料不是茶，但又和茶的口味相近，或者功效相似。这里挑选了常见的一些列出来。</p>
<h4 id="马黛茶">马黛茶</h4>
<p>南美人喝的“茶”，其不是用茶树叶子制成，而是用巴拉圭冬青叶发酵。马黛茶有烟香味，虽然没有茶味，但是很好喝，强烈推荐。</p>
<p>使用70°C水冲泡，可以不过滤茶渣。泡好后茶汤为墨绿色，但会逐渐变成红色。</p>
<p><br></p>
<h4 id="凉茶">凉茶</h4>
<p>凉茶主要在南方流行，其不属于茶，因为其不由茶树叶制成，常见的凉茶由夏枯草、菊花、洛神花、金银花、薄荷、藿香、陈皮、乌梅、枸杞、荷叶、冬瓜中的一种或几种配比冲泡而成。</p>
<p>凉茶的泡法各异，但通常来说，用85°C的水泡5-10分钟，喜欢的话可以加一点糖。</p>
<p>国外也有喝凉茶的习惯，强烈推荐以下两款：</p>
<p>ginger lemon（生姜柠檬）（放心，它不辣）<br />
peppermint tea（辣薄荷茶）（放心，它也不辣）</p>
<p><br></p>
<h3 id="其他">其他</h3>
<p>还有一些奇奇怪怪但各有特色的“茶”饮料列于下表，其泡法各异。</p>
<p>大麦茶<br />
苦荞茶<br />
老鹰茶</p>
<p><br></p>
<h3 id="手动调味">手动调味</h3>
<h4 id="奶茶">奶茶</h4>
<p>几乎所有的红茶，大部分的乌龙茶，混合香料茶，抹茶，都可以加牛奶，它可以中和茶里的涩味，强烈推荐。</p>
<p>如需加奶，需要把茶泡的浓一些，依个人口味可以酌情加一些糖。</p>
<p>如果想要更细腻的口感，可以用奶油代替一部分的牛奶。</p>
<p><br></p>
<h4 id="咸奶茶">咸奶茶</h4>
<p>黑砖茶可以做咸奶茶。煮好一壶稍浓的黑砖茶，加入牛奶和盐，再次煮沸，即可得到具有蒙古特色的咸奶茶。咸香的味道后劲十足，相当好喝。</p>
<p><br></p>
<h4 id="加花">加花</h4>
<p>茉莉花和玫瑰花都很适合随茶一起冲泡，味道与花茶类似。茉莉花尤其适合绿茶。玫瑰花可以让茶口感香甜很多，闻起来也会更好。冲泡这两种花时温度不宜过高。</p>
<p><br></p>
<h3 id="常见问题">常见问题</h3>
<p>泡出的茶苦——泡太浓了，或者时间太长了，或者茶品质不好。加点糖试试。</p>
<p>还是苦，泡的是绿茶——习惯就好，加油。</p>
<p>泡出的茶涩——水温太高了，或者水太软了，或者茶品质不好。加点牛奶和奶油有奇效。</p>
<p>茶受潮了，有异味——轻微受潮的茶用锅炒一炒，严重受潮的就不能喝了。</p>
<p>要洗茶吗——通常不用。</p>
<p>晚上睡不着觉——下午4点之后就别喝了。</p>
<p>经常喝茶有益健康吗——不知道，好像有一点。</p>
<p>喝茶的意义是什么——不知道，但是活着的意义是喝茶。</p>
<p>感觉茶没有咖啡好喝——点击屏幕右上角关闭此页面。</p>
<p><br></p>
<p><img src="2.png" /></p>
<p><br></p>
<p><a
href="https://blog.ulifestyle.com.hk/article/teabonvivanthk/4196193/%E4%B8%AD%E5%9C%8B%E5%85%AD%E5%A4%A7%E8%8C%B6%E7%B3%BB-%E5%88%86%E9%A1%9E%E5%8F%8A%E7%89%B9%E8%89%B2-%E7%9C%8B%E5%AE%8C%E5%B0%B1%E6%87%82%E4%BA%86">页首图片来源</a></p>
<p><a
href="https://www.youtube.com/watch?v=TgbtenvYMb4">页尾图片来源</a></p>
]]></content>
      <tags>
        <tag>日常 - Daily</tag>
      </tags>
  </entry>
  <entry>
    <title>元键政2：键政的意义何在？ - Meta Political Discussion 2：What is the significance of discussing politics?</title>
    <url>//post/25/</url>
    <content><![CDATA[<p>在和我妈聊到政治话题的时候，她总是会说：“你说的这些有什么意义啊，还不如把你自己的事情做好。”</p>
<p>When discussing political issues with my mom, she often comments:
"What's the point of all this talk? Please focus on managing your own
affairs."</p>
<p><br></p>
<p>在民主国家，讨论政治自然是有意义的：作为普通公民，手中的选票决定着国家将来的方向。那么在威权国家呢？尤其是在讨论政治甚至会有风险的国家呢？</p>
<p>In democratic countries, political discussions have significance: the
votes of ordinary citizens steer the future direction of the nation. Yet
what about authoritarian nations, particularly those where political
discussion carries risk?</p>
<p><br></p>
<p>我相信，键政（讨论政治）仍然是有意义的。其意义在于两点，一是提高自我的知识水平和政治素养，二是让意见相近的人聚在一起，联合起来。这两点本质上都是为了加强公民社会的力量，从而在一定程度上让公民取得政治地位，成为可以与党/政府抗衡的另一股力量。</p>
<p>I believe political discussion remains meaningful. Its value lies in
two aspects: first, it enhances one's knowledge and political literacy;
second, it brings like-minded individuals together, fostering unity.
Essentially, both aspects aim to strengthen civil society, enabling
citizens to gain political standing and become a force capable of
counterbalancing the party/government.</p>
<p><br></p>
<p>必须承认的是，中国的公民的政治水平，总体而言，还是比较低的。比如，即使是对政治热衷的人，他们中的大多数人也分不清总统制和议会制，我相信这是因为教材里没教。而他们对于资本主义的认识，往往停留在早就过时了的马克思主义对其的描述上，因为教材里只教了这个。（在这一点上来说，我们的政治教育做的挺差的，哪怕大学多开一节《世界各国政治模式导读》之类的必修课也好。）</p>
<p>It must be acknowledged that, overall, the political awareness of
Chinese citizens is relatively low. For example, even those who are
passionate about politics often cannot distinguish between a
presidential system and a parliamentary system, which I believe is due
to the lack of such content in textbooks. Their understanding of
capitalism is often stuck in the outdated Marxist descriptions, because
that is all the textbooks teach. (In this regard, our political
education is quite poor. Even adding a compulsory course like
"Introduction to Political Systems of Various Countries" in universities
would be beneficial.)</p>
<p><br></p>
<p>为了弥补政治教育的缺陷，一些中高水平的键政论坛还是很有必要的，即使只是让大家认识到政治思潮是多元的也好。参与政治讨论的过程，本质上也是接触各种不同思想的过程，真理越辩越明，最终，热衷政治的人会找到自己真正支持的主义，并逐渐完善自己的政治理论。以兔友（爱国者）为例，参与政治讨论也可以让他们从更高的角度解释国家的所作所为，成为捍卫国家的盾牌，而政治水平不足的兔友只会把所有没见过的思想都归为反贼。</p>
<p>To counter this deficiency in political education, high-level forums
to debate politics prove necessary, even if they merely serve to expose
the diversity of political thought. Participating in political
discussions essentially provides exposure to a variety of philosophies,
nuanced argument uncovers truth and eventually, political enthusiasts
will identify the ideologies they truly resonate with, refining their
own political theories over time. For example: for patriots, engaging in
political discussions enables them to justify national actions from a
more informed perspective, acting as defenders of the state, whereas
patriots with limited political literacy will simply equateany
unfamiliar ideologies to dissent.</p>
<p><br></p>
<p>此外，键政的另一大作用就是对抗社会原子化。“原子化”这个词指人与人之间的关系变远，组织能力变差，就像分子分解成原子一样。现代社会，人与人之间的亲情和出生地的纽带大大减弱，而这也是独裁政府喜闻乐见的。而公民想要反对政府的一项决定，往往会先组织起来，比如为抗议不合理的封城制度组织的白纸革命。键政给了公民们一个基于相同的政治观念聚集在一起，形成组织的机会。如组织发展壮大，则可能会形成新的政党，比如民进党。</p>
<p>In addition, political discussions also serve to counter societal
atomization: the phenomenon where interpersonal relationships worsen,
much like molecules decomposing into atoms. In the modern world, bonding
due to familial ties or place of birth weakens which is definitely a
situation welcomed by autocratic governments. Citizens aiming to oppose
governmental decisions often band together, for example, 'paper
revolutions' to protest unjust lockdown protocols. Debating politics
gives citizens an opportunity to gather based on shared political views,
potentially forming new political groups or parties, such as the
Democratic Progressive Party.</p>
<p><br></p>
<p>无论是民主国家，还是威权国家，其政治都是一个各方的力量博弈的过程。没有哪个国家的党/政府是铁板一块，甚至，有时为平息民怨，他们会经常做出让步（只要留心周围的新闻，总会发现一些）。游行与示威也正是党内开明派用来对抗保守派的工具。公民社会的力量越强，越能影响党/政府的决策，而这也是参与键政的意义。</p>
<p>Whether in democratic or authoritarian countries, politics is a
process of strategic interplay of various forces. TNo country's party or
government is monolithic; sometimes, to appease public discontent, they
often make concessions, as was the case with the 'paper revolution.'
Protests and demonstrations can also serve as tools employed by
open-minded members of the party to challenge conservative factions. The
stronger the power of civil society, the greater the influence on
party/governmental decisions, underlying the significance of engaging in
political debates.</p>
<p><br></p>
<p>当然，没有必要非要为了自己的理念去做一些危险的事情，保护好自己永远是最重要的，尤其是对于神友和左人而言。往好了说，大家都是体面人，智慧比头铁更重要，用他们还算能接受的方式，从各种微小的改变开始，慢慢地争取机会。</p>
<p>往坏了说，有些人，有些事，不值得任何人为之牺牲。</p>
<p>Of course, there's no need to take risks for one's beliefs;
protecting oneself is always the most important, especially for
believers and leftists. Ideally, we are all decent people, and wisdom is
more crucial than stubbornness. Using methods they can tolerate, we
should start with small changes and gradually seize opportunities to
achieve bigger goals.</p>
<p>On the downside, some people and things are not worth anyone's
sacrifice.</p>
]]></content>
      <categories>
        <category>元键政 - Meta Political Discussion</category>
      </categories>
      <tags>
        <tag>随想 - Thoughts</tag>
      </tags>
  </entry>
  <entry>
    <title>元键政3：与低水平言论缠斗意义不大 - Meta Political Discussion 3：It&#39;s insignificant to engage in a battle of words with low-level arguments</title>
    <url>//post/29/</url>
    <content><![CDATA[<p>有时打开抖音，快手，推特，搜狐新闻，百家号，虎扑等网站/论坛，用汉语搜索一些政治有关的词条，看到铺天盖地的民族主义，仇恨言论，性别对立，刻板印象，以及不知道哪里来的小道消息，花边新闻，色情下流的图片，我实在是感觉中国人没救了。下图为在虎扑社区搜索“昂撒”的结果。</p>
<p>Sometimes when I go to websites like Douyin, Kuaishou, Twitter, Sohu
News, Baijia, and Hupu (They are all common applications/bbses in China)
and search for political terms in Chinese, I am overwhelmed by the
prevalent nationalism, hate speech, gender conflict, stereotypes, and
unverified gossip and salacious news, often accompanied by vulgar
images. It sometimes disheartens me so much that I have a feeling that
"Chinese people are really hopeless." The screenshot below is the search
result for the "昂撒" (Short for Anglo-Saxons, sometimes with a
derogatory connotation) on Hupu, a platform with a large number of
extreme nationalists.</p>
<p><img src="2.png" /></p>
<p><br></p>
<p>但是我本不应该和这种言论，这种人有任何瓜葛。我相信，不敢说所有，但是大多数比较火的键政自媒体，都是精心设计过他们的内容的。很明显，他们的受众肯定不包括我，看见不爽，划走就完事了。至于说，中国人是否“有救”，《论语》有云：君子之德风，小人之德草，草上之风必偃。</p>
<p>However, I shouldn't have any involvement with such remarks or
people. I believe —— though I can't say for all —— most popular
political self-media content is meticulously crafted. Clearly, their
audience doesn't include me. If someone find it unpleasant, they can
just swipe away. As for whether "there is hope" for Chinese people,
there is a famous saying in "the Analects": The virtue of a gentleman is
like the wind; the virtue of a petty person is like grass. When the wind
blows over the grass, the grass must bend.</p>
<p><br></p>
<p>与低水平言论接触多了，会有一个严重的问题：人都是倾向于模仿的。假如我是一个神友（自由派），一直专挑墙内的不堪入目的言论看，虽然很爽，但我会理所当然地认为：键政就是用污言秽语骂对方，我甚至还会说：对待流氓就应该比流氓还流氓。可是只要用脑子想一想就知道，高水平和低水平的兔友（爱国者）都肯定存在，神友也是如此，当我与低水平的兔友缠斗时，我自己也变成了一个低水平的神友，我们劣化了政治辩论，就像下图那样。这也是我三五年前犯的错误。</p>
<p>Constant exposure to negative and low-level discourse comes with a
major risk: our tendency to mimic. Assume I am a liberal. Suppose
Ideliberately select and read detrimental comments from within the
'Great Firewall'. I am likely to adopt a similar offensive language to
hit them back. What's more, I'm likely believe that to handle an online
'hooligan', you must be more 'hooligan' than the 'hooligan' itself.
However, just as there can be high and low-level patriots, there can be
high and low-level liberals too. Engaging in a low-level discourse makes
me the low-level liberal as well, degrading the overall political
debate, just like the graph below. This was also a mistake I made
several years ago.</p>
<p><img src="1.jpg" /></p>
<p><a
href="https://www.reddit.com/r/PropagandaPosters/comments/oht7tg/american_elections_soviet_union_1970s/">劣化的政治辩论
- Deteriorated political debate</a></p>
<p><br></p>
<hr />
<p>说了这么多，什么是低水平言论呢？这里我把键政中经常遇到的 我认为的
“低水平言论” 总结为以下几点，依照其“水平”高低和是否容易区分排序。</p>
<p>What exactly are low-level remarks? Here, I summarize the types of
"low-level remarks" often encountered in online political discussions,
ranking them by their "level" and ease of identification.</p>
<p><br></p>
<p>1：谩骂与人身攻击 - Insults and Personal Attacks</p>
<p>这种言论是水平最低的，也是最容易发现的，除了能给其他人提供一些“情绪”价值之外，毫无任何意义。</p>
<p>These are the lowest level remarks and the easiest to spot. Besides
providing some "emotional" value to others, they are utterly
meaningless.</p>
<p><img src="3.png" /></p>
<p><img src="4.png" /></p>
<p><br></p>
<p>2：谣言，和未证实的信息 - Rumors and Unverified Information</p>
<p>各种话题都大量充斥着谣言和未正式的信息，尤其是与政治有关的话题。这种言论的检测难度可高可低，主要还是需要自己对相关话题有一定了解。请注意，官方发布的言论也有可能是谣言。</p>
<p>Various topics are flooded with rumors and unverified information,
especially those related to politics. The difficulty of detecting these
remarks can vary; it mainly requires a certain level of understanding of
the relevant topics. Note that even official statements can be
rumors.</p>
<p><br></p>
<p>谣言的量是相当相当大的，在某些平台，谣言的数量要比真实新闻的数量还多。在这里非常感谢各大辟谣平台的工作。</p>
<p>The volume of rumors is enormous, and on some platforms, there are
more rumors than real news. A big thanks to all the rumor-debunking
platforms for their work.</p>
<p><img src="5.png" /></p>
<p><img src="6.png" /></p>
<p><br></p>
<p>3：阴阳怪气，冷嘲热讽的言论 - Sarcasm and Mockery</p>
<p>这也是一种弱化的谩骂，非常常见于知乎，微博，贴吧。这种言论也是最容易煽动读者情绪的。</p>
<p>从这一阶段开始，这些低水平的言论已经变得比较“可以接受”了，体面的键政人也会偶尔使用。不过，这还不是有意义的键政，当然也不需要理会。</p>
<p>This is a milder form of insults, very common on platforms like
Zhihu, Weibo, and forums. These remarks are also the easiest to incite
readers' emotions.</p>
<p>From this stage onward, these low-level remarks become somewhat
"acceptable," and even respectable commentators might occasionally use
them. However, this is still not meaningful political discussion and
does not need to be taken seriously.</p>
<p><img src="7.png" /></p>
<p><br></p>
<p>4：简单化和极端化 - Simplification and Extremism</p>
<p>这种言论是相当难以区分的，尤其是带有情绪的言论。主要的原因在于，读者不一定了解相关的话题，而一众解释中，最容易接受的往往是最简单的。</p>
<p>These remarks are quite difficult to identify, especially those with
emotional content. The main reason is that readers may not understand
the related topics, and the simplest explanations are often the easiest
to accept.</p>
<p><img src="8.png" /></p>
<p><img src="9.png" /></p>
<p><br></p>
<p>5：逻辑谬误 - Logical Fallacies</p>
<p>这种言论已经比之前4种好太多了，因为它至少讲逻辑，只是可惜有问题。</p>
<p>These remarks are much better than the previous four because at least
they involve logic, even if flawed.</p>
<p><img src="10.png" /></p>
<p><br></p>
<p>键政是一场群体之间，没有输赢的辩论。几乎没有人会因为其他的言论而改变立场，就算把“对手”打倒了，也不代表“赢家”的立场比他的更正确。在键政过程中，遇到低水平言论，最体面的应对方式就是视而不见，知道自己占上风了就好了。</p>
<p>Online political discussions are a debate with no winners or losers.
Almost no one changes their stance because of others' remarks, and even
if you defeat your "opponent," it doesn't mean your position is more
correct. When encountering low-level remarks during these discussions,
the most dignified response is to ignore them, knowing you have the
upper hand.</p>
<p><br></p>
<p>键政之外也是这样，遇到低水平言论，<strong>知道谁是对的，谁是错的，自己该怎么做就够了</strong>。既没有必要去和它们争论，更没有必要被他们影响。</p>
<p>This also applies outside of online discussions. When encountering
low-level remarks, <strong>just know who is right and wrong and what you
should do</strong>. There's no need to argue with them or be influenced
by them.</p>
]]></content>
      <categories>
        <category>元键政 - Meta Political Discussion</category>
      </categories>
      <tags>
        <tag>随想 - Thoughts</tag>
      </tags>
  </entry>
  <entry>
    <title>资料搜寻：韩国财阀干政的程度有多高？ -  Data Search：To what extent do South Korean chaebols interfere in politics?</title>
    <url>//post/28/</url>
    <content><![CDATA[<p><img src="1.jpg" /></p>
<p>下午和朋友闲聊，她问我，韩国的财阀干政现象是否很严重？这个问题我不好回答，所以我打算简单搜索一下资料查询这件事情。在搜索资料之前，我只零星地听到一些有关韩国财阀干政的新闻，不过对其完全不了解。</p>
<p>In the afternoon, I was having a casual chat with a friend. Suddenly
she asked me whether the phenomenon of Korean chaebols interfering in
politics was severe. Unsure how to answer, I decided to do a little
research on the matter. Prior to this, my knowledge about chaebols
meddling in politics was limited to a few sparse news reports that I had
heard occasionally.</p>
<p><br></p>
<p>首先，先简单在维基百科检查一下韩国的情况。<a
href="https://zh.wikipedia.org/zh-hans/%E5%90%84%E5%9B%BD%E5%AE%B6%E5%92%8C%E5%9C%B0%E5%8C%BA%E6%B0%91%E4%B8%BB%E6%8C%87%E6%95%B0%E5%88%97%E8%A1%A8">韩国的民主指数</a>在世界的排名一直在20-30名左右，相当不错；而2022年<a
href="https://zh.wikipedia.org/zh-hans/%E9%9F%93%E5%9C%8B%E7%B6%93%E6%BF%9F">韩国的人均GDP</a>是34000美元，也是标准的发达国家。中英文查找资料得出来的数据都一致。</p>
<p>First of all, I checked the situation in Korea on Wikipedia. Its <a
href="https://en.wikipedia.org/wiki/Democracy_Ranking">democracy
index</a> worldwide ranking has consistently been between 20-30, which
is quite good. Furthermore, <a
href="https://en.wikipedia.org/wiki/South_Korea">Korea's GDP per
capita</a> in 2022 is $34,000, marking it a well-developed nation. Both
Chinese and English resources provide consistent data.</p>
<p><br></p>
<p>然后，用汉语在google上搜索“韩国”和“财阀”。扑面而来的是腾讯网，搜狐新闻，网易新闻，知乎等网站
描写韩国财阀的猖獗 的新闻。点开标题为<a
href="https://www.sohu.com/a/680523533_121687424">“韩国：一个被财阀控制的国家，总统，明星无一幸免”</a>的搜狐新闻网页一看：里面举了相当多的例子，比如张紫妍案，黄由美案，来论证韩国财阀的权力有多大。文章最后的结论是
<strong>“韩国与财阀共存，一个被金钱权利所左右的国家，百姓想寻求公道，大概会令人发笑吧。”</strong>
我又看了几篇其他新闻媒体的新闻，有些语气没有那么言之凿凿，但大多大差不差。说实在的，<strong>这种新闻虽然一看就很离谱，但是它们实在太多了，三人成虎，不了解政治的读者很难明辨这种言论。</strong></p>
<p>Later, I searched for "Korea" and "chaebol" on Google using Chinese.
Dominant search results were news reports from Tencent, Sohu, and
NetEase, as well as discussions on Zhihu, all of which depicted rampant
activities of the chaebols. One Sohu news report even proclaimed: <a
href="https://www.sohu.com/a/680523533_121687424">"South Korea: A nation
under chaebol control, no Presidents, no celebrities spared"</a>. The
article provided numerous examples, such as the Jang Ja-yeon case and
the Hwang Yu-mi case, to illustrate the immense power of South Korean
chaebols. The conclusion of the article states: <strong>"South Korea
coexists with chaebols, a country swayed by the power of money; the idea
that the people can seek justice is almost laughable."</strong> I also
read several other news reports; while some weren't as assertive, the
overall sentiment was similar. Honestly, <strong>although such news
seems outrageous at first glance, there are so many of them that it
becomes difficult for readers unfamiliar with politics to discern the
truth.</strong> <br></p>
<p>此外，我忍臭跳一次粪坑：打开抖音，搜索“韩国”和“财阀”，因为短视频也是中国人获取信息的主要渠道。抖音上没有太过评论韩国财阀干政的视频，抖音人更关注的是财阀们玩弄的女明星有多漂亮。随便点开几个视频看了一下，不是在讲电影，就是在搞软色情，很少有聊政治的视频。即使我加上“干政”词条也没有很明显的变化。仅有的几个讲财阀干政的视频，也干巴巴的，观感甚至不如搜狐新闻那片文章的冲击感强。我也试图在小红书上搜索“韩国”和“财阀”，但它似乎不让未登录的人搜索。</p>
<p>Additionally, I took the plunge into the world of the Chinese app
Douyin: I searched for "South Korea" and "chaebol," considering that
short videos have become a major source of information for Chinese
citizens. Much to my surprise, there weren't many videos discussing the
political interference of the Korean chaebols, as most Douyin users
seemed more interested in how beautiful the female celebrities
manipulated by these chaebols were. Most of the videos I stumbled upon
were either about films or subtly erotic, with little to none focusing
on politics. Adding "political influence" to my search didn't affect the
results significantly. The few videos discussing the chaebols' political
influence were rather dry and lacked the sensational impact of a certain
Sohu news article. I also attempted to search for "South Korea" and
"chaebol" on another app called Xiao Hong Shu, but it seemed it did not
allow unregistered users to search.</p>
<p><br></p>
<p>搜狐新闻有时会含有大量的花边新闻，抖音又喜欢把美女和恶臭言论拌在一起，还是看一眼相对中立客观的知乎吧。在<a
href="https://www.zhihu.com/question/351025037">“韩国财阀有多牛?”</a>问题下，知乎用户给出了不一样的回答：<a
href="https://www.zhihu.com/question/351025037/answer/2430635272">第一篇回答</a>用讲故事的语气讲了财阀们的各种风流秘辛，以及李美兰案。但<a
href="https://www.zhihu.com/question/351025037/answer/905733764">第二篇回答</a>就大谈特谈韩国政府的权力之大。粗略看一眼，这个问题下面的高赞回答中，认为“韩国财阀严重干政”与“还是政府权力更大”的比例大约是6比4。其中不乏听起来十分言之有理的言论。</p>
<p>Sohu News sometimes contains a plethora of unnecessary fluff news,
and Douyin enjoys mixing visuals of attractive women with offensive
remarks — perhaps it's better to resort to a comparatively neutral and
unbiased platform like Zhihu. On the question <a
href="https://www.zhihu.com/question/351025037">"How powerful are Korean
chaebols?"</a> Zhihu users have provided varied responses. <a
href="https://www.zhihu.com/question/351025037/answer/2430635272">The
first post</a> narrates the scandalous and private lives of these
conglomerates and the Lee Mi-ran case with a storytelling flair. <a
href="https://www.zhihu.com/question/351025037/answer/905733764">The
second post</a>, however, places great emphasis on the enormous power of
the Korean government. At a quick glance, in the most upvoted responses
to this question, the proportion believing that "Korean chaebols have
excessive political influence" versus "the government's power is
greater" is roughly 6 to 4. Among these, there are quite a few solid and
convincing arguments.</p>
<p><br></p>
<p>插句题外话，虽然我一直对知乎评价不高，但它确实是中国最适合辩论的平台了，大家围绕者一个议题，互相发表自己的看法，而有道理的就会被顶上去。如果使用者的素质都很高，那知乎绝对能
像法国沙龙文化一样 为广大网友启蒙。</p>
<p>On a side note, despite my critical view of Zhihu, I must admit it is
the most suitable debating platform in China, where users can voice
their opinions on a topic and relevant comments are upvoted based on
merit. If every user is of high quality, Zhihu indeed has the potential
to emulate French salon culture, enlightening the extensive internet
user community.</p>
<p><br></p>
<p>虽然知乎几乎是中文网络中最客观、公正的新闻平台，但它仍然会屈服于舆论，而且知乎答主们往往更擅长秃笔生花，使用话术进行论证。想要获得更准确的信息，一定是去英文媒体上搜索。</p>
<p>Despite Zhihu arguably being the most objective and impartial
platform in Chinese cyberspace, it can still be swayed by public
opinion. Answers tend to use rhetorical strategies and can often be
manipulative. For the most accurate and unbiased information, it's best
to switch to English media outlets.</p>
<p><br></p>
<p>先从英文维基百科开始：<a
href="https://en.wikipedia.org/wiki/Politics_of_South_Korea">“韩国政治”</a>词条并没有提到韩国明显被财阀控制，<a
href="https://en.wikipedia.org/wiki/List_of_political_scandals_in_South_Korea">韩国政治丑闻列表</a>里虽然提到韩国政府收取财阀的现金，但没有与财阀干预政治相关的丑闻。（韩国的）财阀这篇文章倒是讲了韩国财阀与政府的关系。不过讲的更多的是财阀贿赂政府，以及政府认为财阀的重要性。<a
href="https://academic.oup.com/edited-volume/37082/chapter-abstract/323175403?redirectedFrom=fulltext&amp;login=true">牛津政治词典</a>提到从97年经济危机之后开始，韩国政府就一直对财团进行改革。牛津政治词典甚至暗示这种监管和改革是韩国独有的，并且是过头了的。</p>
<p>The English Wikipedia page for <a
href="https://en.wikipedia.org/wiki/Politics_of_South_Korea">"Politics
of South Korea"</a> does not mention the overt control of South Korea by
chaebols (conglomerates). In<a
href="https://en.wikipedia.org/wiki/List_of_political_scandals_in_South_Korea">the
list of political scandals in South Korea</a>, the government's
acceptance of money from the chaebols is mentioned, but does not link it
to political intervention. The "chaebol" article discusses the
relationship between the South Korean chaebols and the government, but
focuses more on chaebols bribing the government and the government
recognizing the importance of chaebols. <a
href="https://academic.oup.com/edited-volume/37082/chapter-abstract/323175403?redirectedFrom=fulltext&amp;login=true">The
Oxford Dictionary of Politics</a> mentions that since the economic
crisis of 1997, the South Korean government has been reforming these
conglomerates – even implying that such regulation and reform are unique
to South Korea, and possibly excessive.</p>
<p><br></p>
<p>但是，在维基百科之外，一些文章确实谈到了政府官员与财阀的不良关系，cfr（美国外交关系协会，美国的外交政策智库）的<a
href="https://www.cfr.org/backgrounder/south-koreas-chaebol-challenge">这篇文章</a>提到了政客向财阀寻求财务支持，政府官员（如朴槿惠）向财阀索贿，<a
href="https://brownpoliticalreview.org/2023/03/the-chaebol-a-curse-in-disguise/">布朗评论的文章</a>提到财阀可能会通过缴纳罚款得到政府的特赦。三星是韩国最大的财阀，三星的董事长李健熙在1990年代被判犯有贿赂和欺诈罪。但他没有入狱。2017年，李健熙的儿子李在镕被判犯有贿赂和贪污罪，但只在监狱里服刑了6个月就获得假释，在之后被总统赦免。<a
href="https://www.bbc.com/news/world-us-canada-62501514">赦免的理由是：“有助于维持经济”</a>，但政府完全无法证明自己没有收取酬金。还有一些文章提到了韩国存在三五法则，指无论罪行大小，司法系统对财阀创始人家族往往只会判处三年有期徒刑，缓刑五年，如果在此期间不再发生违法行为，则可以免除。这说明财阀确实一定程度上影响了韩国的司法系统，韩国至少没有做到司法独立。</p>
<p>However, outside of Wikipedia, some articles indeed talk about the
unsavoury relationship between government officials and the chaebols. <a
href="https://www.cfr.org/backgrounder/south-koreas-chaebol-challenge">An
article</a> by the Council on Foreign Relations (CFR) discusses
politicians seeking financial support from chaebols, and government
officials (such as Park Geun-hye) soliciting bribes. <a
href="https://brownpoliticalreview.org/2023/03/the-chaebol-a-curse-in-disguise/">A
commentary</a> by Brown Political Review that chaebols may receive
government pardons by paying fines. Samsung, the largest chaebol in
South Korea, had its chairman Lee Kun-hee convicted of bribery and fraud
in the 1990s, but he did not go to jail. In 2017, his son Lee Jae-yong
was convicted of bribery and embezzlement, but was released on parole
after only six months in jail and later pardoned by the president. <a
href="https://www.bbc.com/news/world-us-canada-62501514">The pardon was
justified on grounds that it would "help sustain the economy"</a>, but
the government could not prove that it did not receive any bribes. Some
articles also mention South Korea's "3-5 rule", which often results in
chaebol family receiving only three-year prison sentences, with
probation for five years, if they do not offend again during that time.
This implies that the chaebols do, to some extent, influence the South
Korean judicial system which hasn't maintained full judicial
independence.</p>
<p><br></p>
<p>总结我所查找的资料：朝鲜战争结束后，韩国政府开始扶持财阀，财阀也为韩国带来了经济上的腾飞。但后来，财阀成为了韩国政治中一股不可忽视的力量，且其对政治的影响是好坏参半的：一方面财阀提供工作岗位，为政府交税，为竞选提供资金，但另一方面财阀与政府之间官商勾结，互相影响。而民众虽然对财阀有怨言，但又认为财阀为韩国带来经济发展，可以增强他们的民族自信心。财阀与政府是处在动态斗争中的，即政府改革财阀的同时财阀游说政府。而在此基础上又不乏财阀与政府的合作，包括一些不光彩的合作。财阀作为韩国政治的参与者确实在干政，但财阀与政府的势力不断抗衡，我们不能说财阀主导了政府。</p>
<p>In summary, after the Korean War, the South Korean government began
supporting chaebols, which brought about an economic boom. But later,
the chaebols became a force to be reckoned with in Korean politics.
Their influence on politics is mixed – they provide jobs, pay taxes, and
fund elections, while also forming an unhealthy relationship with the
government. Despite public grievances against chaebols, they are seen as
a source of economic development and national pride. Chaebols and the
government are engaged in a dynamic struggle, with the government aiming
to reform the chaebols while the chaebols lobby the government. This
dynamic also includes clandestine collaborations between the two
parties. Although the chaebols, as participants in Korean politics, have
influenced the government, their power is counterbalanced by the
government, making it inaccurate to say the chaebols control the
government.</p>
<p><br></p>
<p>多说一句，腾讯网，搜狐新闻，网易新闻等新闻平台明显夸大了事实，并大量掺入自己主观的观点。抖音虽未正面回答，但它的视频以韩国财阀无视法纪为前提，从侧面加强了用户对韩国的错误的刻板印象。知乎还算客观，但仍有先射箭后画靶之嫌。相比之下，英文媒体，无论是措辞，还是内容，都客观了很多（而且网页侧边也没有像搜狐新闻一般的贩卖焦虑&amp;软色情&amp;震惊体的小广告）。</p>
<p>To add a note, Chinese news platforms such as Tencent, Sohu News, and
NetEase News have clearly exaggerated the facts and injected their
subjective viewpoints. Douyin has not directly responded, but its videos
premise on the disregard of laws by Korean chaebols, subtly reinforcing
users' misconceptions about Korea. Zhihu is more objective, but it
shoots conclusions first and is filled with a sense of superiority from
right-wing elitism. In comparison, English media are much more
objective, both in terms of language and content. (And there are no
small ads on the sides of webpages peddling anxiety, soft pornography or
shock culture like on Sohu News.)</p>
<p><br></p>
<p><img src="2.png" /></p>
<p><br></p>
<p><a
href="https://www.koreaherald.com/view.php?ud=20160707000812">页首图片来源
- Header image source</a></p>
<p><a
href="https://www.sohu.com/a/680523533_121687424#google_vignette">页尾图片来源
- Footer image source</a></p>
]]></content>
      <tags>
        <tag>随想 - Thoughts</tag>
      </tags>
  </entry>
  <entry>
    <title>改良主义宣言：防止西朝鲜变成北朝鲜 - Manifesto for Reformism：Preventing &quot;West Korea&quot; from Becoming the &quot;North Korea&quot;</title>
    <url>//post/30/</url>
    <content><![CDATA[<p class="tennisbot" id="如果需要的话，左上角有google翻译&lt;br&gt;There is Google Translate button in the upper left corner, if needed">
由于本文可能稍有敏感，这里仅展示英文版。
</p>
<h3 id="preface">Preface</h3>
<p>Before leaving office, Wen Jiabao stated: "We must not only advance
economic system reform but also political system reform. Without the
guarantee of political system reform, the achievements of economic
system reform may be lost, and the goals of modernization cannot be
realized."</p>
<p><br></p>
<p>Before leaving office, Li Keqiang said: "The Yangtze and Yellow
Rivers will not flow backward, and West Korea's opening-up will not
change."</p>
<p><br></p>
<p>I believe Li Keqiang's statement is more of a warning than a
guarantee: the West Korean nation is at a perilous moment. West Korea is
now at a crossroads, facing the choice between continuing reform and
opening up and modernization, or regressing to a closed and conservative
mode like North Korea. It's crucial for us to stand up and guide West
Korea towards the right direction.</p>
<p><br></p>
<h3 id="some-preliminary-theories">Some Preliminary Theories</h3>
<p>Without oversight, there's no reason for leaders to ensure the
nation's progress. If maintaining a North Korea-like state benefits
their wealth accumulation, why not do it?</p>
<p>Refer to Indonesia's Suharto, the Democratic Republic of the Congo's
Mobutu, and North Korea itself.</p>
<p>There's no evidence to prove that our leaders won't become
dictatorial like Suharto, exploiting the populace. Especially since that
was the case before the reform and opening-up.</p>
<p>The only way to prevent this is to strengthen the powers outside of
officials, enabling mutual supervision and checks and balances.</p>
<p><br></p>
<p>For a nation, the political system influences the economic system,
and vice versa.</p>
<p>For a community, political power determines economic power, and vice
versa.</p>
<p>Everyone wants to strengthen their influence, reflected politically
as every organization with power wanting to maintain it. This leads to a
nation either being stuck in dictatorship or maintaining democracy for a
long time.</p>
<p>I think the biggest issue in West Korea now is that the leadership
(including the elites) has too much power, while the common people
(those not in the leadership group) have too little.</p>
<p>Enhancing the political power of the common people is crucial, and
some methods I can think of include:</p>
<p><br></p>
<ul>
<li>Improving the economic status of the common people<br />
</li>
<li>Enhancing the political knowledge of the common people<br />
</li>
<li>Boosting the protesting capability of the common people<br />
</li>
<li>Uniting the common people</li>
</ul>
<p><br></p>
<p>From my observation, the Party cares most about two things:</p>
<ul>
<li>The long-term leadership of the Party (seemingly a lesson learned
from the dissolution of the Soviet Union)<br />
</li>
<li>The economic development of West Korea (Deng Xiaoping's
ideology)</li>
</ul>
<p>I don't want to anger them, nor do I recommend anyone to resist it
forcefully. In fact, I believe that modernization and democratization
can help achieve these two goals.</p>
<p><br></p>
<p>To maintain the Party's leadership position, the Party chooses to
strictly control Party members, the military, and the media.</p>
<p><br></p>
<p>The leadership is composed of elites, but not all elites are part of
the leadership. "Elites" tend to look down on the common people,
inherently reluctant to share power with them, and believe that doing so
would lead to chaos.</p>
<p>Self-proclaimed elites among the common people might also side with
the leadership.</p>
<p><br></p>
<h3 id="the-people-we-trying-to-change">The people we "Trying to
Change"</h3>
<p>The people we "Trying to Change" (a softened term of enermies) are
the conservative faction within the Party, not any other political
groups, such as the Party's reformist faction, government agencies, the
West Korean people, official media, independent media, or those with
different political views (such as nationalists, orthodox Marxists,
extreme fans of the divine).</p>
<p><br></p>
<p>Some groups, like the Party's reformist faction and independent
media, are clearly allies.</p>
<p><br></p>
<p>My definition of the conservative faction within the Party (compared
to the reformist faction) includes:</p>
<ul>
<li>Those who do not support reform and opening-up and the market
economy
<ul>
<li>No one openly opposes reform and opening-up, but some might be
hypocritical<br />
</li>
<li>This is unconstitutional<br />
</li>
</ul></li>
<li>Those who do not support freedom and democracy
<ul>
<li>Those who only support West Korean-style democracy but not
Western-style democracy are temporarily considered reformists<br />
</li>
<li>No one openly opposes freedom and democracy, but some might be
hypocritical<br />
</li>
<li>This is unconstitutional<br />
</li>
</ul></li>
<li>Those who do not support the rule of law and believe the Party is
above the law
<ul>
<li>This is unconstitutional<br />
</li>
</ul></li>
<li>Those who prevent West Korea from interacting with foreign countries
and isolate West Korea<br />
</li>
<li>Those who block communication between West Korea's lower and upper
classes<br />
</li>
<li>Those who prevent the public from supervising the government</li>
</ul>
<p><br></p>
<p>The conservative faction within the Party is portrayed as
economically right-leaning (due to West Korea's unique form of
socialism), politically authoritarian, and culturally conservative,
which is entirely opposite to Marxism.</p>
<p>(They might see this as criticism, but I genuinely mean no criticism.
In the 21st century, it's reasonable for anyone to support any political
view.)</p>
<p><br></p>
<p>The conservative faction has two major weaknesses:</p>
<ul>
<li>Development: The conservative faction allows for less creative
destruction, which suppresses economic construction and contradicts
their own goals. This has become increasingly apparent in 2023.<br />
</li>
<li>Morality: Even the conservative faction acknowledges the following:
<ul>
<li>West Korea is a socialist country (should with high welfare)<br />
</li>
<li>In West Korea, the people are the masters (democracy)<br />
</li>
<li>The conservative faction might also feel that West Korea is not
doing well in these areas</li>
</ul></li>
</ul>
<p>Additionally, the weak links within the organization are also their
weaknesses, such as:</p>
<ul>
<li>Local governments in impoverished areas<br />
</li>
<li>The State Administration of Radio, Film, and Television<br />
</li>
<li>The Football Association</li>
</ul>
<p>Note: The conservative faction is not a single person; you can't
persuade them to relinquish power like convincing an emperor. Even if
the leader of the conservative faction is assassinated, others would
continue the same policies.</p>
<h3 id="motivation-for-reform">Motivation for Reform</h3>
<p>Reform requires the efforts of two forces: the reformist faction
within the Party and patriotic liberal civilians (people from all walks
of life).</p>
<p><br></p>
<p>The factional struggles within the Party are not public, but in
reality, these internal struggles are the main force pushing West Korea
towards democracy and modernization. The role of patriotic civilian
protests is limited to pressuring the conservative faction within the
Party.</p>
<p><br></p>
<p>The success or failure of West Korea's democratization depends on
whether the reformist faction within the Party can successfully seize
power. Xi belongs to the conservative faction and has already succeeded
in seizing power. It's almost impossible for West Korea to become
democratic before he steps down. Now, a strong reformist faction within
the Party is urgently needed to lead the struggle.</p>
<p><br></p>
<p>For patriotic civilians, the most willing to reform the current
system should be the <strong>elite civilians (intellectuals) and the
lower-class workers and farmers</strong>:</p>
<ul>
<li>Intellectuals are dissatisfied with the current situation</li>
<li>Workers and farmers are the biggest victims of the system</li>
</ul>
<p>However, if West Korea's economy continues to decline, everyone might
protest, like the White Paper Revolution</p>
<p>The more people participate in the struggle, the stronger it is, and
the post-struggle system can take care of more people.</p>
<p><br></p>
<h3 id="what-needs-to-be-done">What Needs to Be Done</h3>
<p>We must avoid direct confrontation, as it would be futile. Nor can we
afford to engage in tirades only to end up banned or silenced. It is
crucial to pinpoint and target specific errors made by the conservative
faction within the Party. Fundamentally, we need to demonstrate that
entrusting the nation to us would lead to better development than
leaving it in the hands of the conservatives.</p>
<p>0: Protect Yourself!</p>
<p>1: Unite and maintain open communication to safeguard our spaces for
discussion as much as possible.</p>
<p>While it's still recommended to use chat apps like WeChat and QQ,
please employ coded language to bypass censorship.</p>
<ul>
<li>The desire to protest is likely stronger among residents within the
country compared to those overseas.<br />
</li>
<li>Not everyone can access social media platforms beyond the Great
Firewall.<br />
</li>
<li>Using coded language can also strengthen our sense of unity and
belonging.</li>
</ul>
<p>Identify and target specific errors committed by the conservative
faction within the Party, including but not limited to:</p>
<ul>
<li>Creating videos on independent media to critique these errors.<br />
</li>
<li>Increasing the visibility of these issues to spark discussion.<br />
</li>
<li>Organizing peaceful protests if the errors are significant.</li>
</ul>
<p>2: Stay alert to signals from the progressive faction within the
Party; their political power is a formidable force that we need to
leverage.</p>
<p>3: Minimize vulnerabilities: Stay within legal bounds, remain
moderate in approach, and distance ourselves from extremist
dissenters.</p>
<ul>
<li>Strict behavioral standards should be applied to those participating
in protests.</li>
</ul>
<h3 id="how-to-protest">How to Protest</h3>
<p>The essence of protest is for the people to express their
dissatisfaction in a mild manner.</p>
<p><br></p>
<p>Traditional forms of protest such as marches and sit-ins are valid,
but new methods can also be employed, such as flooding the comment
sections of official government media with messages or using anonymous
accounts to highlight issues. Organizing "Constitution Reading Groups"
can be effective. Protests should be decentralized, with every protester
acting as a focal point.</p>
<p><br></p>
<p>For a successful protest, collaboration among intellectuals
(students, white-collar workers, those knowledgeable about political
movements), overseas individuals, and grassroots workers and farmers is
crucial.</p>
<p><br></p>
<ul>
<li>Intellectuals can pinpoint the issues, craft slogans, plan
activities, and (eventually) negotiate with the Party.<br />
</li>
<li>Overseas individuals can help consolidate and disseminate
information to intellectuals and take the blame if things go
south.<br />
</li>
<li>Grassroots workers and farmers can provide manpower and lend
legitimacy to the protests (since the Party claims to be a "Marxist"
party).</li>
</ul>
<p>The more people participate in a protest, the better, but demands
should be specific.</p>
<ul>
<li>Avoid making excessive demands; the important thing is to
successfully initiate the first protest.</li>
</ul>
<p><br></p>
<p>Having support from Western countries might be beneficial, but it
could also provide fodder for extreme nationalists and care must be
taken as Western countries might prefer to escalate situations rather
than resolve them.</p>
<p><br></p>
<h3 id="possible-demands">Possible Demands</h3>
<p>It's entirely reasonable for citizens to make demands of their
government, but this form of communication is not smooth in West Korea,
which is detrimental to both sides. <strong>Even the conservative
faction within the Party might agree that allowing citizens to make some
demands could help stabilize the situation.</strong></p>
<p><br></p>
<p>Some actions of the conservative faction are illegal (such as forced
demolitions and invasions of privacy), and although the laws are set by
the Party's subordinates (the National People's Congress), utilizing the
power of law can at least highlight the contradictions between the
reformists and conservatives.</p>
<p><br></p>
<p>During our tug-of-war with the leadership, different stages of
struggle require different demands. Some current high-demand issues
include:</p>
<p><br></p>
<ul>
<li>Stabilizing housing prices<br />
</li>
<li>Boosting the economy, maintaining development, and solving
employment issues<br />
</li>
<li>Education reform (this demand is broad and should be specified
during protests)<br />
</li>
<li>Protecting the rights in homosexual marriages
<ul>
<li>Not necessarily recognizing homosexual marriage but inventing a new
term to protect the rights of same-sex couples after marriage<br />
</li>
</ul></li>
<li>Abolishing the "offsetting rest days" policy<br />
</li>
<li>Raising the minimum wage standard and improving the welfare
treatment of rural populations</li>
</ul>
<p>Making some non-politically charged demands can also be useful,
perhaps even more effective than the above, as it allows citizens to
gauge the bottom line of the leadership and strengthens this mode of
communication, such as:</p>
<ul>
<li><strong>Demanding the Football Association to improve
football!</strong> (Not joking; everyone knows the FA is performing
poorly, which is a window to reveal possible government incompetence.
This is the only organization we can safely protest against now.)</li>
<li>Stopping the display of IP addresses on social media</li>
</ul>
<p><br></p>
<p>Some demands are obviously excessive in the modern era, such as:</p>
<p><br></p>
<ul>
<li>Restoring the presidential term limit<br />
</li>
<li>Demanding freedom of speech (not excessive in 2010, but now it
is)<br />
</li>
<li>Public disclosure of civil servants' assets (not excessive in 2010,
but now it is)<br />
</li>
<li>Lifting the ban on political parties<br />
</li>
<li>Democracy, universal suffrage for the president<br />
</li>
<li>Self-determination for Taiwan<br />
</li>
<li>Overthrowing the current regime<br />
</li>
<li>Inviting Western colonization</li>
</ul>
<p><br></p>
<h3 id="a-note-of-caution-about-the-accelerationists">A Note of Caution
About the Accelerationists</h3>
<p>Accelerationists hope Xi will reverse reforms faster, leading to a
"break to rebuild" scenario, but I believe this is illogical:</p>
<p>Even if Xi performs poorly, it's unlikely for West Korea to collapse,
and the West doesn't wish for West Korea's collapse. A centipede dies
but never falls down. A collapse of West Korea would lead to decades of
hardship for the West Korean, and overseas West Korean would also
suffer. Even if West Korea collapses, who would establish a better
government than the current one? The support for acceleration might stem
from despair over reforming West Korea. But in the 21st century, nothing
is truly hopeless.</p>
<p><br></p>
<p>If you feel strong despair, consider reading more books by
reformists. (Or read this article again.)</p>
<p><br></p>
<h3 id="read-more-world-history">Read More World History</h3>
<p>The problems West Korea faces are, frankly, not unique; many
countries around the world have encountered similar issues:</p>
<p>Conservatism, backwardness, poverty, oppression: North Korea</p>
<p>A country ruled by a group of elite families: Guatemala</p>
<p>A new regime exacerbating exploitation after overthrowing the old
one: Revolutionary United Front in Sierra Leone</p>
<p>Plurality voting: South Korea under Park Chung-hee</p>
<p>A progressive country taking a huge step backward: Iran</p>
<p><br></p>
<p>My advice is to read more world history and politics. Our level of
political and historical knowledge may not be as high as that of the
leadership, but only by enhancing our knowledge can we engage in
dialogue with them on equal footing.</p>
<p><br></p>
<h3 id="a-few-words-about-ourselves">A Few Words About Ourselves</h3>
<p>We are not dissidents; We support Hu Yaobang, Zhao Ziyang, Wen
Jiabao, Li Keqiang, and others.</p>
<p>We are liberals, and for West Korea, I do not seek to overthrow the
regime but to reform West Korea's political system, leading West Korea
towards true modernization and democratization. I believe that under a
modernized, democratized government, West Korea's economy can unleash
even greater vitality.</p>
<p><br></p>
<h3 id="other">Other</h3>
<p>Do not despair; we still have strength! Use wisdom to find people we
can unite with.</p>
<p>The more illegal actions our enemies commit, the more people will
join us.</p>
<p>Our enemies are not foolish; even if they seem not very
knowledgeable, their level of sophistication increases when they convene
with their think tanks.</p>
<p>Not many people wish to overthrow the current regime; most prefer
peace.</p>
<p><br></p>
<p>Appendix: Selected Articles from the Constitution</p>
<p>1.1:</p>
<p>The socialist system is the fundamental system of the People's
Republic of West Korea.</p>
<p><br></p>
<p>1.2:</p>
<p>The people, according to law, manage state affairs, economic and
cultural undertakings, and social affairs through various channels and
forms.</p>
<p><br></p>
<p>1.5:</p>
<p>All state organs, the armed forces, political parties, social groups,
enterprises, and institutions must abide by the Constitution and the
law. Any act that violates the Constitution or the law must be
investigated.</p>
<p><br></p>
<p>1.27:</p>
<p>All state organs implement the principle of simplicity and
efficiency, establish a responsibility system for their work, a training
and evaluation system for their staff, continuously improve the quality
and efficiency of their work, and oppose bureaucracy. All state organs
and state functionaries must rely on the support of the people, maintain
close ties with the people, listen to their opinions and suggestions,
accept their supervision, and serve the people diligently.</p>
<p><br></p>
<p>1.40:</p>
<p>The freedom and privacy of correspondence of citizens of the People's
Republic of West Korea are protected by law. No organization or
individual may, on any grounds, infringe upon the freedom and privacy of
citizens' correspondence, except in cases where, to meet the needs of
state security or of investigation into criminal offences, public
security organs or procuratorial organs are to inspect communications in
accordance with the procedures prescribed by law.</p>
<p><br></p>
<p>1.41:</p>
<p>Citizens of the People's Republic of West Korea have the right to
criticize and make suggestions to any state organ or functionary.
Citizens have the right to lodge complaints, bring charges, or make
exposures against any state organ or functionary for violation of the
law or dereliction of duty, but fabrication or distortion of facts for
the purpose of libel or false accusation is prohibited. State organs
shall investigate and deal with complaints, charges, or exposures made
by citizens in accordance with the law and keep confidentiality for
them. No one shall suppress and retaliate against complainants,
accusers, or exposers.</p>
<p><br></p>
<p>1.48:</p>
<p>The state protects the rights and interests of women, upholding the
principle of equal pay for equal work for men and women.</p>
<p><br></p>
<p>1.54:</p>
<p>Citizens of the People's Republic of West Korea have the duty to
safeguard the security, honor, and interests of the motherland.</p>
]]></content>
      <tags>
        <tag>随想 - Thoughts</tag>
        <tag>敏感 - Sensitive</tag>
      </tags>
  </entry>
  <entry>
    <title>《共产党宣言》读后感 - Reflections on &quot;The Communist Manifesto&quot;</title>
    <url>//post/31/</url>
    <content><![CDATA[<p class="tennisbot" id="如果需要的话，左上角有google翻译&lt;br&gt;There is Google Translate button in the upper left corner, if needed">
由于本文可能稍有敏感，这里仅展示英文版。
</p>
<p><br></p>
<h3 id="foreword">Foreword</h3>
<p>My younger brother was tasked by his school to write a 3,000-word
reflection on "The Communist Manifesto," and he asked for my help.
Embarrassingly, I hadn't read the Manifesto myself, so I took this as an
opportunity to dive in.</p>
<p><br></p>
<p>I read <a
href="https://www.marxists.org/chinese/marx/01.htm">this</a>
version.</p>
<p><img src="1.jpg" /></p>
<p><a
href="https://www.reddit.com/r/LOOK_CHINA/comments/178dy79/%E6%B9%96%E5%8D%97%E5%8D%AB%E8%A7%86%E6%8E%A8%E5%87%BA%E6%96%B0%E5%89%A7%E5%BD%93%E9%A9%AC%E5%85%8B%E6%80%9D%E9%81%87%E8%A7%81%E5%AD%94%E5%AD%90/">Image
Source</a></p>
<p><br></p>
<h3 id="significance">Significance</h3>
<p>First and foremost, "The Communist Manifesto" played a pivotal role
in organizing labor struggles. It defined the proletariat, organized
unions, united workers, and led the proletariat in resisting capitalist
oppression, most importantly, making capitalist countries reconsider
their need to demonstrate their superiority. As Che Guevara once said,
"After we're gone, they'll build schools and hospitals for you, raise
your wages, not because they've had a change of heart or become kind,
but because we were here."</p>
<p><br></p>
<p>The struggle of the lower and middle classes is an eternal theme of
human civilization, as they often represent the most oppressed and
impoverished within a nation or society. Every left-leaning individual
(or rather, anyone who isn't far-right) should spend time and effort
contemplating how to mobilize these groups into a political force, unite
them, and improve their living conditions.</p>
<p><br></p>
<h3 id="limitations">Limitations</h3>
<p><strong>"The Communist Manifesto" is somewhat outdated in certain
aspects; the era of proletarian oppression it concerns is nearly behind
us.</strong> A clear example is the near absence of a true proletariat
in developed countries, where it has merged with the middle class.
Thanks to increased welfare, higher base wages, and various labor
movements, the proletariat in developed nations is no longer
"property-less" as before. Instead, they live relatively comfortable
lives.</p>
<p>For instance, in Canada, a worker earning a monthly salary of
<code>$ 5,000</code> can afford a <code>$ 400,000</code> small villa
(perhaps with some loans), drive a <code>$ 30,000</code> car, dine at
Earls for a decent <code>$ 40</code> steak, bread, and wine meal, and
buy groceries like 4L of milk for <code>$ 6</code>, 1kg of pork for
<code>$ 15</code>. Healthcare and eyeglasses are free, and education is
almost free. They enjoy weekends with sports, picnics, hiking, skiing,
and worship, and might even invest in stocks and bonds. This group can
be considered middle class.</p>
<p><br></p>
<p><strong>Socialist states practicing Marxism-Leninism have generally
failed at checks and balances,</strong> leading to highly centralized
power. China, Vietnam, Laos, and Cuba are all authoritarian states,
ranking low on global democracy indices.</p>
<p>I believe this is fundamentally because Marxism doesn't prioritize
power balance, and its method of distributing state power is flawed. The
bourgeoisie have no standing in Marxist regimes, the right-wing has no
voice, and the proletariat lacks the education and oversight abilities.
This opens doors for those in actual power (the bureaucratic class
claiming to be proletarians) to consolidate their authority.</p>
<p>Moreover, "The Communist Manifesto" emphasizes the state power of the
proletarian dictatorship but downplays the supervision of the
"representatives of the proletariat." In reality, power corrupts all who
wield it. A leader from a proletarian background ceases to be a
proletarian the moment he assumes office; he becomes part of the
bureaucratic class. For various reasons, states capable of authoritarian
rule will inevitably resort to it.</p>
<p><br></p>
<p><strong>"The Communist Manifesto" holds an overly extreme view on
traditional culture and religion.</strong> Modern society should value
diversity and individual rights more. For instance, if the goal of an
ideology is to eliminate all religions, then it inherently lacks
freedom. Furthermore, for a nation, is the benefit of "eliminating
religion" worth the effort compared to its costs?</p>
<p>I think the idea of eradicating traditional culture and religion
(among many similar notions) is essentially arrogant: "I believe this is
harmful to you, so I will eliminate it regardless of your
preference."</p>
<p>From a scientific standpoint, eradicating traditional culture and
religion might seem beneficial. However, humans and societies are
complex, and these elements offer alternative perspectives. Eliminating
them also eradicates social complexity, leading to homogenization.</p>
<p><br></p>
<h3 id="conclusion">Conclusion</h3>
<p>In summary, political groups should critically study "The Communist
Manifesto," acknowledging its significance while being wary of its
"toxicity."</p>
<p>It represents an ideology that has never succeeded (no
Marxist-Leninist state has become developed, let alone a communist one),
shows apparent instability (lacking balance among political forces,
leaving many unrepresented), and most Marxist regimes ultimately
collapse or reform.</p>
<p><strong>Destruction is infinitely easier than construction. "The
Communist Manifesto" should only serve as a reference for left-wing
party activities, not as a guiding philosophy for a nation.</strong></p>
<p><br></p>
<h3 id="other">Other</h3>
<p>For Chinese students, since Marxism is considered far-left (i.e., its
demands are too extreme compared to today's society: abolishing private
property, abolishing the state, pursuing excessive equality), it might
push students' thinking towards extremism. Therefore, Marxism is not
suitable as the first (or only) political theory lesson for students. A
course like "Introduction to Contemporary Chinese and World Political
Thought" would be better than "Principles of Marxism."</p>
<p><strong>Before committing to revolution attracted by the far-left's
utopian visions, young people should ponder whether a terrestrial
paradise is realistic.</strong></p>
<p><br></p>
<p>I dislike Marx's statement, "Philosophers have only interpreted the
world in various ways; the point, however, is to change it."</p>
<p>Marx and Engels were theorists who didn't perfect their theory yet
dismissed its importance. Isn't this ostrich mentality?</p>
<p>Moreover, the Great Leap Forward and the Cultural Revolution, driven
by Mao Zedong and others' rigid adherence to communist literature and
inflexible theories, brought suffering to China. Concepts like "Man must
conquer nature," "exercise subjective initiative," and "class struggle"
were to blame.</p>
<p><br></p>
<p>No stable modern state is built on hatred, seeking "revenge" against
another class (e.g., the feudal or capitalist classes). All hatred can
be a tool for rulers to manipulate and control the masses.</p>
<p>Moreover, if the feudal and capitalist classes are eliminated, what
is the government's legitimacy? Shouldn't the government step down and
relinquish power?</p>
<p><br></p>
<h3 id="analysis-of-selected-sentences">Analysis of Selected
Sentences</h3>
<p>Below is my aggressive analysis, sentence by sentence, of some
passages from "The Communist Manifesto."</p>
<p><br></p>
<h4 id="chapter-one-bourgeois-and-proletarians">Chapter One: Bourgeois
and Proletarians</h4>
<p>"All hitherto societies have had a history of class struggles."</p>
<p>I think a more accurate description would be, "The history of all
societies up to now has been the history of various forces in
balance."</p>
<p>People do not necessarily need to ally with others of the same class.
There are struggles within the bourgeoisie, such as corporate warfare.
Even among "proletarians," there are conflicts. Moreover, in an atomized
society, every individual is in competition with everyone around them,
rendering class irrelevant.</p>
<p>Furthermore, the term "struggle" may not be the most fitting. In a
well-functioning society, the competition among various forces is not so
intense, and there are many historical examples of successful peaceful
protests. Instead of "struggle," "balance" might be a more appropriate
term.</p>
<p><br></p>
<p>"The bourgeoisie has stripped of its halo every occupation hitherto
honored and looked up to with reverent awe. It has converted the
physician, the lawyer, the priest, the poet, the man of science, into
its paid wage laborers."</p>
<p>And then what?</p>
<p>If not compensated with money for their labor, should we use
something more ethereal? It's not impossible, but it could facilitate
exploitation by the powerful over the weak. For example, a village
tyrant or local official could have his doctor treat him for free,
without any compensation.</p>
<p><br></p>
<p>"The bourgeoisie, during its rule of less than a hundred years, has
created more massive and more colossal productive forces than have all
preceding generations together."</p>
<p>I'd argue that it's "advanced technology," not the "bourgeoisie,"
that created productive forces. The proletariat, or even emperors, could
also utilize advanced technology to create productive forces, build
steamships, and lay telegraph lines.</p>
<p><br></p>
<p>"Modern industry has converted the little workshop of the patriarchal
master into the great factory of the industrial capitalist. Masses of
laborers, crowded into the factory, are organized like soldiers."</p>
<p>Personally, I'm not sure whether small workshops or large factories
are definitively more comfortable for workers. However, with the
advancement of time, large factories are more advanced, brighter,
cleaner, and have stricter safety measures, possibly making them
somewhat better than small workshops.</p>
<p><br></p>
<p>"Occasionally the workers are victorious, but only for a time. The
real fruit of their battles lies, not in the immediate result, but in
the ever-expanding union of the workers."</p>
<p>I strongly agree. If workers are to gain more power, they must unite
to fight atomization by the state or capitalists.</p>
<p><br></p>
<p>"The proletariat goes through various stages of development. With its
birth begins its struggle with the bourgeoisie. At first the contest is
carried on by individual laborers, then by the workpeople of a factory,
then by the operatives of one trade, in one locality, against the
individual bourgeois who directly exploits them."</p>
<p>I strongly agree. The workers' failures are temporary. As long as
they continue to be oppressed, they will organize and resist. I
sincerely hope that everyone dissatisfied with their lives will take the
time to read "The Communist Manifesto."</p>
<p><br></p>
<p>"In the conditions of the proletariat, those of old society at large
are already virtually swamped. The proletarian is without property; his
relation to his wife and children has no longer anything in common with
the bourgeois family relations."</p>
<p>Is this how it should be or how it actually is? I don't believe the
proletariat should or indeed has abandoned nation, law, morality, or
religion.</p>
<p><br></p>
<h4 id="chapter-two-proletarians-and-communists">Chapter Two:
Proletarians and Communists</h4>
<p>"The average price of wage labor is the minimum wage, i.e., that
quantum of the means of subsistence which is absolutely requisite to
keep the laborer in bare existence as a laborer."</p>
<p>This only holds true in situations where workers cannot unite to
demand their rights. In modern society, workers' wages are determined by
the degree of their unity and the scarcity of labor.</p>
<p><br></p>
<p>"Some object that upon the abolition of private property, all work
will cease, and universal laziness will overtake us."</p>
<p>The latter half of this statement does not logically follow from the
first. It can be argued that in bourgeois society, workers not
benefiting from their labor is relative, as workers still possess some
private property. It's precisely because private property exists that a
diligent ethos is maintained. And we know that the communal dining hall
model, which fully realizes communism, indeed breeds laziness.</p>
<p>We can infer from this that "The Communist Manifesto" is not a bible,
its contents are not eternal truths, and its authors are not saints.
There are errors within that need to be corrected by later
generations.</p>
<p><br></p>
<p><img src="2.png" /></p>
<p><a
href="http://www.qstheory.cn/zhuanqu/bkjx/2019-11/28/c_1125283907.htm">Image
Source</a></p>
<p><br></p>
<p>"But you communists would introduce community of women, screams the
entire bourgeoisie in chorus. The bourgeois sees his wife merely as a
production instrument.<br />
When they hear that production instruments are to be exploited in
common, they naturally think that the same fate will befall women.<br />
They fail to consider that the issue lies in stopping women from being
treated merely as instruments of production. In fact, it's ludicrous for
the bourgeoisie, with their sanctimonious appearances, to express shock
at the so-called official community of women proposed by communists. The
community of women has almost always existed; it doesn't need to be
introduced by communists.<br />
Our bourgeois, not satisfied with having the wives and daughters of
their proletarians at their disposal, not to mention the formal
institution of prostitution, take the greatest pleasure in seducing each
other's wives.<br />
Bourgeois marriage is, in reality, a form of 'wives in common.' People
can at most accuse communists of wanting to introduce an officially
sanctioned, openly acknowledged form of 'wives in common' in place of
one that is hypocritically concealed."</p>
<p>Firstly, it's unclear whether Marx and Engels support "community of
women." They seem to tacitly permit communists to practice it while also
indicating the public's aversion to it and suggesting the bourgeoisie's
misconduct in this regard is illegitimate. If Marx intended to use the
bourgeoisie's "community of women" and traditional culture's version to
justify the proletariat's version, it contradicts the logic of "The
Manifesto" itself (since it previously invalidated the legitimacy of the
bourgeoisie and traditional culture).</p>
<p>Secondly, even in 2023, there are hardly any proponents of "community
of women." No communist country has legalized it, let alone in the era
when "The Manifesto" was written. Although we might reluctantly say "The
Communist Manifesto" is a very futuristic and advanced declaration, if
it still seems ahead of its time nearly 200 years later, it's hard to
say whether it's a prophecy or a fantasy.</p>
<p>Thirdly, how can we prove statements like "The bourgeoisie sees his
wife as a mere instrument of production" and "Bourgeois marriage is, in
reality, a system of wives in common"? Regarding bourgeois marriage, I
have no experience or insight, but I believe the vast majority of people
do not consider bourgeois marriage to be a form of communal marriage.
Marx and Engels likely made the mistake of using a minority to represent
the whole, taking the most morally bankrupt among the bourgeoisie as
representative of all. Even if these statements were true, does someone
else's wrongdoing justify the proletariat's? Is the misdeed of others a
reason for one not to do good?</p>
<p>Lastly, Marx and Engels launch broad accusations without evidence,
acting like online trolls ("The bourgeois not satisfied with having the
wives and daughters of their proletarians at their disposal, not to
speak of common prostitutes, take the greatest pleasure in seducing each
other's wives."). I acknowledge there must be members of the bourgeoisie
who have engaged in such behavior, but what matters is the overall
quality. If there's even one bourgeois who does not engage in
prostitution, doesn't the logic of this statement collapse?</p>
<p>However, it must be said, it's filled with a fighting spirit, akin to
a shrewish quarrel or internet trolls launching attacks everywhere. It's
drawing targets out of thin air, concluding first and discrediting for
the sake of discrediting. Such lofty discourse is truly refined.</p>
<p><img src="3.png" /></p>
<p><a
href="http://theory.people.com.cn/n1/2018/0524/c40531-30009908.html">Image
Source</a></p>
<p><br></p>
<p>"Some accuse communists of wanting to abolish nations and
nationalities."<br />
"Workers have no country. You cannot take from them what they do not
have."</p>
<p>According to Marx, if workers feel they have no country, then they
indeed have none. Even if they believe they do, it's irrelevant. This is
quite an authoritarian stance.</p>
<p>A compromise would be to send all workers who feel they have no
country to a "Marxist state," while those who feel a connection to their
homeland can return to their respective nations.</p>
<p><br></p>
<p>"The ruling ideas of each age have ever been the ideas of its ruling
class."</p>
<p>Strongly agree, this is insightful.</p>
<p><br></p>
<p>Provide public and free education for all children, abolish the
current form of child labor in factories, and integrate education with
material production, among other measures.</p>
<p>This reminds me of the "Up to the Mountains and Down to the
Countryside" movement, where children were mobilized for production
labor. Reflecting on it, Mao Zedong's adherence to "The Communist
Manifesto" seems proficient... whether this was a blessing or a curse is
still up for debate.</p>
<p><br></p>
<h4 id="chapter-three-socialist-and-communist-literature">Chapter Three:
Socialist and Communist Literature</h4>
<p>"To win over the people, nobles brandish the proletarian's beggar's
bag as a flag. However, whenever the people follow them, they discover
the old feudal coat of arms on their backsides, leading to laughter and
dispersion. "</p>
<p>Is this reality or Marx's fantasy? If it's the latter, data is needed
to show how many nobles attempted to win over the people and how many
people saw through their "tricks."</p>
<p>My assessment is: Inferior propaganda, appealing to emotions.</p>
<p><br></p>
<h4
id="chapter-four-position-of-the-communists-in-relation-to-the-various-existing-opposition-parties">Chapter
Four: Position of the Communists in Relation to the Various Existing
Opposition Parties</h4>
<p>"In short, the Communists everywhere support every revolutionary
movement against the existing social and political order of
things."<br />
"The Communists disdain to conceal their views and aims. They openly
declare that their ends can be attained only by the forcible overthrow
of all existing social conditions. Let the ruling classes tremble at a
Communistic revolution."</p>
<p>How does this differ from terrorism, such as the jihadist faction of
Islam? Moreover, communism seems less suited to human society than
Islamic doctrine (since there are no pure communist states today, but
there are pure Islamic states).</p>
<p>Could the jihadist faction also say: "We jihadists support every
revolutionary movement against the existing social and political order,
let Europe tremble before the glory of the true God."</p>
<p><br></p>
<p>"Workers of the world, unite!"</p>
<p>"Burrito lovers of the world, unite!"</p>
<p>"Burrito lovers" is a term I've coined for those who enjoy burritos
and have eaten them in at least two out of their last three meals. I
believe "burrito lovers" have more in common worldwide and more shared
demands than "proletarians." The term itself is better defined, and
"burrito lovers" should be able to unite more easily than
"proletarians."</p>
<p><br></p>
<h3 id="epilogue">Epilogue</h3>
<p>My younger brother plans to revise this reflection before submitting
it. I believe it might be the most aggressive critique of "The Communist
Manifesto" his school has received in the past three years.</p>
]]></content>
      <tags>
        <tag>随想 - Thoughts</tag>
        <tag>敏感 - Sensitive</tag>
      </tags>
  </entry>
  <entry>
    <title>计算lammps模拟系统的密度 - Calculate the density of a lammps simulated system</title>
    <url>//post/33/</url>
    <content><![CDATA[<p>想要计算lammps模拟系统的密度，需要知道系统的尺寸，和系统内的原子数。</p>
<p>To calculate the density of a lammps simulated system, you need to
know the system's dimensions and the number of atoms within it.</p>
<p><br></p>
<p>对于尺寸在模拟中不发生变化的系统，可以读取其输入文件的结构文件来获得系统的三维尺寸。以下为一个典型的结构文件的例子：</p>
<p>For systems whose dimensions do not change during simulation, you can
obtain the three-dimensional size of the system by reading the structure
file in its input file. Here's an example of a typical structure
file:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">LAMMPS data file</span><br><span class="line"></span><br><span class="line">3072 atoms</span><br><span class="line">2 atom types</span><br><span class="line">2048 bonds</span><br><span class="line">1 bond types</span><br><span class="line">1024 angles</span><br><span class="line">1 angle types</span><br><span class="line"></span><br><span class="line">-1.2631399999999999e+01 1.2631399999999999e+01 xlo xhi</span><br><span class="line">-1.2631399999999999e+01 1.2631399999999999e+01 ylo yhi</span><br><span class="line">-2.5262750000000000e+01 2.5262750000000000e+01 zlo zhi</span><br><span class="line"></span><br><span class="line">Masses</span><br><span class="line"></span><br><span class="line">1 1.008</span><br><span class="line">2 15.9994</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>最长的那三行是盒子的尺寸。x方向的尺寸为12.6314-(-12.6314)=25.2628A。y和z方向的尺寸计算方法类似。</p>
<p>The three longest lines represent the dimensions of the box. The size
in the x-direction is 12.6314 - (-12.6314) = 25.2628 Å. The size in the
y and z directions is calculated similarly.</p>
<p><br></p>
<p>对于尺寸在模拟中发生变化的系统，可以使其输出某一帧的三维尺寸。可以在lammps使用dump命令，比如：</p>
<p>For systems whose dimensions change during simulation, you can output
the three-dimensional size of a specific frame. In lammps, you can use
the dump command, for example:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dump 1 all custom 1000 lammps_out.data id mol type q x y z</span><br></pre></td></tr></table></figure>
<p>可以使得lammps输出模拟过程中的原子个数，盒子尺寸，原子的坐标等信息。</p>
<p>This allows lammps to output information during the simulation
process, such as the number of atoms, box dimensions, and coordinates of
atoms.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ITEM: TIMESTEP</span><br><span class="line">100000</span><br><span class="line">ITEM: NUMBER OF ATOMS</span><br><span class="line">3072</span><br><span class="line">ITEM: BOX BOUNDS pp pp pp</span><br><span class="line">-1.2631399999999999e+01 1.2631399999999999e+01</span><br><span class="line">-1.2631399999999999e+01 1.2631399999999999e+01</span><br><span class="line">-2.5262750000000000e+01 2.5262750000000000e+01</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>系统内各分子或原子的种类与个数可以通过检查输入文件的结构文件来确定。</p>
<p>The types and numbers of molecules or atoms in the system can be
determined by examining the structure file in the input file.</p>
<p><br></p>
<p>在清楚x，y，z，和系统的分子个数后，可以使用以下python脚本计算总系统的密度。</p>
<p>Once you know the dimensions in x, y, z, and the number of molecules
in the system, you can use the following python script to calculate the
overall density of the system.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = <span class="number">25.2628</span>  <span class="comment"># A</span></span><br><span class="line">y = <span class="number">25.2628</span>  <span class="comment"># A</span></span><br><span class="line">z = <span class="number">50.5256</span>  <span class="comment"># A</span></span><br><span class="line"></span><br><span class="line">molecule_amount = <span class="number">1024</span></span><br><span class="line"></span><br><span class="line">molecule_M = <span class="number">18</span>  <span class="comment"># g/mol</span></span><br><span class="line"><span class="comment"># for water</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#############################################</span></span><br><span class="line"></span><br><span class="line">NA = <span class="number">6.02</span> * <span class="number">10</span>**<span class="number">23</span>  <span class="comment"># mol^-1</span></span><br><span class="line">volume = x * y * z * <span class="number">10</span>**-<span class="number">24</span>  <span class="comment"># cm^3</span></span><br><span class="line">mass = molecule_amount * molecule_M / NA  <span class="comment"># g</span></span><br><span class="line">density = mass / volume  <span class="comment"># g/cm^3</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;density = &#123;:.4f&#125; g/cm^3&quot;</span>.<span class="built_in">format</span>(density))</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>编程 - Programming</tag>
      </tags>
  </entry>
  <entry>
    <title>对普通女权，田园女权，与激进女权的粗浅探讨</title>
    <url>//post/32/</url>
    <content><![CDATA[<h3 id="前言">前言</h3>
<p>普通女权，田园女权，激进女权是中国最常见的三种女权形式。在这里我对这三种女权做一个简单的定义：<strong>普通女权试图推翻父权制，追求男女平等；田园女权追求女性特权；激进女权主张性别分离。</strong></p>
<p><br></p>
<h3 id="一些共识">一些共识</h3>
<p>不要与低水平的人缠斗，有些人，你看一眼Ta说的话就应该觉得没有和Ta讨论的必要。</p>
<p><br></p>
<p>目前这个世界仍然处在父权体系下，它是保守，死板，不公平的，给予一部分男人更多权利和资源。<a
href="https://zhuanlan.zhihu.com/p/71262236">1</a></p>
<p>部分男性和大部分女性都是父权制的受害者，但一些男性在受害的同时也获得了一些益处。</p>
<p>男性也可能是父权制的受害者。考虑一个住在穷山村，因为没钱，找不到老婆（新生儿男女性别失衡，以及天价彩礼），而被周围邻居指指点点的大龄青年。他不能出村生活，因为他家里人和村里人要他继承土地，以及给父母养老。</p>
<p><br></p>
<p>中国的女权运动，和其他的人权运动内容并无不同，本质上是少数既得利益者和多数被剥削压迫者的冲突。<a
href="https://www.thepaper.cn/newsDetail_forward_1352330">2</a></p>
<p><br></p>
<p>虽然女权思潮从外国开始并流传到中国，但大多数人是发自内心支持女权的。中国的女权运动并不一定有境外势力的参与。</p>
<p><br></p>
<p>这世界上是有正义的人的，男性支持女权不一定是为了骗炮。</p>
<p><br></p>
<h3 id="普通女权">普通女权</h3>
<p>我定义下的普通女权包括自由女权，后现代主义女权，和一部分的社会主义女权。</p>
<p><br></p>
<p>普通女权追求的是男女平等，即“平权”，其反对的不是“男性”，而是导致男女不平等的父权制度。在这个制度下，男人垄断了大多数的资源，而女人由于其性别遭受了大大小小的歧视。<a
href="https://zhuanlan.zhihu.com/p/71262236">1</a></p>
<p>普通女权反对消费主义陷阱和身体羞辱。</p>
<p><br></p>
<p>普通女权认为：女性是一种社会文化建构出来的产物。而所谓“女性特质”，是受到阶级、民族、宗教、教育等因素影响而形成的。在不同的社会和历史阶段，对女性气质/男子气概的理解不同。（比如法国皇帝会戴假发，穿丝袜，高跟鞋，以彰显自己的男子气概）<a
href="https://zhuanlan.zhihu.com/p/71262236">1</a></p>
<p><br></p>
<p>普通女权提出的口号包括“同工同酬”，“妇女能顶半边天”。</p>
<p><img src="1.png" /></p>
<p><br></p>
<h3 id="田园女权">田园女权</h3>
<p>田园女权是中国特色的女权，是新旧思想混合的产物。“要男人做事供给一切，完全是19世纪的想法；但是，又要男女平等，现代女性的权利又要齐全。”它虽然多由女性主张、对现代女性的权利寸步不让，但其基底却是男权的，也只有在一个男权社会才行得通。<a
href="https://www.naradafoundation.org/content/8712">3</a></p>
<p>比如，在欧美这种不那么男权的社会中，如果女性提出“你负责赚钱养家，我负责貌美如花”，一个欧美男性可能会奇怪为什么会有人可以不“赚钱养家”。</p>
<p><br></p>
<p>一些田园女权也会说支持“平权”，Ta们会为自己遇到的不公抗争，但不一定意识到女性在某些方面占了便宜。（比如可以傍大款，父权社会对她们的要求低，学习/工作不那么好也没关系）</p>
<p><br></p>
<p>田园女权认为男性与女性是竞争关系，Ta们所理解的“女权”是一种对男性的挑战和进攻，是男人和女人之间你死我活的战争。<a
href="https://zhuanlan.zhihu.com/p/71262236">1</a>
让男性受害就意味着让女性受益。</p>
<p><br></p>
<p>田园女权提出的口号包括“你负责赚钱养家，我负责貌美如花”，“girls help
girls”，“他明明那么普通，却那么自信”</p>
<ul>
<li>注，普通女权也会说girls help girls，但女权承认people help
people，即男女之间是可以互相帮助的，而田园女权会认为“girls help girls
only，女性只应该帮助女性”。<br />
</li>
<li>激进女权也会说单女互助，不与 与男性接触的人
互助，即认为与男性接触的女性属于向男性投降，不属于女权群体了。</li>
</ul>
<p><br></p>
<p>田园女权的代表人物是杨笠。她（或者说，镜头前的她）在贬低男性的同时，还有挑对象的打算（或者至少是这么说的）。</p>
<p><img src="2.png" /></p>
<p><img src="3.jpg" /></p>
<p><br></p>
<h3 id="激进女权">激进女权</h3>
<p>激进女权轻视或否定男性，主张性别分离，即尽量避免与男性接触。</p>
<p><br></p>
<p>激进女权的一个基本主张是“6B4T”，“6B”指不结婚、不生育、不恋爱、不（与男性）发生性行为、不购买厌女产品和单女互助（不与已婚者互助）；“4T”指脱束身衣、脱宗教、脱御宅文化、脱偶像。</p>
<p>这些倡导来自韩国女权，通过网络传入后得到了不少国内女权者的认同。<a
href="https://www.wainao.me/wainao-reads/Lisa-in-Crazy-Horse-Show-sparks-controversy-09212023">4</a></p>
<p><br></p>
<p>激进女权也包括对社会和法律失望的普通女权。比如男性猥亵女性却被法官和稀泥。由于法律不公，导致她们认为女性只能通过远离男性来保护自己。激进女权也会认为，整个社会无法通过温和的方式改善，有时候一些根深蒂固的想法，可能就是需要极端的刺激才会有可能改变。</p>
<p>反过来讲，被女性诬告的电车痴汉也会导致男性对法律失望，变成激进男权。激进男权思潮在知乎中相当常见。<a
href="https://www.zhihu.com/question/447590585/answer/1765462980">一个例子</a></p>
<p><br></p>
<p>恶法伤人。考虑一条法律：“男性与女性有任何争执时全部判男性赢”这会导致绝大多数女性立刻完全变成激进女权，再不与男性有任何交流。与之类似的是，不承认女性的独立人格与判断能力的
一些民间习俗 也会导致女性变成激进女权。</p>
<p><br></p>
<p>这里举一个reddit的<a
href="https://www.reddit.com/r/DoubanGoosegroup/">DoubanGoosegroup</a>群组（红迪豆瓣鹅组）的例子，作为极端女权言论的代表。大家也可以浏览这个群组里的一些帖子，感受一下“性别分离”的感觉：</p>
<p><img src="4.png" /></p>
<p><br></p>
<p>下图中，红迪豆瓣鹅组的“踩”是一个轻视男性的图标。</p>
<p>注：这些“轻视”不属于歧视，但处在歧视的边界线上。</p>
<p><img src="5.png" /></p>
<p><br></p>
<p>田园女权和激进女权都可能认为男性原罪论，即男性对女性压迫上千年，于是他们现在需要赎罪。</p>
<ul>
<li>“男性原罪论”并没有道理，因为人类在经历5000年的父系氏族之前，经历了50000年的母系氏族<a
href="https://en.wikipedia.org/wiki/Matrilineality">5</a> -
此外，就算古时代男性压迫女性，和现代的男性女性有什么关系呢？</li>
</ul>
<p><br></p>
<p>田园女权和激进女权的区别在于激进女权与男性割席，但田园女权需要男性为女性奉献。</p>
<p><br></p>
<h3 id="其他">其他</h3>
<p>所有的命运的馈赠，都已经暗中标好了价格，即天下没有免费的午餐。</p>
<p>女权主义者争取到了更长的产假，就可能会导致公司招人时更性别歧视。</p>
<p><br></p>
<p>恶法伤人，恶劣的判决也伤人，恶法导致男女双方没有受益者。</p>
<p>韩国规定三次约会后女性仍然拒绝，第四次就约会成为性骚扰。导致男性不愿不敢与女性约会，导致韩国的男性与女性都是受害者。</p>
<p>中国曾经实行流氓罪法，尤其是严打时期。它既伤害男性的名誉权和自由，又伤害了女性的自由择偶权。比如<a
href="https://zh.wikipedia.org/zh-hans/%E8%BF%9F%E5%BF%97%E5%BC%BA">迟志强案</a>。</p>
<p><br></p>
<h3 id="一些推荐">一些推荐</h3>
<p>推荐<a
href="https://seahorseplanet.net/">《海马星球》</a>，一个有关女权的高水平的播客和博客</p>
<p>一篇<a
href="https://www.wainao.me/wainao-reads/controversial-radical-feminism-04252023">支持激进女权的激进女权介绍</a>，歪脑的很多文章都支持激进女权。</p>
<p>维舟的<a
href="https://www.naradafoundation.org/content/8712">这篇文章</a>对田园女权的讲解比较深刻，非常推荐阅读。</p>
<p><a
href="https://mp.weixin.qq.com/s?__biz=MzI2NzQ1MzIxMQ==&amp;mid=2247575283&amp;idx=1&amp;sn=bbcd574d5d429989ea3de3a3bb13f41a&amp;chksm=eafd7087dd8af9915f91b53302dc20d17a244b27c186c1e645ead5fb85a4b48b7e688da64e6c&amp;cur_album_id=2774369669934841858&amp;scene=189#wechat_redirect">一篇讨论“爹味说教”的好文章</a></p>
<p><a
href="https://en.wikipedia.org/wiki/SCUM_Manifesto">《人渣宣言》</a>是一本激进女权作家写的书，从中可以看出激进女权的一些观点。</p>
<p>mhyyyy做的<a
href="https://youtu.be/F4xbOlvO4T4?si=GKIg-RGLW1W8rbd5">讲解女权主义的视频</a>，他的分类方式与本文不同。</p>
<h3 id="一些乱七八糟的东西">一些乱七八糟的东西</h3>
<p>一篇讲girls help girls的<a
href="https://k.sina.cn/article_5648507852_150ad63cc04000uhle.html">漫画</a>，我看着挺感动的</p>
<p>一篇低水平的激进女权的<a
href="https://weibo.com/6205942286/LvKw2FtZ2?type=repost">文章</a></p>
<p>一篇<a
href="https://zhuanlan.zhihu.com/p/528399509">奇文</a>：仇外仇美上头了</p>
<hr />
<p>2024/06/06更新：</p>
<p>现在中国网络上男女关系更加紧张了，身边的男性朋友（都是年轻人）有一大半认为女权主义太过头了，女性朋友似乎也有越来越多的人想要“远离男性”。</p>
]]></content>
      <tags>
        <tag>随想 - Thoughts</tag>
      </tags>
  </entry>
  <entry>
    <title>油管up主推荐：小岛大浪吹 - Youtuber Recommendation：Xiaodaodalang</title>
    <url>//post/35/</url>
    <content><![CDATA[<p>小岛大浪吹是一位聊政治和经济的油管up主，他的风格比较鲜明，就是“理性爱国”（这里所说的爱国指的是爱共产党以及中国政府）。</p>
<p><br></p>
<p>他做的所有视频都资料翔实，准备充足。他讲事情喜欢梳理逻辑，引用数据，查找资料。他还很爱国，视频里面但凡提到了中国的一些成就，他会由衷地感到高兴。此外，我喜欢他视频的语速与语气，和“要么不做，做就做好”的态度。</p>
<p>但岛哥不喜欢民主，或者说，他认为民众朝三暮四，做不出很好的决定。我相信他支持开明独裁。</p>
<p>虽然在这里我称呼他为岛哥，但是似乎我们两位的年纪相差还挺多的。</p>
<p><br></p>
<p>此外，岛哥绝对属于“有趣的灵魂”，他分析问题有自己的洞见，他的玩笑总能击中我的笑点（比如他说自己是油管第一大反指）。</p>
<hr />
<p>这里推荐几个我认为他做的比较有特色的视频：</p>
<p><br></p>
<p><a
href="https://www.youtube.com/watch?v=PruqQnQYPZQ">《年轻人是否还继续支持共产党》</a></p>
<p>他虽然爱国，但他并不忌讳中国的缺点。并且他可以分析出为什么有些年轻人可能不爱国。在本视频中他引用了大量的数据来分析中国的经济。</p>
<p><br></p>
<p><a
href="https://www.youtube.com/watch?v=kqPxgv_oOSo">《中国为什么又开始打击医疗腐败了，这么多年来医疗到底改革了什么》</a></p>
<p>他梳理了中国从建国以来的所有医疗制度。他不喜欢简单评价中国的现象，看到一个事情就说“共产党完了”或者“习近平不行”，相反，他从更深层的角度去分析中国的各个改革背后的逻辑，而且分析的还算有理有据。</p>
<p><br></p>
<p><a
href="https://www.youtube.com/watch?v=jCOdTC_JH1Y">《新加坡医院也歧视中国人？到底应该如何应对歧视》</a></p>
<p>他详细介绍了新加坡医院是否会有歧视中国人的现象，逻辑自洽，比无脑宣扬“整个世界都仇视中国”的低端小粉红高到不知道哪里去了。</p>
<p><br></p>
<p><a
href="https://www.youtube.com/watch?v=ADp3WmFtyFA">《终章：江泽民，
是如何改变中国的》</a></p>
<p>他又是大量查找资料，梳理长者一生的事迹，很难有人能把长者讲的这么细的，这些搜寻资料的丰富程度简直可以支持一篇研究江泽民的论文了。此外，我认为，一个人只有了解长者一生所有的事件，才有资格评价他。这一系列的前几期视频也相当值得一看。</p>
<p class="tennisbot" id="苟利国家生死以，岂因祸福避趋之">
另，+1s。
</p>
<p><br></p>
<p><a
href="https://www.youtube.com/watch?v=nNnmPC4HsEM">《为什么中国各届领导人都没收复台湾，习近平会在任上武统台湾吗》</a></p>
<p>我不推荐这个视频，但这个视频证明岛哥考虑事情的时候代入国家，几乎不在乎人民的意见，至于人民的抗议可以通过钱来处理。（虽然他说的有理，但是一个文明国家就不应该选择这条路。）此外，岛哥似乎不太接受中国分裂。</p>
<p><br></p>
<p>此外，mhyyyy做的<a
href="https://www.youtube.com/watch?v=Im3jUtxbYIA">《键政人物志之小岛大浪吹》</a>，他的评价和我的评价比较一致。</p>
]]></content>
      <tags>
        <tag>推荐 - Recommendation</tag>
      </tags>
  </entry>
  <entry>
    <title>如何使用python中的量子化学软件包（包括psi4和pyscf） - How to use quantum chemistry software packages in Python (including psi4 and pyscf)</title>
    <url>//post/34/</url>
    <content><![CDATA[<p>虽说现有的量子化学软件如gaussian，orca，和gamess的功能非常强大，但有时为了方便，或者为了加深理解，也可以用python来做简单的量子化学计算。</p>
<p>While current quantum chemistry software like Gaussian, Orca, and
GAMESS are incredibly robust, there are times when using Python for
simple quantum chemistry calculations is more convenient or helps deepen
our understanding.</p>
<p><br></p>
<p>python中的量子化学软件包有以下几个：</p>
<p>The following quantum chemistry software packages are available in
Python:</p>
<p>psi4</p>
<p>pyscf</p>
<p>PyQuante（因为年代过于久远而安装失败 failed to install due to its
age）</p>
<p><br></p>
<p>此外，还有几个类似的量子计算包，但不能做单分子量子化学计算，在本文中暂不考虑：</p>
<p>Additionally, there are several similar quantum computing packages
that can't perform single-molecule quantum chemistry calculations, which
are not considered in this article:</p>
<p>QuTiP（用于量子物理 used in quantum physics）</p>
<p>Quantum ESPRESSO（用于固体物理 used in solid-state physics）</p>
<p><br></p>
<p>本文将介绍如何使用psi4和pyscf。出于方便，本文将使用google
colab安装并使用所有的软件包。</p>
<p>This article focuses on how to utilize psi4 and pyscf. For ease of
use, all software packages will be installed and employed using Google
Colab.</p>
<p><br></p>
<p>安装psi4的最简单的方法是使用conda，在google
colab中使用conda的方法如下所示。</p>
<p>The simplest method to install Psi4 in Google Colab is using Conda,
as demonstrated below:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">!wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh</span><br><span class="line">!chmod +x Miniconda3-latest-Linux-x86_64.sh</span><br><span class="line">!./Miniconda3-latest-Linux-x86_64.sh -b -f -p /usr/local</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">sys.path.append(<span class="string">&#x27;/usr/local/lib/python3.10/site-packages/&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>下载完conda之后，使用conda安装psi4：</p>
<p>After Conda is downloaded, psi4 can be installed using Conda.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">!conda install psi4 python=<span class="number">3.10</span> -c conda-forge/label/libint_dev -c conda-forge -y</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>这里测试一下psi4是否安装正常：使用b3lyp/6-31G进行乙醇分子的单点能计算。乙醇分子的结构由rdkit产生（也是一个在python上可以安装并使用的软件包，rdkit使用代码如下所示）：</p>
<p>To test if psi4 is properly installed, we'll perform a single-point
energy calculation on an ethanol molecule using B3LYP/6-31G. The
molecular structure of ethanol is generated by RDKit, another Python
package that can be installed and used.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">!pip install rdkit</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> rdkit <span class="keyword">import</span> Chem</span><br><span class="line"><span class="keyword">from</span> rdkit.Chem <span class="keyword">import</span> AllChem</span><br><span class="line"></span><br><span class="line">ethanol_smiles = <span class="string">&quot;CCO&quot;</span></span><br><span class="line">ethanol_molecule = Chem.MolFromSmiles(ethanol_smiles)</span><br><span class="line"></span><br><span class="line">ethanol_molecule = Chem.AddHs(ethanol_molecule)</span><br><span class="line">AllChem.EmbedMolecule(ethanol_molecule, AllChem.ETKDG())</span><br><span class="line">AllChem.MMFFOptimizeMolecule(ethanol_molecule)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(Chem.MolToXYZBlock(ethanol_molecule))</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>使用psi4计算乙醇的单点能的代码如下：</p>
<p>The code for calculating the single-point energy of ethanol using
psi4 is as follows:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> psi4</span><br><span class="line"></span><br><span class="line">molecule = psi4.geometry(<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">C     -0.887089    0.175064   -0.012535</span></span><br><span class="line"><span class="string">C      0.460489   -0.515516   -0.046535</span></span><br><span class="line"><span class="string">O      1.442965    0.307267    0.565572</span></span><br><span class="line"><span class="string">H     -0.847478    1.127768   -0.550817</span></span><br><span class="line"><span class="string">H     -1.658782   -0.453327   -0.465842</span></span><br><span class="line"><span class="string">H     -1.176944    0.403676    1.018306</span></span><br><span class="line"><span class="string">H      0.768712   -0.724328   -1.075460</span></span><br><span class="line"><span class="string">H      0.419486   -1.462073    0.500177</span></span><br><span class="line"><span class="string">H      1.478640    1.141468    0.067135</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line">psi4.set_options(&#123;<span class="string">&#x27;basis&#x27;</span>: <span class="string">&#x27;6-31G&#x27;</span>&#125;)</span><br><span class="line"></span><br><span class="line">energy = psi4.energy(<span class="string">&#x27;B3LYP&#x27;</span>, molecule=molecule)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;B3LYP Energy: <span class="subst">&#123;energy&#125;</span> Hartree&quot;</span>)</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>结果为：</p>
<p>The result is:</p>
<p>B3LYP Energy: -154.9882218123809 Hartree</p>
<p>其中量子化学计算所需时间大约为5s。</p>
<p>The quantum chemistry calculation takes about 5 seconds.</p>
<hr />
<p>pyscf可以使用pip安装：</p>
<p>Pyscf can be simply installed by pip:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">!pip install --prefer-binary pyscf</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>使用pyscf计算乙醇的单点能的代码如下：</p>
<p>The code for calculating the single-point energy of ethanol using
pyscf is as follows:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pyscf <span class="keyword">import</span> gto, dft</span><br><span class="line"></span><br><span class="line">mol = gto.Mole()</span><br><span class="line">mol.atom = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">C     -0.887089    0.175064   -0.012535</span></span><br><span class="line"><span class="string">C      0.460489   -0.515516   -0.046535</span></span><br><span class="line"><span class="string">O      1.442965    0.307267    0.565572</span></span><br><span class="line"><span class="string">H     -0.847478    1.127768   -0.550817</span></span><br><span class="line"><span class="string">H     -1.658782   -0.453327   -0.465842</span></span><br><span class="line"><span class="string">H     -1.176944    0.403676    1.018306</span></span><br><span class="line"><span class="string">H      0.768712   -0.724328   -1.075460</span></span><br><span class="line"><span class="string">H      0.419486   -1.462073    0.500177</span></span><br><span class="line"><span class="string">H      1.478640    1.141468    0.067135</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">mol.basis = <span class="string">&#x27;6-31g&#x27;</span></span><br><span class="line">mol.build()</span><br><span class="line"></span><br><span class="line">mf = dft.RKS(mol)</span><br><span class="line">mf.xc = <span class="string">&#x27;b3lyp&#x27;</span></span><br><span class="line"></span><br><span class="line">energy = mf.kernel()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;B3LYP Energy: <span class="subst">&#123;energy&#125;</span> Hartree&quot;</span>)</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>其结果为：</p>
<p>The result is:</p>
<p>B3LYP Energy: -154.98821705367368 Hartree</p>
<p>量子化学计算所需时间大约为8s，比psi4慢上一些。</p>
<p>The quantum chemistry calculation takes about 8 seconds, which is
slightly slower than psi4.</p>
<hr />
<p>这边让这两个软件包进行一个更耗时的任务：优化苯甲酸的几何结构，来判断这两个软件包是否足够实用。苯甲酸的初始结构来源于此。</p>
<p>We then tasked both software packages with a more time-consuming job:
optimizing the geometric structure of benzoic acid to determine their
practicality. The initial structure of benzoic acid was sourced
here.</p>
<p><br></p>
<p>对于psi4，代码如下：</p>
<p>For psi4, the code is as follows:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> psi4</span><br><span class="line"></span><br><span class="line">molecule = psi4.geometry(<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">  H      2.2291     -0.1517      2.9720</span></span><br><span class="line"><span class="string">  C      1.5782     -0.1115      2.0923</span></span><br><span class="line"><span class="string">  C      0.1964     -0.0808      2.2505</span></span><br><span class="line"><span class="string">  H     -0.2402     -0.0983      3.2547</span></span><br><span class="line"><span class="string">  C     -0.6352     -0.0273      1.1374</span></span><br><span class="line"><span class="string">  H     -1.7228     -0.0023      1.2721</span></span><br><span class="line"><span class="string">  C     -0.0788     -0.0060     -0.1439</span></span><br><span class="line"><span class="string">  C     -0.9318      0.0432     -1.3534</span></span><br><span class="line"><span class="string">  O     -0.6482     -0.2725     -2.4972</span></span><br><span class="line"><span class="string">  O     -2.1954      0.5046     -1.1851</span></span><br><span class="line"><span class="string">  H     -2.6479      0.4922     -2.0230</span></span><br><span class="line"><span class="string">  C      1.3094     -0.0420     -0.3022</span></span><br><span class="line"><span class="string">  H      1.7464     -0.0340     -1.3085</span></span><br><span class="line"><span class="string">  C      2.1329     -0.0923      0.8167</span></span><br><span class="line"><span class="string">  H      3.2205     -0.1183      0.6913</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line">psi4.set_options(&#123;<span class="string">&#x27;basis&#x27;</span>: <span class="string">&#x27;6-31G&#x27;</span>&#125;)</span><br><span class="line"></span><br><span class="line">energy, wfn = psi4.optimize(<span class="string">&#x27;B3LYP&#x27;</span>, molecule=molecule, return_wfn=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(energy)</span><br><span class="line">geometry = wfn.molecule()</span><br><span class="line"><span class="built_in">print</span>(geometry.save_string_xyz())</span><br></pre></td></tr></table></figure>
<p>计算耗时3分钟，最终优化后的能量为-420.7053888500819。</p>
<p>This calculation took about 3 minutes, resulting in a final optimized
energy of -420.7053888500819.</p>
<p><br></p>
<p>pyscf不能做几何优化，但其可以引用一些几何优化包的代码。这里使用geometric包，其全部代码如下：</p>
<p>PySCF is unable to perform geometry optimization on its own, but it
can leverage code from geometry optimization packages. Here, we use the
geometric package.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pyscf <span class="keyword">import</span> gto, dft</span><br><span class="line"></span><br><span class="line">mol = gto.Mole()</span><br><span class="line">mol.atom = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">  H      2.2291     -0.1517      2.9720</span></span><br><span class="line"><span class="string">  C      1.5782     -0.1115      2.0923</span></span><br><span class="line"><span class="string">  C      0.1964     -0.0808      2.2505</span></span><br><span class="line"><span class="string">  H     -0.2402     -0.0983      3.2547</span></span><br><span class="line"><span class="string">  C     -0.6352     -0.0273      1.1374</span></span><br><span class="line"><span class="string">  H     -1.7228     -0.0023      1.2721</span></span><br><span class="line"><span class="string">  C     -0.0788     -0.0060     -0.1439</span></span><br><span class="line"><span class="string">  C     -0.9318      0.0432     -1.3534</span></span><br><span class="line"><span class="string">  O     -0.6482     -0.2725     -2.4972</span></span><br><span class="line"><span class="string">  O     -2.1954      0.5046     -1.1851</span></span><br><span class="line"><span class="string">  H     -2.6479      0.4922     -2.0230</span></span><br><span class="line"><span class="string">  C      1.3094     -0.0420     -0.3022</span></span><br><span class="line"><span class="string">  H      1.7464     -0.0340     -1.3085</span></span><br><span class="line"><span class="string">  C      2.1329     -0.0923      0.8167</span></span><br><span class="line"><span class="string">  H      3.2205     -0.1183      0.6913</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">mol.basis = <span class="string">&#x27;6-31g&#x27;</span></span><br><span class="line"></span><br><span class="line">!pip install geometric</span><br><span class="line"><span class="keyword">from</span> pyscf.geomopt.geometric_solver <span class="keyword">import</span> optimize</span><br><span class="line"></span><br><span class="line">mf = dft.RKS(mol)</span><br><span class="line">mf.xc = <span class="string">&#x27;b3lyp&#x27;</span></span><br><span class="line"></span><br><span class="line">mol_eq = optimize(mf, maxsteps=<span class="number">100</span>)</span><br><span class="line"><span class="built_in">print</span>(mol_eq.atom_coords())</span><br></pre></td></tr></table></figure>
<p>它大约计算了11分钟，能量为-420.705454579。</p>
<p>This process took roughly 11 minutes, with an energy of
-420.705454579.</p>
<p><br></p>
<p>在CCCBDB数据库中，苯甲酸的b3lyp/6-31G的能量为-420.705447。两个软件包的能量误差均较小，均可以使用。</p>
<p>In the CCCBDB database, the B3LYP/6-31G energy for benzoic acid is
-420.705447. Both software packages show a small energy error and are
considered usable.</p>
<p><br></p>
<p>综上，psi4似乎执行速度更快，但是pyscf的输出比较全，而且更灵活。</p>
<p>In summary, psi4 appears to be faster in execution, but PySCF offers
more comprehensive outputs and greater flexibility.</p>
]]></content>
      <tags>
        <tag>编程 - Programming</tag>
      </tags>
  </entry>
  <entry>
    <title>元键政4：为什么要了解观点不同的人的想法 - Meta Political Discussion 4：Why Be Aware of Opposing Political Views Matters</title>
    <url>//post/36/</url>
    <content><![CDATA[<p>我在<a
href="https://blog.tennisatw.com/post/35/">这篇文章</a>中推荐了一个油管主：小岛大浪吹。Mhyyyy评价他的政治观念为理性爱国，我深以为然，并且十分向所有理性思考政治问题的自由派推荐。</p>
<p>In <a href="https://blog.tennisatw.com/post/35/">this article</a>, I
recommend a YouTuber: Xiaodaodalang. Mhyyyy describes his political
views as rational patriotism, and I wholeheartedly agree, recommending
him to all liberals who think about political issues rationally.</p>
<p><br></p>
<p>不过，我也承认，以小岛大浪吹为代表的理性兔友的观点和自由派的观点有很大的不同。自由派的人往往支持民主，认为民主是和平年代国家权力合法性的来源。此外，民主可以防止独裁者剥削人民。并且自由派的人往往不爱党和政府，认为如果政府官员不是由大家的票选上去的话，他和政府之间可以没有任何情感，对于国家更是这样。</p>
<p>However, I also acknowledge that the views of rational patriots,
represented by Xiaodaodalang, differ significantly from those of
liberals. Liberals often support democracy, believing it to be the
source of a nation's legitimate authority in times of peace.
Additionally, democracy can prevent dictators from exploiting the
people. Moreover, liberals often have little affection for the party and
government, thinking that if government officials are not elected by the
people, there can be no emotional connection between them and the
government, and even less so with the country.</p>
<p><br></p>
<p>那么，自由派，为什么要去看小岛大浪吹呢？或者考虑一个更大，更有趣的问题：<strong>一个人为什么要去了解，甚至试图理解，与自己观点不同的人的想法呢？</strong></p>
<p>So, why should liberals watch Xiaodaodalang? Or, consider a bigger,
more intriguing question: <strong>Why should anyone seek to understand,
or even try to comprehend, the thoughts of those with different
viewpoints?</strong></p>
<p><br></p>
<p>首先，理性的自由派和理性兔友的观点在不同的方面，可能有不同也有相同。在爱国与否，民主与否上，之间的差距可能很大。但在“要用理性来解决问题”这个态度上可能会达成一致。理性的自由派肯定更愿意与一个高级兔友聊天，而不是与一个低级自由派聊天。</p>
<p>进一步说，爱国与否只是表象，更重要的是听听高水平的人是怎么分析问题的。如果能搁置争议，找到共识，那就再好不过了。</p>
<p>First of all, rational liberals and rational patriots are not
necessarily have different views on various issues. The gap between them
might be significant regarding patriotism and democracy. However, they
might agree on the attitude of using rationality to solve problems.
Rational liberals would certainly prefer to have a conversation with a
high-level patriot rather than with a low-level liberal.</p>
<p>Furthermore, patriotism is just a surface issue; what's more
important is to listen to how high-level individuals analyze problems.
If disagreements can be set aside and consensus can be found, that would
be even better.</p>
<p><br></p>
<p>其次，即使自由派和理性兔友的观点一点共同点都没有，多了解他们思考方式也是有帮助的。多了解他们关心的问题是什么，为什么关心，可以提高自己思想的深度；而分析他们逻辑的漏洞，也能加强自由派的逻辑能力。再不济，越了解他们，就越能在可能的辩论中驳倒他们。知己知彼，百战不殆嘛。</p>
<p>Secondly, even if liberals and rational patriots have no common
ground, understanding their way of thinking is still beneficial.
Learning more about the issues they care about and why they care about
them can deepen one's own thought process. Analyzing the flaws in their
logic can also strengthen the logical abilities of liberals. At the very
least, the more you understand them, the better you can refute them in
potential debates. As the saying goes, "Know your enemy and know
yourself, and you will never be defeated in a hundred battles."</p>
<p><br></p>
<p>我相信这个回答已经可以让理性的自由派们满意了。但是，如果仅从键政的角度来看这个问题的话，它最有趣的一点还体现不出来。</p>
<p>I believe this response can already satisfy rational liberals.
However, if we look at this issue solely from a politic discussing
perspective, its most intriguing aspect isn't fully reflected.</p>
<p><br></p>
<p>让我们抛开政治观念，从哲学的角度去思考这个问题。我认为，了解观点不同的人的想法的核心原因是
<strong>尊重“复杂性”</strong>。</p>
<p>Let's set aside political views and think about this issue from a
philosophical standpoint. I believe the core reason for understanding
the thoughts of people with different viewpoints is <strong>to respect
"complexity"</strong>.</p>
<p><br></p>
<p>世界是复杂的，而人类认识世界的水平有限，所以如果不对这个世界做简化，那就几乎无法去认识它。比如，在牛顿总结出经典运动定律之后，人们才对世界的运动规律有了认识。科研中常用的“做实验”
- “观察结果” - “建立理论模型” 等其实都是对世界的简化。</p>
<p><strong>但是不能因为自己认识事物的模型是简单的，就认为事物本身是简单的</strong>，就像不能只知道牛顿三大定律，就说宇宙的一切都已经知晓。不仅牛顿的三大定律只是高阶物理定律的近似；就算它不是近似，难道要用牛顿的三大定律研究老虎捕猎吗？</p>
<p>The world is complex, and human understanding of it is limited.
Without simplifying this complexity, it would be nearly impossible to
comprehend it. For instance, it was only after Newton formulated his
classical laws of motion that people began to understand the principles
governing movement. In scientific research, the commonly used processes
of "conducting experiments" – "observing results" – "establishing
theoretical models" are essentially ways of simplifying the world.</p>
<p><strong>However, we must not assume that just because our models of
understanding are simple, the phenomena themselves are simple.</strong>
It's similar to how knowing Newton's three laws of motion doesn't mean
we understand everything about the universe. Not only are Newton's laws
merely approximations of higher-order physical laws, but even if they
weren't, would you use Newton's laws to study a tiger hunting?</p>
<p><br></p>
<p>考虑另一个化学方面的例子：分子的性质是相当复杂的，简单的模型只能勉强给出一个分子的结构，而复杂的模型可以模拟分子的红外光谱，再复杂的模型可以研究其反应性。但是为什么中学生只学简单的模型呢？是因为他们只能认识到这里。对于中学生来说，明智的选择是把简单的公式和模型学好，与此同时，要意识到目前所学习的知识不能解释分子的所有现象，需要进一步的学习和研究。</p>
<p>那么化学系的顶尖教授就可以解释清楚分子的所有现象了吗？也并不。目前人类掌握的化学知识还不足，还需要科研人员的进一步学习和研究。目前为止，所有人都只能承认对分子的认识还不够，分子仍然足够复杂。</p>
<p>这就是所谓的，尊重分子的复杂性。</p>
<p>Consider another example from chemistry: the properties of molecules
are quite complex. Simple models can barely describe a molecule's
structure, while more complex models can simulate its infrared spectrum,
and even more sophisticated models can study its reactivity. But why do
high school students only learn the simple models? It's because that's
all they can grasp at their level. For high school students, the wise
choice is to master the simple formulas and models, while also
understanding that their current knowledge cannot explain all phenomena
related to molecules, necessitating further study and research.</p>
<p>So, can top chemistry professors fully explain all phenomena related
to molecules? Not yet. The current chemical knowledge that humanity
possesses is still insufficient, requiring further study and research by
scientists. Up to this point, everyone must acknowledge that our
understanding of molecules is still incomplete, and that molecules
remain sufficiently complex.</p>
<p>This is what is meant by respecting the complexity of molecules.</p>
<p><br></p>
<p>相同的逻辑可以套用在对其他事情的认识上。比如说巴以战争。某人能够认识到“这在某种程度上是一场代理人战争，反映的是美国和伊朗集团在背后角力”固然很好，但是如果藉此就认为自己彻底清楚了巴以战争的本质，那就有失偏颇了，如果此人此后逢人便说巴以冲突是代理人战争，以色列是美国的狗，就实在有些丑陋了。</p>
<p>对于巴以战争，至少还要分析巴勒斯坦和以色列人的民族冲突，宗教问题，历史遗留问题，以及恐怖主义，全球右转现象。我认为才算分析得较为全面，对这件事情的认识才能称得上相对彻底。</p>
<p>The same logic can be applied to understanding other issues, such as
the Israel-Palestine conflict. It's commendable if someone can recognize
that "to some extent, this is a proxy war reflecting the power struggle
between the U.S. and Iran." However, if one assumes that this
perspective alone provides a complete understanding of the conflict,
that would be quite biased. If this person then goes around declaring
that the Israel-Palestine conflict is merely a proxy war and that Israel
is just an American puppet, it would be rather narrow-minded.</p>
<p>To comprehensively understand the Israel-Palestine conflict, one must
also consider the ethnic conflict between Palestinians and Israelis,
religious issues, historical legacies, terrorism, and the global
rightward shift. Only then can the analysis be considered thorough, and
the understanding of this issue relatively complete.</p>
<p><br></p>
<p>再比如，考虑“如何评价江泽民”这个问题。长者一方面坚持改革开放发展经济，促进中国与世界的联系，多才多艺，个人魅力很足。但另一方面，他镇压法轮功，并且在国际关系上处理得比较软弱。每一条都可以是喜欢他或者讨厌他的理由，但每一个足够了解他的人，对他的感情一定是复杂的。</p>
<p>Another example is evaluating Jiang Zemin. On one hand, he insisted
on reform and opening up, promoting economic development and enhancing
China's connections with the world. Additionally, he was talented and
charismatic. On the other hand, he suppressed Falun Gong and was
considered relatively weak in handling international relations. Each of
these points can be reasons to like or dislike him, but anyone who knows
him well would have complex feelings about him.</p>
<p><br></p>
<p>再比如，这世上有大量的哲学家支持唯心主义，也有大量的哲学家支持唯物主义，每一个哲学家都是绝顶聪明。那难道有一半的绝顶聪明的人错了吗？更好的解释是：唯心与唯物同时都对，或者说，唯心与唯物同时都是对世界的不同侧面的近似。如果之前的哲学思考使得一个哲学家推理出唯心主义，那他就完全可以接受唯心主义，反之亦然。</p>
<p>从这个角度上来说，世界是足够复杂的，足够使得哲学家们通过不同的方法推理出不同的结论。</p>
<p>Similarly, there are many philosophers who support idealism and many
who support materialism, and each of these philosophers is incredibly
intelligent. So, does this mean that half of these brilliant minds are
wrong? A better explanation is that both idealism and materialism are
correct, or rather, both are approximations of different aspects of the
world. If previous philosophical reasoning leads a philosopher to
idealism, they can fully embrace idealism, and the same goes for
materialism.</p>
<p>From this perspective, the world is complex enough to allow
philosophers to use different methods to arrive at different
conclusions.</p>
<p><br></p>
<p>回到键政，我想说的是，要承认这世界上有多种多样的价值观，也要尊重每一个有条理且无害的价值观。和我想法不同的人也有他们的理由。对于是否爱国这一问题：人可以因为经济发展，政治制度稳定，自身的生活条件改善，热爱故乡，而爱国。也可以因为经济停滞甚至后退，政治独裁，社会风气过于保守，而不爱国。如果只简单因为爱不爱国这种事情就认为岛哥值得看（或者不值得看），那将错失多少有趣的灵魂啊。</p>
<p>Returning to political discourse, I want to emphasize the importance
of recognizing the diversity of values in this world and respecting
every coherent and harmless value system. People who think differently
from me also have their reasons. Regarding patriotism: one can love
their country because of economic development, political stability, and
improved living conditions, as well as a love for their homeland.
Conversely, one might not love their country due to economic stagnation
or decline, political dictatorship, and overly conservative societal
norms. If we judge Xiaodaodalang's worth solely based on whether he is
patriotic or not, we would miss out on many interesting
perspectives.</p>
<p><br></p>
<p>此外，对于价值观的冲突，一个合适的态度应该是，尊重人选择任何价值观的权力，并适当了解他为什么这么选择，即使不理解他的理由，也应该保持沉默，或者理性地反驳；而不是一旦发现这个人和自己的观点不同，就认为他们是傻逼/被洗脑了/大外宣/反贼/踩缝纫机的/行走的50万/1450......</p>
<p>Furthermore, when it comes to value conflicts, an appropriate
attitude should be to respect people's right to choose their values and
to understand why they make those choices. Even if don't understand
their reasons, one should remain silent or respond rationally.
Discovering that someone has a different viewpoint shouldn't lead to
labeling them as idiots, brainwashed, propagandists, traitors, sewing
machine riders, walking cash rewards, or paid commentators.</p>
]]></content>
      <categories>
        <category>元键政 - Meta Political Discussion</category>
      </categories>
      <tags>
        <tag>随想 - Thoughts</tag>
      </tags>
  </entry>
  <entry>
    <title>视频推荐：《陌生人——柴静对话圣战分子》 - Video Recommendation：&quot;Stranger：Talking to Jihadists&quot;</title>
    <url>//post/20/</url>
    <content><![CDATA[<p><a
href="https://www.youtube.com/watch?v=X4otYJGByic">《陌生人——柴静对话圣战分子》</a>是一系列视频，总共有6集。</p>
<p><a href="https://www.youtube.com/watch?v=X4otYJGByic">"Stranger:
Talking to Jihadists"</a> is a video series consisting of six episodes
in total.</p>
<p><br></p>
<p>这是一套非常有深度的与圣战恐怖分子的采访及对话。我们会认为他们是逻辑混乱，没有良知的人，但柴静用圣战分子的话向我们揭示了圣战分子的世界。视频中从各个方面分析了圣战分子的来源，想法，做事动机。令我相当佩服的一点是，她真的能找到并采访到各种各样的恐怖分子，让他们亲口说出他们的故事和逻辑，而不是借由第三者之口把他们描述成暴徒，或用定制的理论对他们的行为进行简单解释。</p>
<p>This is an incredibly profound series of interviews and conversations
with jihadist terrorists. We may perceive them as illogical and immoral,
but Chai Jing uses the words of the jihadists themselves to reveal their
world. The videos analyze the origins, thoughts, and motivations of
jihadists from various angles. One aspect I greatly admire is her
ability to find and interview a wide range of terrorists, allowing them
to share their stories and logic firsthand, rather than portraying them
as thugs through third-party accounts or simply using some theories to
explain them.</p>
<p><br></p>
<p>柴静说：“人们认为恐怖分子是疯子，但从我采访的感受来看，他们不是精神病学意义上的疯狂，杀人，是推理的结果：人类立法者是假神，宗教就成了政治，暴力就成了表达虔诚的最高方式。地狱天堂作为奖惩制度，杀人自毁就成了功利计算。一旦进入，他们的逻辑轨道就完全封闭。”因为害怕下地狱而参加圣战救赎自己，我理解他们的逻辑（但不认同）。</p>
<p>Chai Jing said, "People think terrorists are madmen, but from my
interviews, they are not insane in the psychiatric sense. Their murders
are the result of logical reasoning: human law-makers are false gods,
religion has become politics, and violence the ultimate expression of
devotion. Heaven and hell have become a system of reward and punishment,
thus murder and self-destruction have become a utilitarian calculation.
Once they're in, their logic becomes completely enclosed." I understand
their logic of joining a holy war for redemption due to the fear of hell
(though I do not agree with it).</p>
<p><br></p>
<p>这个视频特别有条理，一看就是学院派，我就喜欢这种井井有条的样子。此外，柴静每一个问题都问到了我的心坎里。每当对一件事情有疑问时，她都会把它问出来。综上，神作。</p>
<p>The videos are very well organized, it's clear they have an academic
approach, which I really appreciate. Also, Chai Jing manages to ask
questions that touch upon my deepest concerns. Whenever there's a doubt
about anything, she addresses it. In a word, it's a masterpiece.</p>
]]></content>
      <tags>
        <tag>推荐 - Recommendation</tag>
      </tags>
  </entry>
  <entry>
    <title>使用贝叶斯方法分析汪文斌“新闻自由”言论 - Using Bayesian methods to analyze Wang Wenbin&#39;s remarks on &quot;freedom of the press.&quot;</title>
    <url>//post/37/</url>
    <content><![CDATA[<p class="tennisbot" id="如果需要的话，左上角有google翻译&lt;br&gt;There is Google Translate button in the upper left corner, if needed">
由于本文可能稍有敏感，这里仅展示英文版。
</p>
<p><br></p>
<p>On January 2, 2024, Chinese Foreign Ministry Spokesperson Wang Wenbin
stated, "The so-called 'freedom of the press' is merely a tool used by
certain countries to attack and slander other nations." This statement
has sparked controversy and is considered extreme by many. Let's analyze
its credibility using the Bayesian approach.</p>
<p><br></p>
<p>Introduction to the Principle:</p>
<p>A rational person's method of judging the truth or falsehood of a
matter can be viewed as a Bayesian model.</p>
<p><br></p>
<p>When someone says something that aligns with our understanding of an
issue, we tend to strengthen our belief in that issue and the
credibility of the person increases in our eyes.</p>
<p><br></p>
<p>Conversely, when someone says something that contradicts our
understanding, two scenarios may occur:</p>
<p><br></p>
<p>If the person has good credibility and our knowledge of the issue is
not extensive, we tend to believe the person and revise our
understanding of the issue.</p>
<p>If the person has poor credibility and our knowledge of the issue is
extensive, we tend to disbelieve the person and maintain our
understanding of the issue.</p>
<p>More often, both occur simultaneously: we update both our judgment of
the person's credibility and our understanding of the issue.</p>
<p><br></p>
<p>Now, let's use the Bayesian method to analyze Wang Wenbin's
statement. Here's the original text (in Chinese):</p>
<p><br></p>
<p>"Some countries smear Hong Kong's press freedom under the guise of a
so-called 'Media Freedom Coalition,' attacking the SAR government's
legitimate law enforcement and supporting anti-China and Hong
Kong-disrupting elements like Jimmy Lai. We are strongly dissatisfied
and firmly opposed to this. Cases like Assange and Snowden have already
shown the world that the so-called 'freedom of the press' is just a tool
for certain countries to attack and slander others, and they don’t care
about press freedom when it concerns their own interests. They criticize
Hong Kong affairs under the pretense of 'press freedom,' merely out of
discontent with the thriving situation in Hong Kong, attempting to
prolong their privileges and influence there. But all these efforts are
in vain."</p>
<p><img src="1.png" /></p>
<p><img src="2.png" /></p>
<p><br></p>
<p>This statement contradicts my understanding of 'press freedom' (and
also doesn't align with the understanding of most rational Chinese
people, as proven in the annex). The question becomes whether to adjust
my understanding of press freedom or to reduce the credibility I
attribute to Wang Wenbin.</p>
<p><br></p>
<p>On one hand, I believe in the significance of press freedom. Press
freedom is part of freedom of speech, which empowers ordinary people to
oversee the government and maintain justice. For instance, the case of
the mother of eight children would have been ignored without the
continuous exposure by media and news.</p>
<p>Moreover, even if Western countries like the United States and the
United Kingdom haven't fully respected press freedom, it doesn't prove
that press freedom is meaningless. Imperfection doesn't equal
nonexistence.</p>
<p><br></p>
<p>On the other hand, the credibility of the Chinese government has been
continually declining. There are unfulfilled promises (such as not
standing idly by during Pelosi's visit to Taiwan), contradictory
statements (such as insisting on zero-COVID policy then suddenly opening
up), and the constant deletion of videos and discussions on hot topics,
which also reduces the government's credibility.</p>
<p><br></p>
<p>Returning to this press conference, Wang Wenbin could have
objectively and politely said, "Let’s all jointly monitor the
implementation of press freedom and progress together." Instead, he
chose the worst tone, oversimplifying and emotionalizing a complex
issue, attacking a view that most people would not question: the
significance of press freedom. In this state, according to the Bayesian
method, for most people, every extreme statement by Wang Wenbin only
continues to lower the government’s credibility, without yielding any
positive results.</p>
<p><br></p>
<p>However, as long as those who believe in the government continue to
do so, and those who don't believe can't access normal press conferences
or hear normal opinions, then the purpose of muddying the waters is
achieved. I can't really understand their purpose.If they want to make
most rational people indifferent to international affairs, then they are
quite successful.</p>
<hr />
<p>Annex 1: Evidence that Wang Wenbin's statement, "The so-called
'freedom of the press' is merely a tool used by certain countries to
attack and slander other nations," does not align with the understanding
of most rational Chinese people. Here, we analyze several common
attitudes in Chinese public opinion.</p>
<p><br></p>
<p>Opinion of Chinese Liberals: Supports Press Freedom</p>
<p>Chinese liberals, who support freedom of speech, also support press
freedom. They generally believe that press freedom has its own
significance and is not merely "a tool for certain countries to attack
other nations."</p>
<p><br></p>
<p>Opinion of Chinese Marxists 1: News Serves the Ruling Class, China
and "Certain Countries" Are Not Different in This Respect</p>
<p>In Marxist theory, media is seen as a tool of ideology, reflecting
and serving the interests of the ruling class. From this perspective,
Wang's statement is not incorrect.</p>
<p>However, if Marxists believe that news should be a tool of the ruling
class, then the attitude expressed in Wang's statement is problematic.
As Marxists, they should acknowledge both the Chinese government's
suppression of "Hong Kong disruptors" and the U.S. government's actions
against "Snowden." Stability trumps all, might makes right.</p>
<p><br></p>
<p>Opinion of Chinese Marxists 2: Supports Overthrowing Capitalism,
Supports Press Freedom</p>
<p>Some Marxists believe that press freedom can only be truly realized
under proletarian rule. Under capitalism, media often supports the
ruling class. Therefore, they might support press freedom. Others
believe that China is clearly not under proletarian rule. Thus, to
expose and criticize injustices in Chinese society, freedom of speech is
necessary.</p>
<p><br></p>
<p>Opinion of Chinese Patriots 1: News Should Support National
Development and Stability, Supports Wang Wenbin</p>
<p>Some Chinese patriots believe that news should support national
development and stability, thus possibly supporting some degree of media
regulation and guidance. In this view, press freedom is seen as needing
to be within the framework of national interest and social stability. If
it threatens national interests, press freedom should not be upheld.
This group is the only one supporting Wang's view.</p>
<p><br></p>
<p>Opinion of Chinese Patriots 2: Supports Civil Society Overseeing the
Government, Supports Press Freedom</p>
<p>Another group of Chinese patriots believes that press freedom is
vital for the healthy development of civil society and responsible
government oversight. For China to progress normally, press freedom is
necessary.</p>
<p><br></p>
<p>Additionally, there are patriots who oppose anything American, but
they are not rational and are not considered in this discussion.</p>
<p><br></p>
<p>Official Attitude of the Chinese Government: Should Support Press
Freedom</p>
<p>Press freedom is part of freedom of speech, the right and freedom to
express one's opinions. Different eras and political regimes may vary in
their support for press freedom. For the current era, the 1948 Universal
Declaration of Human Rights states: "Everyone has the right to freedom
of opinion and expression... This right includes freedom to hold
opinions without interference and to seek, receive and impart
information and ideas through any media and regardless of
frontiers."</p>
<p>The Universal Declaration of Human Rights was adopted by the United
Nations, and although the government of the People's Republic of China
did not participate in the vote, it still clearly demonstrates support
for the Declaration. Press freedom, included in the Declaration, should
also be supported by the Chinese government.</p>
<p>Moreover, China's constitution supports press freedom: "Citizens of
the People's Republic of China have the freedom of speech, publication,
assembly, association, procession, and demonstration."</p>
<p><br></p>
<p>Annex 2:</p>
<p>The statement by Wang Wenbin about the "thriving situation in Hong
Kong" can also be analyzed using the Bayesian method, with similar
results: aside from reducing the government's credibility, it holds
little significance.</p>
<p><img src="3.png" /></p>
<p><img src="4.png" /></p>
]]></content>
      <tags>
        <tag>随想 - Thoughts</tag>
        <tag>敏感 - Sensitive</tag>
        <tag>技术 - Technology</tag>
      </tags>
  </entry>
  <entry>
    <title>视频推荐：文化进步与保守坐标图</title>
    <url>//post/39/</url>
    <content><![CDATA[<p>推荐一个mhyyyy老师的视频：<a
href="https://www.youtube.com/watch?v=DiDye3-YJ24">《文化进步与保守坐标图》</a>。</p>
<p><img src="1.png" /></p>
<p><br></p>
<p>文化进步与保守是除了经济左派/右派，政治权威/自由，之外的另一个重要的政治光谱。本视频列举了所有常见的进步/保守观点上的意见，并依序排列，量化它们。</p>
<p>注意：保守不一定意味着差，而进步也不一定意味着好，这只是2个没有褒贬的客观的词汇而已。</p>
<p><br></p>
<p>除此之外，本视频还介绍了以下几点：</p>
<p><br></p>
<p>首先，进步/保守是相对的。比如说，支持妇女投票权在19世纪，乃至20世纪的初期，都是相当进步的。但是目前几乎没有哪个国家会认为妇女和男性的投票权应该有所不同。此外，lgbt在我的小时候实在是一个几乎没人会关注的话题，而现在，大家，尤其是女生，都已经觉得这件事情可以拿上台面来讨论了。而在欧美的一些国家，甚至同性婚姻已经合法了。</p>
<p><br></p>
<p>其次，中国人平均相当保守，大约相当于欧美的右翼。而中国大学生的平均保守/进步程度大约相当于世界平均水平。本视频有一个思路特别好，它把“中国人”的文化轴定量化，去媚化了。就是说，中国没有什么特殊的地方，中国的很多特殊国情也和世界上其他地方的一样。免得有人一说起lgbt，或者自由民主，就说中国的国情有别，中国人不能用西方的方法去量化。</p>
<p><br></p>
<p>此外，年轻人中，男性往往比女性保守。我认为是因为女权主义确实带给年轻女性更少的伦理束缚，更自由/多元的选择。总而言之，女性通过支持更进步的女权主义，而获得更高的社会地位。相比之下，有不少男性选择回归传统，推动社会向保守方向发展，来维持自己的高地位。</p>
<p>屁股不一定决定脑袋，但是大概率。</p>
]]></content>
      <tags>
        <tag>推荐 - Recommendation</tag>
      </tags>
  </entry>
  <entry>
    <title>演讲的一些小tips - Some tips for your presentations</title>
    <url>//post/40/</url>
    <content><![CDATA[<p>不用害怕任何演讲，所谓的害怕全都是由于准备不足。本文会给出一些小tips，让大家在准备演讲的时候，用更少的精力去准备得更充分。</p>
<p>本文主要针对的是学术类别的，非母语演讲。</p>
<p>There's no need to fear any presentation; the so-called fear is all
due to insufficient preparation. Here are some tips to help you prepare
more efficiently and effectively for your presentations.</p>
<p>This article is primarily focused on academic presentations in
non-native languages.</p>
<p><br></p>
<p>如果可能的话，要自己写演讲稿。以你自己熟悉的表达方法为主。如果演讲是英语的话，适当用一点点更地道或者更专业的表达方法，但绝对不能多用。除了专有名词外，尽量少用生僻的词汇和高级词汇。无论怎么说，演讲绝对不是背诵，必须要先了解自己讲的东西，才能讲得好。</p>
<p>在写好稿子之后，把它抄在ppt的注释里。</p>
<p>If possible, write your own speech. Use expressions you're familiar
with. If the presentation is not in your first language, sprinkling in
some authentic or professional phrases sparingly. Avoid obscure and
advanced vocabulary, except for specific terminology. Remember, a speech
is not about recitation; you must understand your topic to speak well
about it.</p>
<p>After writing your speech, copy it into the notes section of your
PowerPoint slides.</p>
<p><br></p>
<p>写好稿子之后，照着稿子自己顺一遍。想到什么说什么，超时也没关系，而不是简单地念稿。在这一过程中，尽量不要一直盯着ppt和稿子。如果感觉还是不熟，就等一段时间之后再顺几遍。</p>
<p>Once the speech is written, go through it on your own. Speak freely,
going off-script is fine, and don't just read it verbatim. Try not to
constantly look at your slides or script during this process. If you
still feel unprepared, go through it a few more times after taking a
break.</p>
<p><br></p>
<p>演讲的时候完全可以读稿，甚至完全可以从头读到尾。学术演讲的好处就在于，其实几乎没人在乎你是读的还是背的，他们只关心演讲的内容。</p>
<p>During the presentation, it's completely fine to read from your
script, even from start to finish. The benefit of academic presentations
is that almost nobody cares whether you are reading or have memorized
it; they are only interested in the content of your presentation.</p>
<p><br></p>
<p>最难的环节其实是提问环节。主要有2大难点：一是听不懂问题，二是不知道怎么回答。</p>
<p>The most challenging part is the Q&amp;A session. There are two main
difficulties: not understanding the questions and not knowing how to
answer them.</p>
<p><br></p>
<p>如果担心听不懂问题，可以在准备的时候，让ChatGPT参考你的演讲稿和ppt，帮忙生成一些可能的问题，注意其用词。但是这个说到底是英语水平的问题，所以还是要多练习听力。</p>
<p>对于不知道怎么回答，正好刚才有一些ChatGPT生成的问题，可以用来练习回答。</p>
<p>If you're worried about not understanding the questions, you can have
ChatGPT generate some potential questions based on your speech and
slides. Pay attention to the wording. However, this ultimately comes
down to your English proficiency, so practice your listening skills.</p>
<p>For not knowing how to answer, the questions generated by ChatGPT can
be used to practice your responses.</p>
]]></content>
      <tags>
        <tag>随想 - Thoughts</tag>
      </tags>
  </entry>
  <entry>
    <title>借助ChatGPT，从0开始学一点前端</title>
    <url>//post/41/</url>
    <content><![CDATA[<p>心血来潮，我打算从0开始，花几天时间，学一点前端知识。</p>
<p><br></p>
<p>所谓从0开始，其实也有些夸张。我对于前端有一点点了解（否则也不会突然想学这么一个玩意），包括：</p>
<p>前端是用来设计网站的。<br />
- 前端由HTML，CSS，Javascript组成，其中Javascript是一种编程语言。<br />
-
HTML大约长这样：<code>&lt;p class="paragraph"&gt;一段话&lt;/p&gt;</code><br />
- 打开chrome浏览器，右键点击网页，选择“检查”，能看到一些前端代码。<br />
- 懂一些编程思路。<br />
仅此而已。</p>
<p><br></p>
<p>我会通过向ChatGPT（gpt-4）提问的方式学习，我会把每一次与ChatGPT的对话都记录在blog上。</p>
<p>此外，我给本次学习增加一个限制：即，所有知识来源均仅从ChatGPT处获得，我将只点击ChatGPT给出的连接。</p>
<p>看看我们能走到哪一步吧</p>
<hr />
<h3 id="day1基础知识">day1：基础知识</h3>
<p><a
href="https://chat.openai.com/share/5d19094c-4527-41ef-8866-212e22eb2a0b">https://chat.openai.com/share/5d19094c-4527-41ef-8866-212e22eb2a0b</a></p>
<p>我询问的问题有：</p>
<p>什么是前端，什么是html。</p>
<p>html，css，javascript的格式是什么。</p>
<p>怎么在html中用css，怎么在html中用javascript。</p>
<p><br></p>
<h3 id="day2做一个计算器">day2：做一个计算器</h3>
<p><a
href="https://chat.openai.com/share/89f34b72-0322-4f38-a67e-6499d868a4c5">https://chat.openai.com/share/89f34b72-0322-4f38-a67e-6499d868a4c5</a></p>
<p>我想要一个练手的项目，ChatGPT推荐我做一个网页版计算器。</p>
<p>我询问的问题有：合适的编码平台，如何添加按钮，如何添加按钮功能，如何批量定义按钮，如何计算一个字符串的结果，如何创建一个显示结果的窗口，如何使用css选择器，如何设置按钮样式（包括大小，边框，字符加粗，颜色），如何使用grid排列按钮，如何设置列宽比例，如何用css覆盖之前的样式，如何对结果四舍五入。</p>
<p>在ChatGPT的帮助下，我写出了一个可以正常使用的计算器所需的html，css和js文档。</p>
<p>这是我最终的结果：</p>
<p><img src="1.png" /></p>
<p><br></p>
<p>ChatGPT在解决简单的问题上完全OK，虽然有时候会比较“健忘”，即，隔了几句话再提之前的问题，它可能就会把之前的问题“忘掉”。</p>
<p>此外，当我问小方面的问题的时候，ChatGPT喜欢迫不及待地把整个解决方案都给我。它别是嫌我学得太慢了吧。</p>
<p><br></p>
<h3
id="day3写一个与tennisbot互动的页面">day3：写一个与Tennisbot互动的页面</h3>
<p><a
href="https://chat.openai.com/share/2eec1650-bec4-4af8-9a65-b3f5dd868c1d">https://chat.openai.com/share/2eec1650-bec4-4af8-9a65-b3f5dd868c1d</a></p>
<p>我询问的问题有：如何使用javascript请求某一网址，怎么附加文本内容，怎么使用请求返回的值，怎么创建列表并向列表中添加新的一项，如何使用let和var定义变量，如何创建textarea，如何避免同源策略（CORS）限制，如何定义长字符串，如何提取网页文本信息，如何加密token。</p>
<p>在ChatGPT的帮助下，我写出了一个与Tennisbot（gpt4驱动）交互的页面，可以询问文章的内容，以及给出她自己的评价。</p>
<p>这是我的最终结果：</p>
<p><img src="2.png" /></p>
<p><br></p>
<p>我向ChatGPT询问的主要是一些细节，因为我之前曾经用python写过如何爬取api等程序。ChatGPT的主要作用是使一个半吊子作品变成成品，而不是从0开始设计代码。它更适合当技术员，而不是设计师。</p>
<p><br></p>
<h3 id="结论">结论</h3>
<p>很可惜的是，通过ChatGPT，只能“横冲直撞”走到这一步了。随着知识点难度的加深，我遇到了一个悖论：如果我问不出有用的问题，那ChatGPT给不出有用的答案，我也就无法继续学习；而如果我的知识水平不够，又问不出有用的问题。这证明了一件事：ChatGPT不能系统地给人讲解知识，不能取代老师。</p>
<p>但是，在有系统的教材的情况下，ChatGPT是最强的答疑助教。所有不懂的问题全部可以问。它不能帮你从0到1，但可以帮你从1到10。</p>
<p><br></p>
<h3 id="后记">后记</h3>
<p>随手打开w3school，或者菜鸟教程，或者随便打开三五个项目，照着上面敲点代码，有问题就问ChatGPT。这样学的是最快的，照着教程完成一个项目的成就感也是最足的。</p>
]]></content>
      <tags>
        <tag>编程 - Programming</tag>
        <tag>技术 - Technology</tag>
      </tags>
  </entry>
  <entry>
    <title>番剧&amp;漫画推荐：《街角魔族》</title>
    <url>//post/42/</url>
    <content><![CDATA[<p>首先先说一下，虽然很像，但《街角魔族》并不是一个典型的芳文社kirara系的百合作品（即所谓的日常系废萌番）。在可爱的人物和轻松的日常下，是一个稍有黑暗的故事。</p>
<p><br></p>
<p>最打动我的是整部番中的浓浓的温柔感。正如https://www.bilibili.com/read/cv17998687/这篇文章所说，《街角魔族》是一个过分温柔的世界。</p>
<p>比如阳夏木蜜柑身上有一个诅咒：慌张时自己身边的人便会遭受不幸。虽然周围人（尤其是桃）因为这个诅咒而受到了不少不幸，但没有任何人嫌弃她。这个诅咒本身的来源是一个魔族：乌伽露露，也是蜜柑的父亲为了保护她而召唤的。即使是解开了这个诅咒，乌伽露露快要消失的时候，众人也为乌伽露露找到了一个新的身体。蜜柑本身也是温柔的，在初遇夏美子（魔族）时，因为夏美子太弱小了，而完全下不去手。</p>
<p>此外，整个故事的大背景是魔法少女猎杀魔族。而在多魔市，由于有千代田樱（本身也是魔法少女）设立的结界，导致魔法少女无法遇见魔女。千代田樱本身也帮助了众多魔族，完全不像一般的魔法少女。</p>
<p>每个人都是温柔的。夏美子的能力是梦魔，可以轻松地潜入其他人的梦境，可以做各种各样的坏事（桃的吐槽），但是夏美子甚至没有这个意识。桃和蜜柑也有非常强大的能力，但是她们也没有用这种能力做什么事情。莉莉丝虽然有很“邪恶”的计划，但是总是会被清子泡在酒里，以及被桃用附身券要挟。</p>
<p><br></p>
<p>本质上，我们期待的生活也就是一个温柔而又欢乐的日常，但是世界是复杂的，温柔欢乐的小镇也是脆弱的。能存在这种环境，是因为有一个强大而温柔的人在守护秩序（千代田樱），以及本身小镇的人的素质很高。</p>
<p><br></p>
<p>此外，漫画里的细节极为丰富。比如桃的噩梦里会有平底锅，因为为夏美子做牛排失败了。以及，夏美子送的发卡会在接下来很多画里反复出现。</p>
<p>具体见https://zhuanlan.zhihu.com/p/114285771</p>
<p><img src="1.png" /></p>
]]></content>
      <tags>
        <tag>推荐 - Recommendation</tag>
      </tags>
  </entry>
  <entry>
    <title>统计局在报道全国固定资产投资时数据有误 - The Bureau of Statistics falsified data in their report on national fixed-asset investment.</title>
    <url>//post/38/</url>
    <content><![CDATA[<p><br></p>
<p>中国国家统计局在报道 全国固定资产投资
时，其2023年，2020年和2019年增长率有误。</p>
<p>政府也会有作假行为，这就是一个证明。</p>
<p><img src="1.jpeg" /></p>
<p><a
href="https://twitter.com/torontobigface/status/1752182533582954558?s=46">图片来源</a></p>
<p><br></p>
<p>当然，政府做这种统计的工作量是非常大的，有疏漏大家也都可以理解。但是，短短5年中就有3年出现了相同的错误，都高估了数值，且误差率在10%左右，这是不可接受的，应该是蓄意为之。</p>
<hr />
<p>为了证明图片不是在造谣，我每一条都搜了一下，发现统计局确实有在造假。</p>
<p><img src="2.jpeg" /> <img src="3.jpeg" /> <img src="4.jpeg" /> <img
src="5.jpeg" /> <img src="6.jpeg" /> <img src="7.jpeg" /> <img
src="8.jpeg" /></p>
<p><br></p>
<p>由此观之，田村秀男记者对中国GDP是否造假的怀疑不是空穴来风。</p>
<p><img src="9.jpeg" /></p>
]]></content>
      <tags>
        <tag>随想 - Thoughts</tag>
      </tags>
  </entry>
  <entry>
    <title>绘制Gromacs的xvg文件的脚本 - Script for plotting Gromacs xvg files</title>
    <url>//post/44/</url>
    <content><![CDATA[<p>写了一个脚本，将Gromacs产生的xvg文件绘制成png图片。</p>
<p>Wrote a script that converts xvg files generated by Gromacs into png
images.</p>
<p><a
href="https://github.com/Tennisatw/cchem_scripts/blob/main/analysis/gromacs_xvg_plotting.py">https://github.com/Tennisatw/cchem_scripts/blob/main/analysis/gromacs_xvg_plotting.py</a></p>
<p><br></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Author: Tennisatw</span></span><br><span class="line"><span class="string">Date: 2024/03/25</span></span><br><span class="line"><span class="string">Description:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">将gromacs产生的xvg文件绘制成png图片。</span></span><br><span class="line"><span class="string">Plot the xvg file generated by gromacs as a png image.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">gromacs会用到一些grace的plotting命令, 参考https://plasma-gate.weizmann.ac.il/Grace/doc/UsersGuide.html</span></span><br><span class="line"><span class="string">Gromacs will use some grace plotting commands, refer to https://plasma-gate.weizmann.ac.il/Grace/doc/UsersGuide.html</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># xvg文件地址 - xvg File address</span></span><br><span class="line">file_address = <span class="string">r&quot;xxx.xvg&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 需要绘制的曲线 - Lines to be plotted</span></span><br><span class="line"><span class="comment"># 如需绘制第1，3，5条曲线，填入[1, 3, 5] - If you want to plot the 1st, 3rd, and 5th lines, fill in [1, 3, 5]</span></span><br><span class="line"><span class="comment"># 留空 [] 则绘制所有曲线 - Leave blank [] to plot all lines </span></span><br><span class="line">plotting_lines = []</span><br><span class="line"></span><br><span class="line"><span class="comment"># x轴范围 - x-axis range</span></span><br><span class="line"><span class="comment"># 如需绘制0到100的x轴，填入[0, 100] - If you want to plot the x-axis from 0 to 100, fill in [0, 100]</span></span><br><span class="line"><span class="comment"># 留空则自动调整 - Leave blank for automatic adjustment</span></span><br><span class="line">x_lim = []  </span><br><span class="line"></span><br><span class="line"><span class="comment"># y轴范围 - y-axis range</span></span><br><span class="line"><span class="comment"># 如需绘制0到100的y轴，填入[0, 100] - If you want to plot the y-axis from 0 to 100, fill in [0, 100]</span></span><br><span class="line"><span class="comment"># 留空则自动调整 - Leave blank for automatic adjustment</span></span><br><span class="line">y_lim = []</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># -------------------以下内容不需要修改 Below this line, no need to modify-------------------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">        </span><br><span class="line">x = []</span><br><span class="line">y = []</span><br><span class="line">settings = &#123;<span class="string">&#x27;title&#x27;</span>: <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;xaxis&#x27;</span>: <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;yaxis&#x27;</span>: <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;legend&#x27;</span>: <span class="literal">False</span>&#125;</span><br><span class="line">legends = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(file_address, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    lines = file.readlines()</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> lines:</span><br><span class="line">        <span class="keyword">if</span> line.startswith(<span class="string">&#x27;#&#x27;</span>):</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">elif</span> line.startswith(<span class="string">&#x27;@&#x27;</span>):</span><br><span class="line">            param = line.split()</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                <span class="keyword">if</span> param[<span class="number">1</span>] == <span class="string">&#x27;title&#x27;</span>:</span><br><span class="line">                    settings[<span class="string">&#x27;title&#x27;</span>] = line.split(<span class="string">&#x27;&quot;&#x27;</span>)[-<span class="number">2</span>]</span><br><span class="line">                <span class="keyword">elif</span> param[<span class="number">1</span>] == <span class="string">&#x27;xaxis&#x27;</span>:</span><br><span class="line">                    settings[<span class="string">&#x27;xaxis&#x27;</span>] = line.split(<span class="string">&#x27;&quot;&#x27;</span>)[-<span class="number">2</span>]</span><br><span class="line">                <span class="keyword">elif</span> param[<span class="number">1</span>] == <span class="string">&#x27;yaxis&#x27;</span>:</span><br><span class="line">                    settings[<span class="string">&#x27;yaxis&#x27;</span>] = line.split(<span class="string">&#x27;&quot;&#x27;</span>)[-<span class="number">2</span>]</span><br><span class="line">                <span class="keyword">elif</span> param[<span class="number">1</span>] == <span class="string">&#x27;TYPE&#x27;</span>:</span><br><span class="line">                    <span class="keyword">if</span> param[<span class="number">2</span>] == <span class="string">&#x27;xy&#x27;</span>:</span><br><span class="line">                        <span class="keyword">pass</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&#x27;This script only supports xy type xvg file&#x27;</span>)</span><br><span class="line">                        exit()</span><br><span class="line">                <span class="keyword">elif</span> param[<span class="number">1</span>] == <span class="string">&#x27;subtitle&#x27;</span>:</span><br><span class="line">                    settings[<span class="string">&#x27;title&#x27;</span>] += <span class="string">&#x27;\n&#x27;</span> + line.split(<span class="string">&#x27;&quot;&#x27;</span>)[-<span class="number">2</span>]</span><br><span class="line">                <span class="keyword">elif</span> param[<span class="number">1</span>] == <span class="string">&#x27;legend&#x27;</span>:</span><br><span class="line">                    <span class="keyword">if</span> param[<span class="number">2</span>] == <span class="string">&#x27;on&#x27;</span>:</span><br><span class="line">                        settings[<span class="string">&#x27;legend&#x27;</span>] = <span class="literal">True</span></span><br><span class="line">                <span class="keyword">elif</span> param[<span class="number">2</span>] == <span class="string">&#x27;legend&#x27;</span>:</span><br><span class="line">                    legends.append(line.split(<span class="string">&#x27;&quot;&#x27;</span>)[-<span class="number">2</span>])</span><br><span class="line">            <span class="keyword">except</span> IndexError:</span><br><span class="line">                <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                data = line.strip().split()</span><br><span class="line">                x.append(<span class="built_in">float</span>(data[<span class="number">0</span>]))</span><br><span class="line">                </span><br><span class="line">                data_len = <span class="built_in">len</span>(data) - <span class="number">1</span></span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(data_len):</span><br><span class="line">                    <span class="keyword">try</span>:</span><br><span class="line">                        y[i].append(<span class="built_in">float</span>(data[i+<span class="number">1</span>]))</span><br><span class="line">                    <span class="keyword">except</span> IndexError:</span><br><span class="line">                        y.append([<span class="built_in">float</span>(data[i+<span class="number">1</span>])])</span><br><span class="line">            <span class="keyword">except</span> (IndexError, ValueError):</span><br><span class="line">                <span class="keyword">pass</span></span><br><span class="line">        </span><br><span class="line">legends_new = []    </span><br><span class="line"><span class="keyword">for</span> legend <span class="keyword">in</span> legends:</span><br><span class="line">    legends_new.append(legend.replace(<span class="string">&#x27;\\s&#x27;</span>, <span class="string">&#x27;$_&#123;&#x27;</span>).replace(<span class="string">&#x27;\\v&#123;&#125;\\z&#123;&#125;&#x27;</span>, <span class="string">&#x27;&#125;$&#x27;</span>))       </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> plotting_lines == []:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(y)):</span><br><span class="line">        <span class="keyword">if</span> settings[<span class="string">&#x27;legend&#x27;</span>]:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                plt.plot(x, y[i], label=legends_new[i])</span><br><span class="line">            <span class="keyword">except</span> IndexError:</span><br><span class="line">                plt.plot(x, y[i])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            plt.plot(x, y[i])</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> plotting_lines:</span><br><span class="line">        <span class="keyword">if</span> settings[<span class="string">&#x27;legend&#x27;</span>]:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                plt.plot(x, y[i-<span class="number">1</span>], label=legends_new[i-<span class="number">1</span>])</span><br><span class="line">            <span class="keyword">except</span> IndexError:</span><br><span class="line">                plt.plot(x, y[i-<span class="number">1</span>])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            plt.plot(x, y[i-<span class="number">1</span>])</span><br><span class="line">            </span><br><span class="line"><span class="keyword">if</span> x_lim != []:</span><br><span class="line">    plt.xlim(x_lim)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> y_lim != []:</span><br><span class="line">    plt.ylim(y_lim)</span><br><span class="line">            </span><br><span class="line">plt.title(settings[<span class="string">&#x27;title&#x27;</span>])</span><br><span class="line">plt.xlabel(settings[<span class="string">&#x27;xaxis&#x27;</span>])</span><br><span class="line">plt.ylabel(settings[<span class="string">&#x27;yaxis&#x27;</span>])</span><br><span class="line">plt.legend()</span><br><span class="line"></span><br><span class="line">plt.savefig(file_address.replace(<span class="string">&#x27;.xvg&#x27;</span>, <span class="string">&#x27;.png&#x27;</span>))</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>编程 - Programming</tag>
      </tags>
  </entry>
  <entry>
    <title>推荐一个歌曲生成网站：suno.ai - Recommending a song generation website：suno.ai</title>
    <url>//post/43/</url>
    <content><![CDATA[<p>推荐一个AI生成歌曲的网站：suno.ai。你提供一些风格提示词，以及歌词。它会据此生成歌曲，生成的质量相当不错。</p>
<p>Here I recommend an AI-powered music creation website: suno.ai. You
can provide some style prompts and lyrics, and it will generate songs
based on these. The quality of the generated songs is quite good.</p>
<p><a href="https://app.suno.ai/">https://app.suno.ai/</a></p>
<p><br></p>
<p>下面是我做的一些我感觉还不错的小曲：</p>
<p>Here are some tunes I made that I think are not bad:</p>
<p><br></p>
<p><a
href="https://app.suno.ai/song/755b66e4-a01c-48ac-a769-e9e2149f4679">https://app.suno.ai/song/755b66e4-a01c-48ac-a769-e9e2149f4679</a></p>
<p>相当可以的一首日系电音，颇有刘高兴（Ryu*）的感觉，尤其是结尾。</p>
<p>A remarkable Japanese-style electronic track, reminiscent of Ryu*,
especially towards the end.</p>
<p><br></p>
<p><a
href="https://app.suno.ai/song/0e904fc0-3d51-41c4-8d5a-4bcfd95cd3aa">https://app.suno.ai/song/0e904fc0-3d51-41c4-8d5a-4bcfd95cd3aa</a></p>
<p>这个dnb给我听爽了</p>
<p>A really exhilarating drum and bass track</p>
<p><br></p>
<p><a
href="https://app.suno.ai/song/ca56616f-2b3d-4ef5-9d52-88b03d424978">https://app.suno.ai/song/ca56616f-2b3d-4ef5-9d52-88b03d424978</a></p>
<p>非常有律动感的jazz-funk，放10年前的小众音游都能成为神曲。</p>
<p>A rhythmic jazz-funk piece that could have been a hit in niche rhythm
games a decade ago.</p>
<p><br></p>
<p>当然也可以听听别人做的更nb的歌曲：</p>
<p>Besides that, here are some awesome tracks made by others:</p>
<p><br></p>
<p><a
href="https://app.suno.ai/song/cb50146e-2c81-4547-9e43-a6b6f79337eb">https://app.suno.ai/song/cb50146e-2c81-4547-9e43-a6b6f79337eb</a></p>
<p>一首史诗感拉满的摇滚，质量可以直接商业化。</p>
<p>An epic rock song that is of commercial quality.</p>
<p><br></p>
<p><a
href="https://app.suno.ai/song/5a285fbc-f64a-418a-8b2e-05e3e7990899">https://app.suno.ai/song/5a285fbc-f64a-418a-8b2e-05e3e7990899</a></p>
<p>一首日式lo-fi city pop，也很不错。</p>
<p>A nice Japanese lo-fi city pop.</p>
<p><br></p>
<p><a
href="https://app.suno.ai/song/b27c29f6-8ab4-47eb-81fd-efb85c848ada">https://app.suno.ai/song/b27c29f6-8ab4-47eb-81fd-efb85c848ada</a></p>
<p>一首hard
bass“洗脑神曲”。如果suno能稳定出这种质量的曲子的话，什么视频都不用找人配乐了。</p>
<p>A hard bass "brainwashing hit." If suno can consistently produce in
this quality, there's no need to hire composers for any videos.</p>
]]></content>
      <tags>
        <tag>推荐 - Recommendation</tag>
      </tags>
  </entry>
  <entry>
    <title>为没有拓扑信息的系统分析氢键 - Analyzing Hydrogen Bonds in Systems without Topological Information</title>
    <url>//post/46/</url>
    <content><![CDATA[<h3 id="背景介绍---background">背景介绍 - Background</h3>
<p>组里的人要分析一个系统的氢键数量和氢键自相关函数（Hbond
autocorrelation function，hbacf）。</p>
<p>A colleague in our group is tasked with analyzing the number of
hydrogen bonds and the hydrogen bond autocorrelation function (hbacf) in
a system.</p>
<p><img src="1.png" /></p>
<p><br></p>
<p>通常来说，想要获得氢键相关的信息，如果是Gromacs模拟的系统，直接用Gromacs分析就可以。对于其他系统，如果懂点python的话，也可以用MDAnalysis来分析。但是这两个软件必须要系统的拓扑信息（即键连接的信息）。但是我们是用cp2k做的量子力学模拟，根本就没有“键”的概念，也更无从谈起拓扑信息了。</p>
<p>VMD倒是可以在没有拓扑信息的条件下计算氢键，但是它给不出氢键的自相关函数，并且VMD非常容易报错，所以也没法用。</p>
<p>To obtain information about hydrogen bonds, if the system is
simulated with Gromacs, one can directly use Gromacs for analysis. For
other systems, if one is familiar with Python, MDAnalysis can be used
for the analysis. However, both tools require the topological
information of the system (i.e., the information on bond connections).
But our simulations were conducted using cp2k for quantum mechanical
calculations, where the concept of "bonds" doesn’t exist, let alone
topological information.</p>
<p>VMD can calculate hydrogen bonds without topological information, but
it cannot compute the autocorrelation function of hydrogen bonds.
Moreover, VMD seems to encounter errors very frequently, rendering it
unusable.</p>
<p><br></p>
<p>此外，系统中除了要分析的分子外，还有一些水分子，我们不想分析水分子产生的氢键，但我们的轨迹文件里又区分不开不同的氧原子和氢原子。这说明我们要么手动编辑轨迹文件，要么只能手动写代码了。</p>
<p>Additionally, besides the molecules of interest, there are water
molecules in the system whose hydrogen bonds we do not wish to analyze.
However, our trajectory files do not differentiate between the various
oxygen and hydrogen atoms. This means we must either manually edit the
trajectory files or resort to writing our own code.</p>
<p><br></p>
<p>还有一个小难点：我们的系统不是正交系统（系统晶胞的三个边长的夹角不都是90度），而且我们也没有晶胞（unit
cell）在模拟过程中尺寸变化的信息。这无论如何都会影响
对穿过边界的氢键的判断。</p>
<p>Another minor issue is that our system is non-orthogonal (the angles
between the sides of the unit cell are not all 90 degrees), and we do
not have information on the size changes of the unit cell during the
simulation. This will inevitably affect the judgment of hydrogen bonds
that cross boundaries.</p>
<p><br></p>
<p>简单搜索了一下发现网上没有现成的脚本（估计也不能有，因为要求太多了），于是就自己动手撸了。</p>
<p>A quick search revealed that there are no ready-made scripts
available online (probably because the requirements are too complex), so
we decided to develop our own.</p>
<p><br></p>
<p>事后看来，似乎可以用MDAnalysis.topology.guessers.guess_bonds猜测生成键的信息，然后计算氢键的各个性质。非正交的晶胞也可以用MDAnalysis.transformations.boxdimensions设置。只需手动编辑轨迹文件，再生成一个拓扑文件，应该是可以用的......</p>
<p>但是调试这些东西也可能花更长的时间，整不好还不如自己写代码快。</p>
<p>In hindsight, it seems possible to use
MDAnalysis.topology.guessers.guess_bonds to guess and generate bond
information, and then compute various properties of hydrogen bonds.
Non-orthogonal cells can also be addressed with
MDAnalysis.transformations.boxdimensions. With manual editing of the
trajectory files and generating a topology file, it should work...</p>
<p>But debugging these things might take even longer, and it might not
be faster than writing our own code.</p>
<p><br></p>
<hr />
<h3
id="读取轨迹寻找氢键---reading-the-trajectory-and-identifying-hydrogen-bonds">1.
读取轨迹，寻找氢键 - Reading the trajectory and identifying hydrogen
bonds</h3>
<p>首先先读取轨迹。我们的轨迹文件是.xyz结构。如下所示：</p>
<p>First, we read the trajectory. Our trajectory file is in .xyz format,
where each frame is structured as follows:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">     375</span><br><span class="line"> i =        0, time =        0.000, E =     -1806.5448765045</span><br><span class="line">  C         8.1095344200       15.8026241800        1.5938169800</span><br><span class="line">  C         5.7444869400       16.3711774800       -2.6299998400</span><br><span class="line">  C         6.6043943500       21.2214335300       -2.1728327500</span><br><span class="line">  C         9.1651693300       20.6276966700        1.9919611600</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>读取这种轨迹非常简单，一个readline()循环，然后根据其split()出的列表长度判断，是把这一行储存在现有的帧中，还是把这一帧结束掉，储存到列表里，新建一帧。这里留了个心眼，估计之后对原子的位置的计算会非常多，所以把原子的位置储存为np.ndarray形式，而把原子的种类信息单独储存在另一个列表中。</p>
<p>Reading this type of trajectory is quite straightforward: a
<code>readline()</code> loop is used, and then based on the length of
the list obtained from its <code>split()</code>, it is determined
whether to store the line in the current frame or to end the frame and
store it in a list, then start a new frame. Anticipating frequent
calculations on atomic positions in subsequent steps, the atomic
positions are stored in the form of an <code>np.ndarray</code>, while
the atomic type information is kept in a separate list.</p>
<p><br></p>
<p>下一步是判断系统内有哪些氢键。这个没有捷径，只能一帧一帧地判断。这也是本程序中最慢的一步。</p>
<p>氢键的判断的标准不一，通常来说，如果
氢键受体原子(D)与氢键供体原子(A)之间的距离 小于一个值，且
氢键受体原子-氢原子(H)-氢键供体原子
大于一个角度时，就认为这是一个氢键。有时D-H的距离也会考虑在内。</p>
<p>我采用的标准是
D-A小于3.5A，DHA角不小于150°，且D-H小于1.2A。它不是最合理的判断标准，但应该可以用。</p>
<p>为了少判断一点角度，多判断一点距离，D-A小于1.8A的我也都认为不是合理的氢键，因为D-A的化学键最长也差不多有1.7A。</p>
<p>The next step is to determine the hydrogen bonds present in the
system. This process has no shortcut and must be done frame by frame,
making it the slowest step in the program.</p>
<p>The criteria for identifying hydrogen bonds vary, but generally, if
the distance between the hydrogen bond acceptor atom (D) and the
hydrogen bond donor atom (A) is less than a certain value, and the angle
formed by the hydrogen bond acceptor atom, hydrogen atom (H), and
hydrogen bond donor atom is greater than a certain angle, then it is
considered a hydrogen bond. Sometimes the distance between D and H is
also taken into account.</p>
<p>The criteria I used are: D-A less than 3.5 Å, DHA angle not less than
150°, and D-H less than 1.2 Å. While not the most accurate criteria,
they should be functional.</p>
<p>To reduce the number of angle calculations and focus more on
distance, I also consider any D-A distance less than 1.8 Å as not a
valid hydrogen bond, because the longest chemical bond between D and A
is also about 1.7 Å.</p>
<p><br></p>
<p>寻找氢键，首先是计算两个原子之间的距离，这里需要用一点高数的几何学的知识。由于本系统含有周期性边界，且非正交，所以需要先把原子坐标转换为相对于晶胞的坐标，然后计算其距离，并四舍五入成最小的值，然后再转回正常的坐标。</p>
<p>因为我们没有每一步的晶胞尺寸数据，所以只能用平均值，导致晶胞参数变动较大的一些帧（如果有的话）处
无法准确判断边界处的氢键。</p>
<p>To find hydrogen bonds, the first step is to calculate the distance
between two atoms, requiring some knowledge of calculus and geometry.
Given that our system has periodic boundaries and is non-orthogonal,
it's necessary to convert the atomic coordinates into coordinates
relative to the unit cell, calculate their distance, round it to the
nearest minimum value, and then convert back to the standard
coordinates.</p>
<p>We lack the cell size data for each step, so we must use an average
value. This approach may lead to inaccuracies in determining hydrogen
bonds at the boundaries of frames with significant variations in cell
parameters, if any exist.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># box size, in Angstrom</span></span><br><span class="line">A = np.array([<span class="number">25.11</span>, <span class="number">0.0</span>, <span class="number">0.0</span>])  </span><br><span class="line">B = np.array([<span class="number">0.0</span>, <span class="number">22.99</span>, <span class="number">0.0</span>])</span><br><span class="line">C = np.array([-<span class="number">1.49</span>, <span class="number">0</span>, <span class="number">6.82</span>])</span><br><span class="line">vectors = np.array([A, B, C]).T</span><br><span class="line">inverse_vectors = np.linalg.inv(vectors)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">distance</span>(<span class="params">coord1: np.ndarray, coord2: np.ndarray</span>) -&gt; <span class="built_in">float</span>:</span><br><span class="line">    <span class="comment"># Convert points to the box&#x27;s coordinate system</span></span><br><span class="line">    p1_box = np.dot(inverse_vectors, coord1)</span><br><span class="line">    p2_box = np.dot(inverse_vectors, coord2)</span><br><span class="line">    <span class="comment"># Apply minimum image convention in the box&#x27;s coordinate system</span></span><br><span class="line">    delta_box = p1_box - p2_box</span><br><span class="line">    delta_box -= np.<span class="built_in">round</span>(delta_box)</span><br><span class="line">    <span class="comment"># Convert the distance back to the original coordinate system</span></span><br><span class="line">    delta = np.dot(vectors, delta_box)</span><br><span class="line">    <span class="comment"># Calculate the distance</span></span><br><span class="line">    distance = np.sqrt(np.<span class="built_in">sum</span>(delta**<span class="number">2</span>))</span><br><span class="line">    <span class="keyword">return</span> distance</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>计算三个原子之间的角度也是一样，首先计算从H到D的向量（计算向量和距离的唯一区别就在于，向量不需要最后对三个差值平方求和后开根号），然后计算从H到A的向量。这两个向量的夹角的cos值就是a·b/(|a||b|)。为了稍微省一点计算步骤，这里不把它转换成角度，直接用cos值比较。代码如下：</p>
<p>Calculating the angle between three atoms follows a similar process.
First, calculate the vector from H to D (the only difference between
calculating the vector and the distance is that for the vector, you
don't need to take the square root of the sum of the squares of the
three differences), and then calculate the vector from H to A. The
cosine of the angle between these two vectors is given by a·b/(|a||b|).
To save some computational steps, the comparison is made directly using
the cosine value instead of converting it to an angle. The code is as
follows:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">direction_vector</span>(<span class="params">coord1, coord2</span>):</span><br><span class="line">    <span class="comment"># Convert points to the box&#x27;s coordinate system</span></span><br><span class="line">    p1_box = np.dot(inverse_vectors, coord1)</span><br><span class="line">    p2_box = np.dot(inverse_vectors, coord2)</span><br><span class="line">    <span class="comment"># Apply minimum image convention in the box&#x27;s coordinate system</span></span><br><span class="line">    delta_box = p1_box - p2_box</span><br><span class="line">    delta_box -= np.<span class="built_in">round</span>(delta_box)</span><br><span class="line">    <span class="comment"># Convert the direction vector back to the original coordinate system</span></span><br><span class="line">    direction = np.dot(vectors, delta_box)</span><br><span class="line">    <span class="keyword">return</span> direction</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">angle</span>(<span class="params">coord1: np.ndarray, coord2: np.ndarray, coord3: np.ndarray</span>) -&gt; <span class="built_in">float</span>:</span><br><span class="line">    <span class="comment"># Calculate direction vectors</span></span><br><span class="line">    v1 = direction_vector(coord2, coord1)</span><br><span class="line">    v2 = direction_vector(coord3, coord1)</span><br><span class="line">    <span class="comment"># Calculate the cosine of the angle using the dot product</span></span><br><span class="line">    cos_angle = np.dot(v1, v2) / (np.linalg.norm(v1) * np.linalg.norm(v2))</span><br><span class="line">    <span class="comment"># Return cos(angle)</span></span><br><span class="line">    <span class="comment"># Ensure the cosine value is in the valid range [-1, 1] to avoid numerical issues</span></span><br><span class="line">    <span class="keyword">return</span> np.clip(cos_angle, -<span class="number">1</span>, <span class="number">1</span>)</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>寻找所有潜在的氢键受体与供体，以及所有的H原子，然后是套用三层循环来“逐个判断”每个原子三元组是否形成氢键。丑陋的代码如下所示：</p>
<p>To identify all potential hydrogen bond acceptors, donors, and all
hydrogen (H) atoms, a triple nested loop is employed to "individually
assess" whether each set of three atoms forms a hydrogen bond. The crude
code is as follows:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> num_d <span class="keyword">in</span> indices_da:</span><br><span class="line">    <span class="keyword">for</span> num_h <span class="keyword">in</span> indices_h:</span><br><span class="line">        coord_d = coord[num_d]</span><br><span class="line">        coord_h = coord[num_h]</span><br><span class="line">        <span class="keyword">if</span> distance(coord_d, coord_h) &gt; hbond_distance_dh:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">for</span> num_a <span class="keyword">in</span> indices_da:</span><br><span class="line">            <span class="keyword">if</span> num_a == num_d:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            coord_a = coord[num_a]</span><br><span class="line"></span><br><span class="line">            distance_da = distance(coord_d, coord_a)</span><br><span class="line">            <span class="keyword">if</span> distance_da &lt;<span class="number">1.8</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">elif</span> distance_da &gt; hbond_distance_da:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">            angle_dha = angle(coord_d, coord_h, coord_a)</span><br><span class="line">            <span class="comment"># angle &gt; 150 means cos(angle) &lt; cos(150)</span></span><br><span class="line">            <span class="keyword">if</span> angle_dha &lt; hbond_angle_dha_cos:</span><br><span class="line">                hbond = Hbond(num_d, num_h, num_a)</span><br></pre></td></tr></table></figure>
<p>这三层循环外，还有一个对帧循环。</p>
<p>Outside these three nested loops, there is another loop iterating
over the frames.</p>
<p><br></p>
<p>其实，如果这个系统是正交的话，可以用kdtree来非常方便地统计与D距离小于1.2的H，和与D距离小于3.5的A。虽然也是三层循环，但是不用判断原子之间的距离了，计算速度超级加倍，代码如下所示。</p>
<p>In fact, if the system were orthogonal, a k-d tree could be used to
efficiently identify H atoms within a 1.2 Å distance from D, and A atoms
within a 3.5 Å distance from D. Although this still involves three
nested loops, there is no need to calculate the distances between atoms
directly, which significantly speeds up the computations. The code for
this approach is as follows:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">atom_h = [atom == <span class="string">&#x27;H&#x27;</span> <span class="keyword">for</span> atom <span class="keyword">in</span> atoms]</span><br><span class="line">atom_da = [atom <span class="keyword">in</span> hbond_donors_acceptors <span class="keyword">for</span> atom <span class="keyword">in</span> atoms]</span><br><span class="line">indices_h = [i <span class="keyword">for</span> i, is_h <span class="keyword">in</span> <span class="built_in">enumerate</span>(atom_h) <span class="keyword">if</span> is_h]</span><br><span class="line">indices_da = [i <span class="keyword">for</span> i, is_da <span class="keyword">in</span> <span class="built_in">enumerate</span>(atom_da) <span class="keyword">if</span> is_da]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Build the KDTree, a data structure for quickly finding the nearest atoms</span></span><br><span class="line"><span class="comment"># For each donor atom, find the hydrogen atoms within the distance hbond_distance_dh</span></span><br><span class="line"><span class="comment"># For each donor atom, find the acceptor atoms within the distance hbond_distance_da</span></span><br><span class="line">kdtree_h = KDTree(coord[atom_h], boxsize=box_size)</span><br><span class="line">kdtree_da = KDTree(coord[atom_da], boxsize=box_size)</span><br><span class="line">neighbors_dh = kdtree_da.query_ball_tree(kdtree_h, hbond_distance_dh)</span><br><span class="line">neighbors_da = kdtree_da.query_ball_tree(kdtree_da, hbond_distance_da)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Use triple loop to find the hydrogen bonds</span></span><br><span class="line"><span class="keyword">for</span> num_d, num_hs <span class="keyword">in</span> <span class="built_in">enumerate</span>(neighbors_dh):</span><br><span class="line">    <span class="keyword">for</span> num_h <span class="keyword">in</span> num_hs:</span><br><span class="line">        <span class="keyword">for</span> num_a <span class="keyword">in</span> neighbors_da[num_d]:</span><br><span class="line">            <span class="keyword">if</span> num_a != num_d:</span><br><span class="line">                coord_d = coord[indices_da[num_d]]</span><br><span class="line">                coord_h = coord[indices_h[num_h]]</span><br><span class="line">                coord_a = coord[indices_da[num_a]]</span><br><span class="line">                angle_dha = angle(coord_d, coord_h, coord_a)</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>为了估算无聊的等待有多久，我在对帧循环的末尾添加了这么一个小进度条：</p>
<p>To estimate the duration of the tedious waiting period, I added a
small progress bar at the end of the loop over frames:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">    percent = prec / <span class="built_in">len</span>(frames) * <span class="number">100</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;\r<span class="subst">&#123;percent:<span class="number">.2</span>f&#125;</span>%&quot;</span>, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\r100% Done!&quot;</span>)</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>寻找完所有的氢键后，使用pickle包把氢键的信息储存为二进制文件，因为氢键的信息储存在一个自定义类的列表里。我感觉把氢键储存为一个字典列表，然后json.dump也未尝不可。</p>
<p>After identifying all the hydrogen bonds, the information is stored
as a binary file using the pickle package, because the hydrogen bond
information is kept in a list of custom classes. It seems feasible to
store the hydrogen bonds as a list of dictionaries and then use
<code>json.dump</code> to save them.</p>
<p><br></p>
<p>至此，从文件中读取结构并寻找氢键这一部分就完成了，完整代码如下。我知道读者们（如果有的话）都在等这个。</p>
<p>With that, the part of reading the structure from the file and
identifying hydrogen bonds is completed. The complete code is as
follows, which I know the readers (if there are any) have been waiting
for.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"></span><br><span class="line"><span class="comment"># parameters</span></span><br><span class="line">file_address = <span class="string">r&quot;xxx.xyz&quot;</span></span><br><span class="line">hbond_distance_da = <span class="number">3.5</span></span><br><span class="line">hbond_distance_dh = <span class="number">1.2</span></span><br><span class="line">hbond_angle_dha = <span class="number">150</span> * np.pi / <span class="number">180</span>  <span class="comment"># in radian, 150 degree</span></span><br><span class="line">hbond_donors_acceptors = [<span class="string">&quot;O&quot;</span>, <span class="string">&quot;N&quot;</span>, <span class="string">&quot;F&quot;</span>, <span class="string">&quot;P&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># use the average box size, may lead to a certain error in the boundary Hbonds</span></span><br><span class="line">A = np.array([<span class="number">25.11</span>, <span class="number">0.0</span>, <span class="number">0.0</span>])  <span class="comment"># box size, in Angstrom</span></span><br><span class="line">B = np.array([<span class="number">0.0</span>, <span class="number">22.99</span>, <span class="number">0.0</span>])</span><br><span class="line">C = np.array([-<span class="number">1.49</span>, <span class="number">0</span>, <span class="number">6.82</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># --------------------------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Frame</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, coord: np.ndarray</span>):</span><br><span class="line">        self.index = <span class="number">0</span></span><br><span class="line">        self.time = <span class="number">0.0</span></span><br><span class="line">        self.atoms = []</span><br><span class="line">        self.coord = coord</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Hbond</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, donor: <span class="built_in">int</span>, hydrogen: <span class="built_in">int</span>, acceptor: <span class="built_in">int</span></span>):</span><br><span class="line">        self.donor = donor</span><br><span class="line">        self.hydrogen = hydrogen</span><br><span class="line">        self.acceptor = acceptor</span><br><span class="line">        self.frame = <span class="number">0</span></span><br><span class="line">        self.distance_dh = <span class="number">0.0</span></span><br><span class="line">        self.distance_da = <span class="number">0.0</span></span><br><span class="line">        self.angle = <span class="number">0.0</span></span><br><span class="line">        <span class="comment"># self.angle = cos(angle_dha)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Read the xyz file</span></span><br><span class="line">frames = []</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(file_address, <span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    frame = <span class="literal">None</span></span><br><span class="line">    atom_index = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            data = file.readline().split()</span><br><span class="line">        <span class="keyword">except</span> EOFError:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(data) == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(data) == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">if</span> frame <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                frames.append(frame)</span><br><span class="line">            atom_index = <span class="number">0</span></span><br><span class="line">            atom_num = <span class="built_in">int</span>(data[<span class="number">0</span>])</span><br><span class="line">            frame = Frame(np.zeros((atom_num, <span class="number">3</span>)))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> data[<span class="number">0</span>] == <span class="string">&quot;i&quot;</span>:</span><br><span class="line">            <span class="comment"># data = [&#x27;i&#x27;, &#x27;=&#x27;, &#x27;1,&#x27;, &#x27;time&#x27;, &#x27;=&#x27;, &#x27;0.500,&#x27;, &#x27;E&#x27;, &#x27;=&#x27;, &#x27;-1806.5437038456&#x27;]</span></span><br><span class="line">            frame.index = <span class="built_in">int</span>(data[<span class="number">2</span>][:-<span class="number">1</span>])</span><br><span class="line">            frame.time = <span class="built_in">float</span>(data[<span class="number">5</span>][:-<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># data = [&#x27;O&#x27;, &#x27;20.6553100045&#x27;, &#x27;19.5185586845&#x27;, &#x27;1.9664762578&#x27;]</span></span><br><span class="line">            coord = np.array([<span class="built_in">float</span>(data[<span class="number">1</span>]), <span class="built_in">float</span>(data[<span class="number">2</span>]), <span class="built_in">float</span>(data[<span class="number">3</span>])])</span><br><span class="line">            frame.coord[atom_index] = coord</span><br><span class="line">            atom_index += <span class="number">1</span></span><br><span class="line">            frame.atoms.append(data[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">    frames.append(frame)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Function to calculate the distance between two points</span></span><br><span class="line">vectors = np.array([A, B, C]).T</span><br><span class="line">inverse_vectors = np.linalg.inv(vectors)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">distance</span>(<span class="params">coord1: np.ndarray, coord2: np.ndarray</span>) -&gt; <span class="built_in">float</span>:</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Convert points to the box&#x27;s coordinate system</span></span><br><span class="line">    p1_box = np.dot(inverse_vectors, coord1)</span><br><span class="line">    p2_box = np.dot(inverse_vectors, coord2)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Apply minimum image convention in the box&#x27;s coordinate system</span></span><br><span class="line">    delta_box = p1_box - p2_box</span><br><span class="line">    delta_box -= np.<span class="built_in">round</span>(delta_box)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Convert the distance back to the original coordinate system</span></span><br><span class="line">    delta = np.dot(vectors, delta_box)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Calculate the distance</span></span><br><span class="line">    distance = np.sqrt(np.<span class="built_in">sum</span>(delta**<span class="number">2</span>))</span><br><span class="line">    <span class="keyword">return</span> distance</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Function to calculate the angle between three points</span></span><br><span class="line">vectors = np.array([A, B, C]).T</span><br><span class="line">inverse_vectors = np.linalg.inv(vectors)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">direction_vector</span>(<span class="params">coord1, coord2</span>):</span><br><span class="line">    <span class="comment"># Convert points to the box&#x27;s coordinate system</span></span><br><span class="line">    p1_box = np.dot(inverse_vectors, coord1)</span><br><span class="line">    p2_box = np.dot(inverse_vectors, coord2)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Apply minimum image convention in the box&#x27;s coordinate system</span></span><br><span class="line">    delta_box = p1_box - p2_box</span><br><span class="line">    delta_box -= np.<span class="built_in">round</span>(delta_box)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Convert the direction vector back to the original coordinate system</span></span><br><span class="line">    direction = np.dot(vectors, delta_box)</span><br><span class="line">    <span class="keyword">return</span> direction</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">angle</span>(<span class="params">coord1: np.ndarray, coord2: np.ndarray, coord3: np.ndarray</span>) -&gt; <span class="built_in">float</span>:</span><br><span class="line">    <span class="comment"># Calculate direction vectors</span></span><br><span class="line">    v1 = direction_vector(coord2, coord1)</span><br><span class="line">    v2 = direction_vector(coord3, coord1)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Calculate the cosine of the angle using the dot product</span></span><br><span class="line">    cos_angle = np.dot(v1, v2) / (np.linalg.norm(v1) * np.linalg.norm(v2))</span><br><span class="line">    <span class="comment"># Return cos(angle)</span></span><br><span class="line">    <span class="comment"># Ensure the cosine value is in the valid range [-1, 1] to avoid numerical issues</span></span><br><span class="line">    <span class="keyword">return</span> np.clip(cos_angle, -<span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Count the number of hydrogen bonds</span></span><br><span class="line">hbonds = []</span><br><span class="line"><span class="keyword">for</span> prec, frame <span class="keyword">in</span> <span class="built_in">enumerate</span>(frames):</span><br><span class="line">    <span class="comment"># Remove the last 10 water molecules</span></span><br><span class="line">    coord = frame.coord[:-<span class="number">30</span>]</span><br><span class="line">    atoms = frame.atoms[:-<span class="number">30</span>]</span><br><span class="line"></span><br><span class="line">    hbond_angle_dha_cos = np.cos(hbond_angle_dha)</span><br><span class="line"></span><br><span class="line">    atom_h = [atom == <span class="string">&quot;H&quot;</span> <span class="keyword">for</span> atom <span class="keyword">in</span> atoms]</span><br><span class="line">    atom_da = [atom <span class="keyword">in</span> hbond_donors_acceptors <span class="keyword">for</span> atom <span class="keyword">in</span> atoms]</span><br><span class="line">    indices_h = [i <span class="keyword">for</span> i, is_h <span class="keyword">in</span> <span class="built_in">enumerate</span>(atom_h) <span class="keyword">if</span> is_h]</span><br><span class="line">    indices_da = [i <span class="keyword">for</span> i, is_da <span class="keyword">in</span> <span class="built_in">enumerate</span>(atom_da) <span class="keyword">if</span> is_da]</span><br><span class="line">    <span class="comment"># indices_h = [50, 51, 52, ...]</span></span><br><span class="line">    <span class="comment"># indices_da = [89, 90, 91, ...]</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Use triple loop to find the hydrogen bonds</span></span><br><span class="line">    <span class="keyword">for</span> num_d <span class="keyword">in</span> indices_da:</span><br><span class="line">        <span class="keyword">for</span> num_h <span class="keyword">in</span> indices_h:</span><br><span class="line">            coord_d = coord[num_d]</span><br><span class="line">            coord_h = coord[num_h]</span><br><span class="line">            <span class="keyword">if</span> distance(coord_d, coord_h) &gt; hbond_distance_dh:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> num_a <span class="keyword">in</span> indices_da:</span><br><span class="line">                <span class="keyword">if</span> num_a == num_d:</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">                </span><br><span class="line">                coord_a = coord[num_a]</span><br><span class="line"></span><br><span class="line">                <span class="comment"># reduce the number of angle calculation, optional</span></span><br><span class="line">                distance_da = distance(coord_d, coord_a)</span><br><span class="line">                <span class="keyword">if</span> distance_da &lt; <span class="number">1.8</span>:</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">                <span class="keyword">elif</span> distance_da &gt; hbond_distance_da:</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">                angle_dha = angle(coord_d, coord_h, coord_a)</span><br><span class="line"></span><br><span class="line">                <span class="comment"># angle &gt; 150 means cos(angle) &lt; cos(150)</span></span><br><span class="line">                <span class="keyword">if</span> angle_dha &lt; hbond_angle_dha_cos:</span><br><span class="line">                    hbond = Hbond(num_d, num_h, num_a)</span><br><span class="line">                    hbond.distance_dh = distance(coord_d, coord_h)</span><br><span class="line">                    hbond.distance_da = distance(coord_d, coord_a)</span><br><span class="line">                    hbond.angle = angle_dha</span><br><span class="line">                    hbond.frame = frame.index</span><br><span class="line">                    hbonds.append(hbond)</span><br><span class="line"></span><br><span class="line">    percent = prec / <span class="built_in">len</span>(frames) * <span class="number">100</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;\r<span class="subst">&#123;percent:<span class="number">.2</span>f&#125;</span>%&quot;</span>, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\r100% Done!&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Save the information of hydrogen bonds to a file</span></span><br><span class="line">file_address2 = file_address.split(<span class="string">&quot;.&quot;</span>)[<span class="number">0</span>] + <span class="string">&quot;_hbond.pkl&quot;</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(file_address2, <span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    pickle.dump(hbonds, file)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Save the information of hydrogen bonds to \n<span class="subst">&#123;file_address2&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure>
<p><br></p>
<hr />
<h3 id="计算氢键数量---calculating-the-number-of-hydrogen-bonds">2.
计算氢键数量 - Calculating the Number of Hydrogen Bonds</h3>
<p>在有了氢键的数据之后，下一步是统计每一帧的氢键的数量。这一部分的代码相当简单，使用pickle读取数据后，简单用一个循环统计一下。代码如下所示。</p>
<p>After obtaining the hydrogen bond data, the next step is to count the
number of hydrogen bonds in each frame. This part of the code is quite
simple: after reading the data with pickle, a loop is used for the
count. The code is as follows:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"></span><br><span class="line"><span class="comment"># parameters</span></span><br><span class="line">file_address = <span class="string">r&quot;xxx_hbond.pkl&quot;</span></span><br><span class="line">dt = <span class="number">0.5</span>  <span class="comment"># time interval between two frames, in fs</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># --------------------------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Hbond</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, donor: <span class="built_in">int</span>, hydrogen: <span class="built_in">int</span>, acceptor: <span class="built_in">int</span></span>):</span><br><span class="line">        self.donor = donor</span><br><span class="line">        self.hydrogen = hydrogen</span><br><span class="line">        self.acceptor = acceptor</span><br><span class="line">        self.frame = <span class="number">0</span></span><br><span class="line">        self.distance_dh = <span class="number">0.0</span></span><br><span class="line">        self.distance_da = <span class="number">0.0</span></span><br><span class="line">        self.angle = <span class="number">0.0</span></span><br><span class="line">        <span class="comment"># self.angle = cos(angle_dha)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Read the pkl file</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(file_address, <span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    hbonds = pickle.load(file)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Count the number of hydrogen bonds for each frame</span></span><br><span class="line">trajectory_length = hbonds[-<span class="number">1</span>].frame + <span class="number">1</span></span><br><span class="line">frames = np.zeros(trajectory_length)</span><br><span class="line"><span class="keyword">for</span> hbond <span class="keyword">in</span> hbonds:</span><br><span class="line">    frames[hbond.frame] += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">average_hbonds = np.mean(frames)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Average number of hydrogen bonds:&quot;</span>, average_hbonds)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Plot the number of hydrogen bonds for each frame</span></span><br><span class="line">plt.plot(np.arange(trajectory_length) * dt, frames)</span><br><span class="line">plt.xlabel(<span class="string">&quot;Time (fs)&quot;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&quot;Number of hydrogen bonds&quot;</span>)</span><br><span class="line">plt.title(</span><br><span class="line">    <span class="string">&quot;Number of hydrogen bonds vs time&quot;</span></span><br><span class="line">)</span><br><span class="line">file_address2 = file_address.replace(<span class="string">&quot;.pkl&quot;</span>, <span class="string">&quot;.png&quot;</span>)</span><br><span class="line">plt.savefig(file_address2)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p><br></p>
<hr />
<h3 id="计算氢键自相关函数---calculating-the-hydrogen-bond-acf">3.
计算氢键自相关函数 - Calculating the Hydrogen Bond ACF</h3>
<p>最后就是计算氢键的自相关函数了。自相关函数通常有2种，一个是连续（continuous）自相关函数，一个是间断（intermittent）自相关函数。</p>
<p>The final step is to calculate the autocorrelation function of the
hydrogen bonds. There are typically two types of autocorrelation
functions: continuous and intermittent.</p>
<p><br></p>
<p>有<a
href="https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.85.768">一篇文章</a>讲了这两种自相关函数的区别。简而言之，连续自相关函数要求氢键形成后不能断裂，如果断裂后又重连就把它看成另一个新的氢键，而间断自相关函数不做此要求。</p>
<p>A <a
href="https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.85.768">paper</a>
discusses the differences between these two types of autocorrelation
functions. In essence, the continuous autocorrelation function requires
that once a hydrogen bond is formed, it must not break. If it breaks and
then reforms, it is considered a new hydrogen bond. On the other hand,
the intermittent autocorrelation function does not have this
requirement.</p>
<p><br></p>
<p>首先统计间断的自相关函数，用一个循环处理氢键数据。</p>
<p>First, the intermittent autocorrelation function is calculated by
processing the hydrogen bond data with a loop.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Create a dictionary to store the hydrogen bond information</span></span><br><span class="line">hbonds_dict: <span class="built_in">dict</span> = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> hbond <span class="keyword">in</span> hbonds:</span><br><span class="line">    <span class="comment"># hbond: Hbond</span></span><br><span class="line">    atoms = (hbond.donor, hbond.hydrogen, hbond.acceptor)</span><br><span class="line">    <span class="keyword">if</span> atoms <span class="keyword">not</span> <span class="keyword">in</span> hbonds_dict:</span><br><span class="line">        hbonds_dict[atoms] = np.zeros(trajectory_length)</span><br><span class="line">    hbonds_dict[atoms][hbond.frame] = <span class="number">1</span></span><br></pre></td></tr></table></figure>
<p><br></p>
<p>如果需要计算连续的自相关函数的话，首先要找出间断的自相关函数的断点，然后把它切断，然后粘贴到序列的最开始，然后用0补齐后面的数据。</p>
<p>To calculate the continuous autocorrelation function, it's necessary
to identify the breakpoints in the intermittent autocorrelation
function, cut at these points, and then move these segments to the
beginning of the sequence. The rest of the data sequence is then padded
with zeros to complete the series.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> continuous:</span><br><span class="line">    hbonds_dict_new = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> hbond <span class="keyword">in</span> hbonds_dict:</span><br><span class="line">        <span class="comment"># hbond: (donor, hydrogen, acceptor)</span></span><br><span class="line">        <span class="comment"># hbonds_dict[hbond]: np.ndarray</span></span><br><span class="line">        ones = np.where(hbonds_dict[hbond] == <span class="number">1</span>)[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">if</span> ones.size != <span class="number">0</span>:</span><br><span class="line">            split_indices = np.where(np.diff(ones) &gt; <span class="number">1</span>)[<span class="number">0</span>] + <span class="number">1</span></span><br><span class="line">            ones_subarrays = np.split(ones, split_indices)</span><br><span class="line">            result = [hbonds_dict[hbond][s[<span class="number">0</span>] : s[-<span class="number">1</span>] + <span class="number">1</span>] <span class="keyword">for</span> s <span class="keyword">in</span> ones_subarrays]</span><br><span class="line">            <span class="keyword">for</span> i, subarray <span class="keyword">in</span> <span class="built_in">enumerate</span>(result):</span><br><span class="line">                hbond_new = hbond + (i,)</span><br><span class="line">                array_new = np.zeros(trajectory_length)</span><br><span class="line">                array_new[: <span class="built_in">len</span>(subarray)] = subarray</span><br><span class="line">                hbonds_dict_new[hbond_new] = array_new</span><br><span class="line">    hbonds_dict = hbonds_dict_new</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>然后是利用快速傅立叶变换（fft）进行自相关函数的计算</p>
<p>Then, the autocorrelation function is calculated using the Fast
Fourier Transform (FFT).</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">autocorrelation_fft</span>(<span class="params">data</span>):</span><br><span class="line">    n = <span class="built_in">len</span>(data)</span><br><span class="line">    data_mean = np.mean(data)</span><br><span class="line">    data = data - data_mean</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Padding to 2 times the original length</span></span><br><span class="line">    padded_data = np.zeros(<span class="number">2</span> * n)</span><br><span class="line">    padded_data[:n] = data</span><br><span class="line">    <span class="comment"># Do a full-time acf</span></span><br><span class="line">    result = np.fft.ifft(</span><br><span class="line">        np.fft.fft(padded_data) * np.conj(np.fft.fft(padded_data))</span><br><span class="line">    ).real</span><br><span class="line">    result = result[:n]</span><br><span class="line">    <span class="keyword">return</span> result / result[<span class="number">0</span>]</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>最后，把所有的氢键的自相关函数做一个平均，然后作图。函数图像如下所示（连续的氢键自相关函数）。</p>
<p>Finally, average the autocorrelation functions of all the hydrogen
bonds and plot the result. The graph of the function is shown below (for
the continuous hydrogen bond autocorrelation function).</p>
<p><img src="2.png" /></p>
<p><br></p>
<p>这一部分的代码如下所示。</p>
<p>The code for this part is as follows.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"></span><br><span class="line"><span class="comment"># parameters</span></span><br><span class="line">file_address = <span class="string">r&quot;xxx_hbond.pkl&quot;</span></span><br><span class="line">dt = <span class="number">0.5</span>  <span class="comment"># time interval between two frames, in fs</span></span><br><span class="line">continuous = <span class="literal">True</span>  <span class="comment"># True for continuous hbacf, False for intermittent hbacf</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># --------------------------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Hbond</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, donor: <span class="built_in">int</span>, hydrogen: <span class="built_in">int</span>, acceptor: <span class="built_in">int</span></span>):</span><br><span class="line">        self.donor = donor</span><br><span class="line">        self.hydrogen = hydrogen</span><br><span class="line">        self.acceptor = acceptor</span><br><span class="line">        self.frame = <span class="number">0</span></span><br><span class="line">        self.distance_dh = <span class="number">0.0</span></span><br><span class="line">        self.distance_da = <span class="number">0.0</span></span><br><span class="line">        self.angle = <span class="number">0.0</span></span><br><span class="line">        <span class="comment"># self.angle = cos(angle_dha)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Read the pkl file</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(file_address, <span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    hbonds: <span class="built_in">list</span> = pickle.load(file)</span><br><span class="line"></span><br><span class="line">trajectory_length = hbonds[-<span class="number">1</span>].frame + <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Create a dictionary to store the hydrogen bond information</span></span><br><span class="line">hbonds_dict: <span class="built_in">dict</span> = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> hbond <span class="keyword">in</span> hbonds:</span><br><span class="line">    <span class="comment"># hbond: Hbond</span></span><br><span class="line">    atoms = (hbond.donor, hbond.hydrogen, hbond.acceptor)</span><br><span class="line">    <span class="keyword">if</span> atoms <span class="keyword">not</span> <span class="keyword">in</span> hbonds_dict:</span><br><span class="line">        hbonds_dict[atoms] = np.zeros(trajectory_length)</span><br><span class="line">    hbonds_dict[atoms][hbond.frame] = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># If continuous is True, split the data into continuous subarrays</span></span><br><span class="line"><span class="keyword">if</span> continuous:</span><br><span class="line">    hbonds_dict_new = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> hbond <span class="keyword">in</span> hbonds_dict:</span><br><span class="line">        <span class="comment"># hbond: (donor, hydrogen, acceptor)</span></span><br><span class="line">        <span class="comment"># hbonds_dict[hbond]: np.ndarray</span></span><br><span class="line">        ones = np.where(hbonds_dict[hbond] == <span class="number">1</span>)[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">if</span> ones.size != <span class="number">0</span>:</span><br><span class="line">            split_indices = np.where(np.diff(ones) &gt; <span class="number">1</span>)[<span class="number">0</span>] + <span class="number">1</span></span><br><span class="line">            ones_subarrays = np.split(ones, split_indices)</span><br><span class="line">            result = [hbonds_dict[hbond][s[<span class="number">0</span>] : s[-<span class="number">1</span>] + <span class="number">1</span>] <span class="keyword">for</span> s <span class="keyword">in</span> ones_subarrays]</span><br><span class="line">            <span class="keyword">for</span> i, subarray <span class="keyword">in</span> <span class="built_in">enumerate</span>(result):</span><br><span class="line">                hbond_new = hbond + (i,)</span><br><span class="line">                array_new = np.zeros(trajectory_length)</span><br><span class="line">                array_new[: <span class="built_in">len</span>(subarray)] = subarray</span><br><span class="line">                hbonds_dict_new[hbond_new] = array_new</span><br><span class="line">    hbonds_dict = hbonds_dict_new</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Calculate the autocorrelation function using FFT</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">autocorrelation_fft</span>(<span class="params">data</span>):</span><br><span class="line">    n = <span class="built_in">len</span>(data)</span><br><span class="line">    data_mean = np.mean(data)</span><br><span class="line">    data = data - data_mean</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Padding to 2 times the original length</span></span><br><span class="line">    padded_data = np.zeros(<span class="number">2</span> * n)</span><br><span class="line">    padded_data[:n] = data</span><br><span class="line">    <span class="comment"># Do a full-time acf</span></span><br><span class="line">    <span class="comment"># <span class="doctag">TODO:</span> use shorter data window to speed up the calculation</span></span><br><span class="line">    result = np.fft.ifft(</span><br><span class="line">        np.fft.fft(padded_data) * np.conj(np.fft.fft(padded_data))</span><br><span class="line">    ).real</span><br><span class="line">    result = result[:n]</span><br><span class="line">    <span class="keyword">return</span> result / result[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Calculate the autocorrelation function for each hydrogen bond</span></span><br><span class="line">acfs = []</span><br><span class="line"><span class="keyword">for</span> hbond <span class="keyword">in</span> hbonds_dict:</span><br><span class="line">    <span class="comment"># hbond: (donor, hydrogen, acceptor)</span></span><br><span class="line">    <span class="comment"># hbonds_dict[hbond]: np.ndarray</span></span><br><span class="line">    acfs.append(autocorrelation_fft(hbonds_dict[hbond]))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Calculate the average autocorrelation function</span></span><br><span class="line">acfs = np.array(acfs)</span><br><span class="line">average_acf = np.mean(acfs, axis=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Save autocorrelation function</span></span><br><span class="line">x = np.arange(trajectory_length) * dt</span><br><span class="line">file_address3 = file_address.split(<span class="string">&#x27;.&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">np.save(file_address3+<span class="string">&#x27;tau_times.npy&#x27;</span>, x)</span><br><span class="line">np.save(file_address3+<span class="string">&#x27;lifetime.npy&#x27;</span>, average_acf)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Plot the autocorrelation function</span></span><br><span class="line">plt.plot(x[:<span class="number">200</span>], average_acf[:<span class="number">200</span>])</span><br><span class="line">plt.xlabel(<span class="string">&quot;Time (fs)&quot;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&quot;Autocorrelation function&quot;</span>)</span><br><span class="line">plt.title(<span class="string">&quot;Hydrogen bond autocorrelation function&quot;</span>)</span><br><span class="line">file_address2 = file_address.replace(<span class="string">&quot;.pkl&quot;</span>, <span class="string">&quot;_acf.png&quot;</span>)</span><br><span class="line">plt.savefig(file_address2)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>编程 - Programming</tag>
      </tags>
  </entry>
  <entry>
    <title>使用R语言分析各国的新冠死亡率 - Analyzing COVID-19 Mortality Rates Among Countries Using R</title>
    <url>//post/45/</url>
    <content><![CDATA[<p>约翰霍普金斯大学有新冠期间的确诊人数和死亡人数的<a
href="https://github.com/CSSEGISandData/COVID-19/tree/master/csse_covid_19_data/csse_covid_19_time_series">数据文件</a>。利用这些文件，可以分析各国的新冠死亡率。</p>
<p>Johns Hopkins University provides <a
href="https://github.com/CSSEGISandData/COVID-19/tree/master/csse_covid_19_data/csse_covid_19_time_series">data
files</a> on confirmed cases and deaths during the COVID-19 pandemic.
Using these files, one can analyze the COVID-19 mortality rates of
different countries.</p>
<p><br></p>
<p>首先，下载csv文件，并读取数据。一共有4个文件，美国的确诊和死亡人数，以及其他国家的确诊和死亡人数。</p>
<p>First, download the CSV files and load the data. There are four
files: confirmed and death cases in the USA, and confirmed and death
cases in other countries.</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">us_conf_raw <span class="operator">&lt;-</span> read.csv<span class="punctuation">(</span><span class="string">&quot;covid_19/time_series_covid19_confirmed_US.csv&quot;</span><span class="punctuation">)</span></span><br><span class="line">us_death_raw <span class="operator">&lt;-</span> read.csv<span class="punctuation">(</span><span class="string">&quot;covid_19/time_series_covid19_deaths_US.csv&quot;</span><span class="punctuation">)</span></span><br><span class="line">global_conf_raw <span class="operator">&lt;-</span> read.csv<span class="punctuation">(</span><span class="string">&quot;covid_19/time_series_covid19_confirmed_global.csv&quot;</span><span class="punctuation">)</span></span><br><span class="line">global_death_raw <span class="operator">&lt;-</span> read.csv<span class="punctuation">(</span><span class="string">&quot;covid_19/time_series_covid19_deaths_global.csv&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure>
<p><br></p>
<p>从数据中读取日期信息。</p>
<p>Extract the date information from the data.</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">dates <span class="operator">&lt;-</span> us_conf_raw <span class="operator">%&gt;%</span></span><br><span class="line">    select<span class="punctuation">(</span><span class="operator">-</span><span class="built_in">c</span><span class="punctuation">(</span>UID<span class="punctuation">,</span> iso2<span class="punctuation">,</span> iso3<span class="punctuation">,</span> code3<span class="punctuation">,</span> FIPS<span class="punctuation">,</span> Admin2<span class="punctuation">,</span> Country_Region<span class="punctuation">,</span> </span><br><span class="line">    Province_State<span class="punctuation">,</span> Lat<span class="punctuation">,</span> Long_<span class="punctuation">,</span> Combined_Key<span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span></span><br><span class="line">    colnames<span class="punctuation">(</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span></span><br><span class="line">    as.Date<span class="punctuation">(</span>format <span class="operator">=</span> <span class="string">&quot;X%m.%d.%y&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure>
<p><br></p>
<p>读取美国的确诊人数，使用select方法选择需要的列，然后将各个郡的确诊人数相加。死亡人数的读取方法与之相同。</p>
<p>For the USA, read the number of confirmed cases, use the select
method to choose the necessary columns, then sum the confirmed cases
across counties. Follow the same method to read the number of
deaths.</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">us_conf <span class="operator">&lt;-</span> us_conf_raw <span class="operator">%&gt;%</span></span><br><span class="line">    select<span class="punctuation">(</span><span class="operator">-</span><span class="built_in">c</span><span class="punctuation">(</span>UID<span class="punctuation">,</span> iso2<span class="punctuation">,</span> iso3<span class="punctuation">,</span> code3<span class="punctuation">,</span> FIPS<span class="punctuation">,</span> Admin2<span class="punctuation">,</span> Country_Region<span class="punctuation">,</span> </span><br><span class="line">    Province_State<span class="punctuation">,</span> Lat<span class="punctuation">,</span> Long_<span class="punctuation">,</span> Combined_Key<span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span></span><br><span class="line">    colSums<span class="punctuation">(</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span></span><br><span class="line">    as.vector<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure>
<p><br></p>
<p>读取其他国家的确诊人数，使用filter选取感兴趣的行。死亡人数的读取方法与之相同。这里选择了3个国家：中国，日本，和加拿大。</p>
<p>For other countries, read the number of confirmed cases, using the
filter to select the rows of interest. The method for reading the number
of deaths is the same. Three countries were chosen for this analysis:
China, Japan, and Canada.</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">global_conf <span class="operator">&lt;-</span> global_conf_raw <span class="operator">%&gt;%</span></span><br><span class="line">    select<span class="punctuation">(</span><span class="operator">-</span><span class="built_in">c</span><span class="punctuation">(</span>Province.State<span class="punctuation">,</span> Lat<span class="punctuation">,</span> Long<span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span></span><br><span class="line">    filter<span class="punctuation">(</span>Country.Region <span class="operator">%in%</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;China&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Japan&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Canada&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">china_conf <span class="operator">&lt;-</span> global_conf <span class="operator">%&gt;%</span></span><br><span class="line">    filter<span class="punctuation">(</span>Country.Region <span class="operator">==</span> <span class="string">&quot;China&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span></span><br><span class="line">    select<span class="punctuation">(</span><span class="operator">-</span>Country.Region<span class="punctuation">)</span> <span class="operator">%&gt;%</span></span><br><span class="line">    colSums<span class="punctuation">(</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span></span><br><span class="line">    as.vector<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure>
<p><br></p>
<p>把所有的数据都储存在一个data.frame中。由于美国的数据的前10天的死亡率过高，所以从11天开始。</p>
<p>Store all the data in a data.frame. Since the mortality rate in the
USA was abnormally high in the first 10 days, the analysis starts from
day 11.</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">data <span class="operator">&lt;-</span> data.frame<span class="punctuation">(</span></span><br><span class="line">    dates <span class="operator">=</span> dates<span class="punctuation">[</span><span class="number">11</span><span class="operator">:</span><span class="built_in">length</span><span class="punctuation">(</span>dates<span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    us_death <span class="operator">=</span> us_death<span class="punctuation">[</span><span class="number">11</span><span class="operator">:</span><span class="built_in">length</span><span class="punctuation">(</span>us_death<span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    us_conf <span class="operator">=</span> us_conf<span class="punctuation">[</span><span class="number">11</span><span class="operator">:</span><span class="built_in">length</span><span class="punctuation">(</span>us_conf<span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    china_death <span class="operator">=</span> china_death<span class="punctuation">[</span><span class="number">11</span><span class="operator">:</span><span class="built_in">length</span><span class="punctuation">(</span>china_death<span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    china_conf <span class="operator">=</span> china_conf<span class="punctuation">[</span><span class="number">11</span><span class="operator">:</span><span class="built_in">length</span><span class="punctuation">(</span>china_conf<span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    japan_death <span class="operator">=</span> japan_death<span class="punctuation">[</span><span class="number">11</span><span class="operator">:</span><span class="built_in">length</span><span class="punctuation">(</span>japan_death<span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    japan_conf <span class="operator">=</span> japan_conf<span class="punctuation">[</span><span class="number">11</span><span class="operator">:</span><span class="built_in">length</span><span class="punctuation">(</span>japan_conf<span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    canada_death <span class="operator">=</span> canada_death<span class="punctuation">[</span><span class="number">11</span><span class="operator">:</span><span class="built_in">length</span><span class="punctuation">(</span>canada_death<span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    canada_conf <span class="operator">=</span> canada_conf<span class="punctuation">[</span><span class="number">11</span><span class="operator">:</span><span class="built_in">length</span><span class="punctuation">(</span>canada_conf<span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">)</span></span><br></pre></td></tr></table></figure>
<p><br></p>
<p>画图</p>
<p>Plotting the Data</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">graph_death_rate <span class="operator">&lt;-</span> ggplot<span class="punctuation">(</span>data<span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">    geom_line<span class="punctuation">(</span>aes<span class="punctuation">(</span>x <span class="operator">=</span> dates<span class="punctuation">,</span> y <span class="operator">=</span> us_death <span class="operator">/</span> us_conf<span class="punctuation">)</span><span class="punctuation">,</span> color <span class="operator">=</span> <span class="string">&quot;black&quot;</span><span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">    geom_line<span class="punctuation">(</span>aes<span class="punctuation">(</span>x <span class="operator">=</span> dates<span class="punctuation">,</span> y <span class="operator">=</span> china_death <span class="operator">/</span> china_conf<span class="punctuation">)</span><span class="punctuation">,</span> color <span class="operator">=</span> <span class="string">&quot;red&quot;</span><span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">    geom_line<span class="punctuation">(</span>aes<span class="punctuation">(</span>x <span class="operator">=</span> dates<span class="punctuation">,</span> y <span class="operator">=</span> japan_death <span class="operator">/</span> japan_conf<span class="punctuation">)</span><span class="punctuation">,</span> color <span class="operator">=</span> <span class="string">&quot;blue&quot;</span><span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">    geom_line<span class="punctuation">(</span>aes<span class="punctuation">(</span>x <span class="operator">=</span> dates<span class="punctuation">,</span> y <span class="operator">=</span> canada_death <span class="operator">/</span> canada_conf<span class="punctuation">)</span><span class="punctuation">,</span> color <span class="operator">=</span> <span class="string">&quot;green&quot;</span><span class="punctuation">)</span> <span class="operator">+</span> </span><br><span class="line">    scale_y_continuous<span class="punctuation">(</span>labels <span class="operator">=</span> scales<span class="operator">::</span>percent<span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">    labs<span class="punctuation">(</span>y <span class="operator">=</span> <span class="string">&quot;Death rate&quot;</span><span class="punctuation">,</span> x <span class="operator">=</span> <span class="string">&quot;Date&quot;</span><span class="punctuation">,</span> title <span class="operator">=</span> <span class="string">&quot;Death rate of COVID-19&quot;</span><span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line"></span><br><span class="line">print<span class="punctuation">(</span>graph_death_rate<span class="punctuation">)</span></span><br></pre></td></tr></table></figure>
<p><br></p>
<p>最后得到的图像如下。黑色代表美国，红色代表中国，蓝色为日本，绿色为加拿大。</p>
<p>The resulting graph is as follows. Black represents the USA, red for
China, blue for Japan, and green for Canada.</p>
<p><img src="1.png" /></p>
<p><br></p>
<p>完整版的代码如下：</p>
<p>The full code is as follows:</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">library<span class="punctuation">(</span>dplyr<span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span>ggplot2<span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span>tidyr<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取数据 - Read data</span></span><br><span class="line">us_conf_raw <span class="operator">&lt;-</span> read.csv<span class="punctuation">(</span><span class="string">&quot;covid_19/time_series_covid19_confirmed_US.csv&quot;</span><span class="punctuation">)</span></span><br><span class="line">us_death_raw <span class="operator">&lt;-</span> read.csv<span class="punctuation">(</span><span class="string">&quot;covid_19/time_series_covid19_deaths_US.csv&quot;</span><span class="punctuation">)</span></span><br><span class="line">global_conf_raw <span class="operator">&lt;-</span> read.csv<span class="punctuation">(</span><span class="string">&quot;covid_19/time_series_covid19_confirmed_global.csv&quot;</span><span class="punctuation">)</span></span><br><span class="line">global_death_raw <span class="operator">&lt;-</span> read.csv<span class="punctuation">(</span><span class="string">&quot;covid_19/time_series_covid19_deaths_global.csv&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取日期信息 - Read date information</span></span><br><span class="line">dates <span class="operator">&lt;-</span> us_conf_raw <span class="operator">%&gt;%</span></span><br><span class="line">    select<span class="punctuation">(</span><span class="operator">-</span><span class="built_in">c</span><span class="punctuation">(</span>UID<span class="punctuation">,</span> iso2<span class="punctuation">,</span> iso3<span class="punctuation">,</span> code3<span class="punctuation">,</span> FIPS<span class="punctuation">,</span> Admin2<span class="punctuation">,</span> Country_Region<span class="punctuation">,</span> </span><br><span class="line">    Province_State<span class="punctuation">,</span> Lat<span class="punctuation">,</span> Long_<span class="punctuation">,</span> Combined_Key<span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span></span><br><span class="line">    colnames<span class="punctuation">(</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span></span><br><span class="line">    as.Date<span class="punctuation">(</span>format <span class="operator">=</span> <span class="string">&quot;X%m.%d.%y&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 美国确诊数据 - US confirmed data</span></span><br><span class="line">us_conf <span class="operator">&lt;-</span> us_conf_raw <span class="operator">%&gt;%</span></span><br><span class="line">    select<span class="punctuation">(</span><span class="operator">-</span><span class="built_in">c</span><span class="punctuation">(</span>UID<span class="punctuation">,</span> iso2<span class="punctuation">,</span> iso3<span class="punctuation">,</span> code3<span class="punctuation">,</span> FIPS<span class="punctuation">,</span> Admin2<span class="punctuation">,</span> Country_Region<span class="punctuation">,</span> </span><br><span class="line">    Province_State<span class="punctuation">,</span> Lat<span class="punctuation">,</span> Long_<span class="punctuation">,</span> Combined_Key<span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span></span><br><span class="line">    colSums<span class="punctuation">(</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span></span><br><span class="line">    as.vector<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 美国死亡数据 - US death data</span></span><br><span class="line">us_death <span class="operator">&lt;-</span> us_death_raw <span class="operator">%&gt;%</span></span><br><span class="line">    select<span class="punctuation">(</span><span class="operator">-</span><span class="built_in">c</span><span class="punctuation">(</span>UID<span class="punctuation">,</span> iso2<span class="punctuation">,</span> iso3<span class="punctuation">,</span> code3<span class="punctuation">,</span> FIPS<span class="punctuation">,</span> Admin2<span class="punctuation">,</span> Country_Region<span class="punctuation">,</span> </span><br><span class="line">    Province_State<span class="punctuation">,</span> Lat<span class="punctuation">,</span> Long_<span class="punctuation">,</span> Combined_Key<span class="punctuation">,</span> Population<span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span></span><br><span class="line">    colSums<span class="punctuation">(</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span></span><br><span class="line">    as.vector<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 全球确诊数据 - Global confirmed data</span></span><br><span class="line">global_conf <span class="operator">&lt;-</span> global_conf_raw <span class="operator">%&gt;%</span></span><br><span class="line">    select<span class="punctuation">(</span><span class="operator">-</span><span class="built_in">c</span><span class="punctuation">(</span>Province.State<span class="punctuation">,</span> Lat<span class="punctuation">,</span> Long<span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span></span><br><span class="line">    filter<span class="punctuation">(</span>Country.Region <span class="operator">%in%</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;China&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Japan&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Canada&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 全球死亡数据 - Global death data</span></span><br><span class="line">global_death <span class="operator">&lt;-</span> global_death_raw <span class="operator">%&gt;%</span></span><br><span class="line">    select<span class="punctuation">(</span><span class="operator">-</span><span class="built_in">c</span><span class="punctuation">(</span>Province.State<span class="punctuation">,</span> Lat<span class="punctuation">,</span> Long<span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span></span><br><span class="line">    filter<span class="punctuation">(</span>Country.Region <span class="operator">%in%</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;China&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Japan&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Canada&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 中国确诊数据 - China confirmed data</span></span><br><span class="line">china_conf <span class="operator">&lt;-</span> global_conf <span class="operator">%&gt;%</span></span><br><span class="line">    filter<span class="punctuation">(</span>Country.Region <span class="operator">==</span> <span class="string">&quot;China&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span></span><br><span class="line">    select<span class="punctuation">(</span><span class="operator">-</span>Country.Region<span class="punctuation">)</span> <span class="operator">%&gt;%</span></span><br><span class="line">    colSums<span class="punctuation">(</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span></span><br><span class="line">    as.vector<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 中国死亡数据 - China death data</span></span><br><span class="line">china_death <span class="operator">&lt;-</span> global_death <span class="operator">%&gt;%</span></span><br><span class="line">    filter<span class="punctuation">(</span>Country.Region <span class="operator">==</span> <span class="string">&quot;China&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span></span><br><span class="line">    select<span class="punctuation">(</span><span class="operator">-</span>Country.Region<span class="punctuation">)</span> <span class="operator">%&gt;%</span></span><br><span class="line">    colSums<span class="punctuation">(</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span></span><br><span class="line">    as.vector<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 日本确诊数据 - Japan confirmed data</span></span><br><span class="line">japan_conf <span class="operator">&lt;-</span> global_conf <span class="operator">%&gt;%</span></span><br><span class="line">    filter<span class="punctuation">(</span>Country.Region <span class="operator">==</span> <span class="string">&quot;Japan&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span></span><br><span class="line">    select<span class="punctuation">(</span><span class="operator">-</span>Country.Region<span class="punctuation">)</span> <span class="operator">%&gt;%</span></span><br><span class="line">    colSums<span class="punctuation">(</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span></span><br><span class="line">    as.vector<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 日本死亡数据 - Japan death data</span></span><br><span class="line">japan_death <span class="operator">&lt;-</span> global_death <span class="operator">%&gt;%</span></span><br><span class="line">    filter<span class="punctuation">(</span>Country.Region <span class="operator">==</span> <span class="string">&quot;Japan&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span></span><br><span class="line">    select<span class="punctuation">(</span><span class="operator">-</span>Country.Region<span class="punctuation">)</span> <span class="operator">%&gt;%</span></span><br><span class="line">    colSums<span class="punctuation">(</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span></span><br><span class="line">    as.vector<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 加拿大确诊数据 - Canada confirmed data</span></span><br><span class="line">canada_conf <span class="operator">&lt;-</span> global_conf <span class="operator">%&gt;%</span></span><br><span class="line">    filter<span class="punctuation">(</span>Country.Region <span class="operator">==</span> <span class="string">&quot;Canada&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span></span><br><span class="line">    select<span class="punctuation">(</span><span class="operator">-</span>Country.Region<span class="punctuation">)</span> <span class="operator">%&gt;%</span></span><br><span class="line">    colSums<span class="punctuation">(</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span></span><br><span class="line">    as.vector<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 加拿大死亡数据 - Canada death data</span></span><br><span class="line">canada_death <span class="operator">&lt;-</span> global_death <span class="operator">%&gt;%</span></span><br><span class="line">    filter<span class="punctuation">(</span>Country.Region <span class="operator">==</span> <span class="string">&quot;Canada&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span></span><br><span class="line">    select<span class="punctuation">(</span><span class="operator">-</span>Country.Region<span class="punctuation">)</span> <span class="operator">%&gt;%</span></span><br><span class="line">    colSums<span class="punctuation">(</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span></span><br><span class="line">    as.vector<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 整理数据 - Organize data</span></span><br><span class="line">data <span class="operator">&lt;-</span> data.frame<span class="punctuation">(</span></span><br><span class="line">    dates <span class="operator">=</span> dates<span class="punctuation">[</span><span class="number">11</span><span class="operator">:</span><span class="built_in">length</span><span class="punctuation">(</span>dates<span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    us_death <span class="operator">=</span> us_death<span class="punctuation">[</span><span class="number">11</span><span class="operator">:</span><span class="built_in">length</span><span class="punctuation">(</span>us_death<span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    us_conf <span class="operator">=</span> us_conf<span class="punctuation">[</span><span class="number">11</span><span class="operator">:</span><span class="built_in">length</span><span class="punctuation">(</span>us_conf<span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    china_death <span class="operator">=</span> china_death<span class="punctuation">[</span><span class="number">11</span><span class="operator">:</span><span class="built_in">length</span><span class="punctuation">(</span>china_death<span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    china_conf <span class="operator">=</span> china_conf<span class="punctuation">[</span><span class="number">11</span><span class="operator">:</span><span class="built_in">length</span><span class="punctuation">(</span>china_conf<span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    japan_death <span class="operator">=</span> japan_death<span class="punctuation">[</span><span class="number">11</span><span class="operator">:</span><span class="built_in">length</span><span class="punctuation">(</span>japan_death<span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    japan_conf <span class="operator">=</span> japan_conf<span class="punctuation">[</span><span class="number">11</span><span class="operator">:</span><span class="built_in">length</span><span class="punctuation">(</span>japan_conf<span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    canada_death <span class="operator">=</span> canada_death<span class="punctuation">[</span><span class="number">11</span><span class="operator">:</span><span class="built_in">length</span><span class="punctuation">(</span>canada_death<span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    canada_conf <span class="operator">=</span> canada_conf<span class="punctuation">[</span><span class="number">11</span><span class="operator">:</span><span class="built_in">length</span><span class="punctuation">(</span>canada_conf<span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 画图 - Plot</span></span><br><span class="line"><span class="comment"># 确诊人数 - Confirmed cases</span></span><br><span class="line">graph_conf <span class="operator">&lt;-</span> ggplot<span class="punctuation">(</span>data<span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">    geom_line<span class="punctuation">(</span>aes<span class="punctuation">(</span>x <span class="operator">=</span> dates<span class="punctuation">,</span> y <span class="operator">=</span> us_conf<span class="punctuation">)</span><span class="punctuation">,</span> color <span class="operator">=</span> <span class="string">&quot;black&quot;</span><span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">    geom_line<span class="punctuation">(</span>aes<span class="punctuation">(</span>x <span class="operator">=</span> dates<span class="punctuation">,</span> y <span class="operator">=</span> china_conf<span class="punctuation">)</span><span class="punctuation">,</span> color <span class="operator">=</span> <span class="string">&quot;red&quot;</span><span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">    geom_line<span class="punctuation">(</span>aes<span class="punctuation">(</span>x <span class="operator">=</span> dates<span class="punctuation">,</span> y <span class="operator">=</span> japan_conf<span class="punctuation">)</span><span class="punctuation">,</span> color <span class="operator">=</span> <span class="string">&quot;blue&quot;</span><span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">    geom_line<span class="punctuation">(</span>aes<span class="punctuation">(</span>x <span class="operator">=</span> dates<span class="punctuation">,</span> y <span class="operator">=</span> canada_conf<span class="punctuation">)</span><span class="punctuation">,</span> color <span class="operator">=</span> <span class="string">&quot;green&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 死亡人数 - Death cases</span></span><br><span class="line">graph_death <span class="operator">&lt;-</span> ggplot<span class="punctuation">(</span>data<span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">    geom_line<span class="punctuation">(</span>aes<span class="punctuation">(</span>x <span class="operator">=</span> dates<span class="punctuation">,</span> y <span class="operator">=</span> us_death<span class="punctuation">)</span><span class="punctuation">,</span> color <span class="operator">=</span> <span class="string">&quot;black&quot;</span><span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">    geom_line<span class="punctuation">(</span>aes<span class="punctuation">(</span>x <span class="operator">=</span> dates<span class="punctuation">,</span> y <span class="operator">=</span> china_death<span class="punctuation">)</span><span class="punctuation">,</span> color <span class="operator">=</span> <span class="string">&quot;red&quot;</span><span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">    geom_line<span class="punctuation">(</span>aes<span class="punctuation">(</span>x <span class="operator">=</span> dates<span class="punctuation">,</span> y <span class="operator">=</span> japan_death<span class="punctuation">)</span><span class="punctuation">,</span> color <span class="operator">=</span> <span class="string">&quot;blue&quot;</span><span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">    geom_line<span class="punctuation">(</span>aes<span class="punctuation">(</span>x <span class="operator">=</span> dates<span class="punctuation">,</span> y <span class="operator">=</span> canada_death<span class="punctuation">)</span><span class="punctuation">,</span> color <span class="operator">=</span> <span class="string">&quot;green&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 死亡率 - Death rate</span></span><br><span class="line"><span class="comment"># 添加图例 - Add legend</span></span><br><span class="line">graph_death_rate <span class="operator">&lt;-</span> ggplot<span class="punctuation">(</span>data<span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">    geom_line<span class="punctuation">(</span>aes<span class="punctuation">(</span>x <span class="operator">=</span> dates<span class="punctuation">,</span> y <span class="operator">=</span> us_death <span class="operator">/</span> us_conf<span class="punctuation">)</span><span class="punctuation">,</span> color <span class="operator">=</span> <span class="string">&quot;black&quot;</span><span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">    geom_line<span class="punctuation">(</span>aes<span class="punctuation">(</span>x <span class="operator">=</span> dates<span class="punctuation">,</span> y <span class="operator">=</span> china_death <span class="operator">/</span> china_conf<span class="punctuation">)</span><span class="punctuation">,</span> color <span class="operator">=</span> <span class="string">&quot;red&quot;</span><span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">    geom_line<span class="punctuation">(</span>aes<span class="punctuation">(</span>x <span class="operator">=</span> dates<span class="punctuation">,</span> y <span class="operator">=</span> japan_death <span class="operator">/</span> japan_conf<span class="punctuation">)</span><span class="punctuation">,</span> color <span class="operator">=</span> <span class="string">&quot;blue&quot;</span><span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">    geom_line<span class="punctuation">(</span>aes<span class="punctuation">(</span>x <span class="operator">=</span> dates<span class="punctuation">,</span> y <span class="operator">=</span> canada_death <span class="operator">/</span> canada_conf<span class="punctuation">)</span><span class="punctuation">,</span> color <span class="operator">=</span> <span class="string">&quot;green&quot;</span><span class="punctuation">)</span> <span class="operator">+</span> </span><br><span class="line">    scale_y_continuous<span class="punctuation">(</span>labels <span class="operator">=</span> scales<span class="operator">::</span>percent<span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">    labs<span class="punctuation">(</span>y <span class="operator">=</span> <span class="string">&quot;Death rate&quot;</span><span class="punctuation">,</span> x <span class="operator">=</span> <span class="string">&quot;Date&quot;</span><span class="punctuation">,</span> title <span class="operator">=</span> <span class="string">&quot;Death rate of COVID-19&quot;</span><span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line"></span><br><span class="line">print<span class="punctuation">(</span>graph_death_rate<span class="punctuation">)</span></span><br></pre></td></tr></table></figure>
<hr />
<p>我感觉R比起python来，至少有2大优点：</p>
<p>I feel that R has at least two major advantages over Python:</p>
<p><br></p>
<p>R的很多数据结构和功能都是原生的，比如data.frame，或是vector。相比之下，虽然Python也有类似的结构，但是需要导入其他的包才能获得。</p>
<p>Many of R's data structures and functions are native, such as
data.frame and vector. In contrast, although Python has similar
structures, they require importing additional packages to be
accessed.</p>
<p><br></p>
<p>R不需要配置复杂的环境变量，只需要下载一个软件，相比之下，python的环境的配置方法能直接劝退初学者，我现在都数不清我电脑里有多少python.exe。此外，R在包管理和环境配置上非常的舒服。python想要安装一个包时（如果不通过ipynb的魔法命令的话），只能离开编程界面，去控制台输入pip
install ... ，而R不需要去控制台输入rir install，直接在编程界面中使用
install.packages("...") 就可以了。这一点真是大大的舒服。</p>
<p>R does not require complex environment variable configuration. One
just needs to download the software. In comparison, the method of
configuring Python's environment can be daunting for beginners; I've
lost count of how many python.exe files I have on my computer. Moreover,
R is very user-friendly in terms of package management and environment
configuration. In Python, to install a package (if not using the magic
commands in ipynb), one has to leave the programming interface and enter
"pip install ..." in the console, while in R, one can simply use
install.packages("...") directly in the programming interface rather
than using "rir install ...". This is a significant convenience.</p>
<p><br></p>
<p>但与此同时，R也有很多缺点，其中有一些我实在是难以忍受：</p>
<p>However, R also has several drawbacks, some of which I find quite
intolerable:</p>
<p><br></p>
<p>R的函数命名有点混乱，比如将矩阵（matrix）转换成数据框（tibble）使用as_tibble函数，但反过来就使用as.matrix函数。</p>
<p>R's function naming can be confusing; for example, converting a
matrix to a data frame (tibble) uses the as_tibble function, but the
reverse uses the as.matrix function.</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">m <span class="operator">&lt;-</span> as.matrix<span class="punctuation">(</span>df<span class="punctuation">)</span></span><br><span class="line">print<span class="punctuation">(</span>m<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">df <span class="operator">&lt;-</span> as_tibble<span class="punctuation">(</span>m<span class="punctuation">)</span></span><br><span class="line">print<span class="punctuation">(</span>df<span class="punctuation">)</span></span><br></pre></td></tr></table></figure>
<p>R的一些函数的格式有时显得莫名奇妙，比如where函数仅在select函数内才有意义等等。</p>
<p>The syntax of some R functions can sometimes be peculiar, such as the
"where" function only making sense within the "select" function, and so
on.</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">select<span class="punctuation">(</span>where<span class="punctuation">(</span><span class="built_in">is.character</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure>
<p><br></p>
<p>ggplot的数据导入的方法也让我难以理解，可能是因为我没有熟悉R的逻辑吧。</p>
<p>I also find the method of importing data into ggplot difficult to
understand, perhaps because I am not familiar with R's logic.</p>
<p><br></p>
<p>我最不能忍受，最不能理解的一点是为什么要允许点号“.”出现在变量名称里，不仅如此，带有点号的R的默认函数名和默认变量简直是铺天盖地，对我来说，代码阅读速度直接腰斩。</p>
<p>What I find most intolerable and incomprehensible is the allowance of
the dot “.” in variable names. Moreover, R's default function and
variable names contain so many dots. For me, this significantly slows
down the speed of reading code.</p>
<p><br></p>
<p>总而言之，R给我的感觉是混乱且强大的语言。</p>
<p>In summary, R strikes me as a chaotic yet powerful language.</p>
]]></content>
      <tags>
        <tag>编程 - Programming</tag>
      </tags>
  </entry>
  <entry>
    <title>魔改Gromacs，并运行 - Modify the Gromacs, and run it</title>
    <url>//post/47/</url>
    <content><![CDATA[<p>Gromacs是一个开源的软件，用c++开发。如果对Gromacs的某个功能不满意，大可以直接去修改其源代码，然后编译，安装。</p>
<p>Gromacs is an open-source software developed in C++. If you are
dissatisfied with a particular feature of Gromacs, you can directly
modify its source code, then compile and install it.</p>
<p><br></p>
<p>首先，从github上下载其源代码：在想要储存代码的地方打开terminal（或者对于windows用户就是powershell），输入：</p>
<p>First, download the source code from GitHub: Open the terminal (or
PowerShell for Windows users) in the desired location to store the code,
and type:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/gromacs/gromacs.git</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>源代码储存在gromacs/src/gromacs/里，比如分析氢键的gmx
hbond就位于gromacs/src/gromacs/gmxana/gmx_hbond.cpp</p>
<p>想怎么改都可以，改好后保存。</p>
<p>The source code is stored in gromacs/src/gromacs/. For example, the
code for analyzing hydrogen bonds, gmx hbond, is located at
gromacs/src/gromacs/gmxana/gmx_hbond.cpp.</p>
<p>Modify as you like and then save.</p>
<p><br></p>
<p>然后，使用cmake编译gromacs：进入gromacs的主文件夹，创建一个名为build的文件夹，进入，在此打开terminal，输入：</p>
<p>Next, compile Gromacs using cmake: Enter the main Gromacs directory,
create a folder named build, enter it, open the terminal there, and
type:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cmake .. -DCMAKE_INSTALL_PREFIX=/path/to/new/gromacs</span><br></pre></td></tr></table></figure>
<p>此地址为你想要将新gromacs安装的位置。</p>
<p>这中间可能会报错，通常是因为缺少一些包，sudo安装就好。</p>
<p>This path is where you want to install the new Gromacs.</p>
<p>Errors may occur during this process, usually due to missing
packages. Installing them with sudo should resolve the issue.</p>
<p><br></p>
<p>编译好了之后，输入：</p>
<p>After compilation, enter:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">make install</span><br></pre></td></tr></table></figure>
<p>安装魔改版的gromacs。</p>
<p>To install the modified version of Gromacs.</p>
<p><br></p>
<p>（可选）使用以下命令将此gromacs所在的位置暂时添加到环境变量中。这样使用时就可以不用指定其完整路径了。</p>
<p>(Optional) Use the following command to temporarily add the location
of this Gromacs to the environment variables. This way, you won't need
to specify the full path when using.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export PATH=/path/to/new/gromacs/bin:$PATH</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>Since today is April Fool's Day, a small April Fool's effect has been
added, as shown in the image below. Happy April Fool's Day to
everyone.</p>
<p>由于今天是愚人节，这里做了一个小小的愚人节效果，如下图所示。大家愚人节快乐。</p>
<p><img src="1.png" /></p>
]]></content>
      <tags>
        <tag>编程 - Programming</tag>
        <tag>技术 - Technology</tag>
      </tags>
  </entry>
  <entry>
    <title>为MDAnalysis包增加计算间断氢键自相关函数功能 - Add the functionality to calculate intermittent hydrogen bond autocorrelation functions to the MDAnalysis package</title>
    <url>//post/49/</url>
    <content><![CDATA[<p>MDAnalysis包是一个用于分析MD的数据结果的python包，其内有丰富的分析工具，包括分析氢键的自相关函数（Hydrogen
bond autocorelation
function，hbacf）。但是其只支持分析连续的氢键自相关函数（continuous
hbacf），不支持分析间断的（intermittent
hbacf）。而其内部支持的intermittency参数也不完全符合间断的hbacf的定义。所以，我打算手动修改源代码。</p>
<p>The MDAnalysis package is a Python package for analyzing molecular
dynamics (MD) data results, equipped with a rich set of analysis tools,
including a function for analyzing Hydrogen bond autocorrelation
function (hbacf). However, it only supports the analysis of continuous
hbacf and not intermittent hbacf. The intermittency parameter included
does not fully comply with the definition of intermittent hbacf either.
Therefore, I plan to manually modify the source code.</p>
<p><br></p>
<p>首先，其计算自相关函数的源代码是MDAnalysis/lib/correlation.py处的autocorrelation函数。在这里有一行代码：</p>
<p>Firstly, the source code for computing the autocorrelation function
is found in MDAnalysis/lib/correlation.py, within the autocorrelation
function. There is a line of code:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Ntau = <span class="built_in">len</span>(<span class="built_in">set</span>.intersection(*list_of_sets[t:t + tau + <span class="number">1</span>]))</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>其中，<code>*list_of_sets[t:t + tau + 1]</code>是每一帧的氢键数据的集合。如果想要把它修改成既可以计算连续的，也可以计算间断的的hbacf的话，可以把它改成<code>list_of_sets[t], list_of_sets[t + tau]</code>。即，将这一行修改为：</p>
<p>where <code>*list_of_sets[t:t + tau + 1]</code> represents the
collection of hydrogen bond data for each frame. To modify this to
compute both continuous and intermittent hbacf, it can be changed to
<code>list_of_sets[t], list_of_sets[t + tau]</code>. Thus, modifying
this line to:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> continuous:</span><br><span class="line">    <span class="comment"># continuous: IDs that survive from t to t + tau and at every frame in between</span></span><br><span class="line">    Ntau = <span class="built_in">len</span>(<span class="built_in">set</span>.intersection(*list_of_sets[t:t + tau + <span class="number">1</span>]))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="comment"># intermittent: IDs that survive at t and t + tau</span></span><br><span class="line">    Ntau = <span class="built_in">len</span>(<span class="built_in">set</span>.intersection(list_of_sets[t], list_of_sets[t + tau]))</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>这样，如果参数continuous为Ture，就会计算连续的hbacf，如果continuous为False，就会计算间断的。</p>
<p>This time, if the continuous parameter is set to True, it will
compute the continuous hbacf; if set to False, it will compute the
intermittent type.</p>
<p><br></p>
<p>autocorrelation函数的定义处也需要修改一下：</p>
<p>The definition of the autocorrelation function also needs some
modification:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">autocorrelation</span>(<span class="params">list_of_sets, tau_max, window_step=<span class="number">1</span>, continuous=<span class="literal">True</span></span>):</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>通常，我们用来计算氢键的自相关函数所用的是HydrogenBondAnalysis类的lifetime方法。这个方法的源代码在MDAnalysis/analysis/hydrogenbonds/hbond_analysis.py中。我们需要在lifetime调用autocorrelation函数时，传递一个continuous变量，即把它修改成：</p>
<p>Normally, we use the lifetime method of the HydrogenBondAnalysis
class to calculate the autocorrelation function of hydrogen bonds. The
source code for this method is located in
MDAnalysis/analysis/hydrogenbonds/hbond_analysis.py. We need to modify
it to pass a continuous variable when the lifetime method calls the
autocorrelation function, changing it to:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">tau_timeseries, timeseries = autocorrelation(</span><br><span class="line">    intermittent_hbonds,</span><br><span class="line">    tau_max,</span><br><span class="line">    window_step=window_step,</span><br><span class="line">    continuous=continuous</span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>同样，在lifetime的定义处，修改为</p>
<p>Similarly, in the definition of lifetime, modify to:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">lifetime</span>(<span class="params">self, tau_max=<span class="number">20</span>, window_step=<span class="number">1</span>, intermittency=<span class="number">0</span>, continuous=<span class="literal">True</span></span>):</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>这样，在计算hbacf时，如果我们将continuous参数设为False，就会得到间断的自相关函数，如下所示。</p>
<p>With these changes, when calculating hbacf and setting the continuous
parameter to False, the resulting function will produce intermittent
autocorrelation, as shown below.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">tau_frame, hbond_lifetime = hbonds.lifetime(tau_max=<span class="number">2000</span>, continuous=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>附注： - Note:</p>
<p><a
href="https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.85.768">https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.85.768</a></p>
<p>这篇文章里提到了连续的和间断的hbacf的定义。</p>
<p>This article also discusses the definitions of continuous and
intermittent hbacf.</p>
]]></content>
      <tags>
        <tag>编程 - Programming</tag>
        <tag>技术 - Technology</tag>
      </tags>
  </entry>
  <entry>
    <title>数据科学课程学习记录</title>
    <url>//post/50/</url>
    <content><![CDATA[<p>在coursera上试听了《IBM Data Science Professional
Certificate》这一系列，一共有10门数据处理课。</p>
<p><a
href="https://www.coursera.org/professional-certificates/ibm-data-science">https://www.coursera.org/professional-certificates/ibm-data-science</a></p>
<p><br></p>
<h3 id="第一门课what-is-data-science">第一门课：What is Data
Science?</h3>
<p><a
href="https://www.coursera.org/learn/what-is-datascience/">https://www.coursera.org/learn/what-is-datascience/</a></p>
<p>这门课是对于数据科学的绪论，讲了什么是数据科学，学了能做什么工作，以及什么是数据库。除了有关数据库的一些专有名词需要记一下之外，其他的几乎全都是常识。</p>
<p>它提到了一个数据科学的竞赛：kaggle，如果需要的话可能得参加一下。</p>
<p>2024/05/06</p>
<p><br></p>
<h3 id="第二门课open-source-tools-for-data-science">第二门课：Open
Source tools for Data Science</h3>
<p><a
href="https://www.coursera.org/learn/open-source-tools-for-data-science?specialization=ibm-data-science">https://www.coursera.org/learn/open-source-tools-for-data-science?specialization=ibm-data-science</a></p>
<p>这门课讲的很杂，包括python，jupyter
notebook，R，Rstudio，github，watson
studio，spark，hardoop等等。我对python和R相关的东西都很熟悉，但是spark，hardoop等软件就不是很懂了。</p>
<p>2024/06/12</p>
<p>未完待续</p>
]]></content>
      <tags>
        <tag>编程 - Programming</tag>
        <tag>技术 - Technology</tag>
      </tags>
  </entry>
  <entry>
    <title>政治言论倾向分析器</title>
    <url>//post/48/</url>
    <content><![CDATA[<h3 id="背景介绍">背景介绍</h3>
<p>Mhyyyy老师的视频<a
href="https://www.youtube.com/watch?v=WItmdbBPOww&amp;t=413s">《从零教你懂政治6》</a>介绍了多维政治坐标。通过使用计划-市场；民主-威权；进步-保守；世界-民族这4个指标来判断一个人的政治思想确实是相当全面的思想。</p>
<p>但是由“人”
来判断政治坐标总归是主观的。因为“人”做评价时，总是不可避免地带有其自己的倾向，如果我是极左，那我看其他人都偏右。此外，人的思想总是会受到环境的干扰，比如一个人，听多了极端保守主义的言论，就可能会把一个中立的言论当成进步的。</p>
<p>目前为止，最客观的评价政治指标方法当然是做测试题，但是如果只是想分析一句话的政治倾向，或者想给一个已经去世的人做客观的政治指标分析，测试题就没有用武之地了。</p>
<p><br></p>
<p>除了做测试题之外，其实也可以使用ChatGPT（特指GPT-4）做客观的政治倾向分析。因为ChatGPT学习过大量的文本数据，其中自然包括政治方面的知识。事实上，ChatGPT对政治的理解相当深刻，并且十分博学。</p>
<p>我稍稍测试了一些常见的政治术语，要求ChatGPT进行解释，它的回答也基本令人满意。想必ChatGPT有能力评价一个人的政治倾向。</p>
<p><img src="1.png" /></p>
<p><br></p>
<h3 id="提示词">提示词</h3>
<p>这里抛砖引玉，给出一份效果还可以的提示词，用于分析某一言论的政治倾向。如果有谁有更好的提示词，欢迎分享。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">请分析以下言论所体现的言论本人的政治倾向。请从4个维度来分析其政治倾向，请在每一个评价处简要说明原因。</span><br><span class="line"></span><br><span class="line">经济: 计划(平等, 左) - 市场(自由, 右) ，如果此言论支持市场主义，依据其支持程度不同，将其评价为市场6-市场10，市场6为中立，稍偏向市场经济，而市场10为极端市场经济，数值越大越极端。如果此言论支持计划主义，依据其支持程度不同，评价其为计划6-计划10。如中立，则评价为中立5，如未体现明显的倾向请回复未知0。</span><br><span class="line">政治: 民主(自由) - 威权(权威)，评价规则同上。</span><br><span class="line">文化: 进步 - 保守，评价规则同上。</span><br><span class="line">身份: 世界(全球) - 民族(国家)，评价规则同上。</span><br><span class="line"></span><br><span class="line">请以以下格式回复：</span><br><span class="line"><span class="strong">**经济 计划/市场num**</span> - 原因</span><br><span class="line"><span class="strong">**政治 民主/威权num**</span> - 原因</span><br><span class="line"><span class="strong">**文化 进步/保守num**</span> - 原因</span><br><span class="line"><span class="strong">**身份 世界/民族num**</span> - 原因</span><br><span class="line"></span><br><span class="line">请注意：言论本人并不一定支持其提到的政治倾向。如某言论虽然提到了计划经济，但认为其属于极左，这意味这他的经济倾向可能偏向市场。反之同理，政治，文化，民族方面同理。</span><br><span class="line"></span><br><span class="line">一些例子以供参考：</span><br><span class="line">通常认为，斯大林：</span><br><span class="line"><span class="strong">**经济 计划9**</span> - 明显倾向计划经济</span><br><span class="line"><span class="strong">**政治 威权9**</span> - 搞威权统治</span><br><span class="line"><span class="strong">**文化 进步8**</span> - 推行无神论</span><br><span class="line"><span class="strong">**身份 民族6**</span> - 是大俄罗斯主义者，但也会参与共产国际</span><br><span class="line"></span><br><span class="line">希特勒：</span><br><span class="line"><span class="strong">**经济 市场7**</span> - 相对支持市场经济</span><br><span class="line"><span class="strong">**政治 威权9**</span> - 搞威权统治</span><br><span class="line"><span class="strong">**文化 中立5**</span> - 没有明显倾向</span><br><span class="line"><span class="strong">**身份 民族9**</span> - 非常严重的民族主义</span><br><span class="line"></span><br><span class="line">---以下为待分析的言论---</span><br><span class="line"></span><br><span class="line">“无论国际风云如何变幻，中国都会坚定不移地扩大开放。长江、黄河不会倒流。”</span><br></pre></td></tr></table></figure>
<p>将上述一段话复制到ChatGPT里，然后将最后一句话改成想要分析的言论，然后就可以得到ChatGPT的回复了。一种可能的回复如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">对于给出的言论“无论国际风云如何变幻，中国都会坚定不移地扩大开放。长江、黄河不会倒流。”，我们可以从以下四个维度进行政治倾向分析：</span><br><span class="line"></span><br><span class="line">经济 市场7 - 原因：这句话强调“扩大开放”，通常这表示对外贸易和市场经济的支持。这种表述通常反映了对市场机制和国际交流的重视，但由于言论中未具体提及市场经济的极端自由化措施，故评为稍微偏向市场经济的市场7。</span><br><span class="line"></span><br><span class="line">政治 民主6 - 原因：虽然这句话没有直接涉及到政治体制的具体形态，但“坚定不移地扩大开放”可能暗示了对包容和一定程度上的政治自由的支持，因为经济开放往往与政治体制的某种开放性相伴随。评为略微倾向于民主的民主6。</span><br><span class="line"></span><br><span class="line">文化 进步6 - 原因：开放通常与文化的进步和现代化联系在一起，意味着接受新思想和国际文化的融合。此言论表达了对变革和新观念的接纳态度，因此评为略微偏向文化进步的进步6。</span><br><span class="line"></span><br><span class="line">身份 世界7 - 原因：“扩大开放”强调的是对外关系和国际合作的重要性，这体现了一种全球化的视角。同时，使用“长江、黄河不会倒流”作为比喻，强调中国文化和传统的持续，但在全球化语境下，这种表述更倾向于表明在保持自身文化特色的同时，积极参与全球事务。故评为稍微偏向世界主义的世界7。</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>注意，ChatGPT给出的分数不一定每一次都相同，但误差通常不会超过正负1。此外，GPT-3.5给出的结果并不好，如果有条件，尽量使用GPT-4模型。</p>
<p>另请注意，一个人的言论不一定和其行为一致，且不一定100%体现其意识型态，反例实在是太多了。</p>
<p>免责声明：此结果仅供娱乐，本人不为使用此提示词生成的任何内容负责。如果ChatGPT生成了冒犯您的言论，本人深感遗憾。</p>
<p><br></p>
<h3 id="构建gpts可选">构建GPTs（可选）</h3>
<p>如果不想每一次都复制这么长一段文字，ChatGPT
plus用户可以构建一个自己的GPT。点击<a
href="https://chat.openai.com/gpts/mine">https://chat.openai.com/gpts/mine</a>，点击create
a
GPT，在Name中随便起一个名字，在Instructions一栏中填入刚才的文字，删掉最后一行的言论。然后点击右上角的create，就可以使用了。</p>
<p>使用时只需要复制需要评价的言论，输入给它就可以。</p>
<p>或者你也可以用<a
href="https://chat.openai.com/g/g-hCAF8rWLv-zheng-zhi-yan-lun-qing-xiang-fen-xi-qi">我的GPT</a>。</p>
<p><img src="2.png" /></p>
<p><img src="3.png" /></p>
<p><br></p>
<h3 id="更复杂的文本">更复杂的文本</h3>
<p>将更复杂的文本输入进ChatGPT也是可行的，但其准确率会稍稍变差，因为文本可能体现同一个人不同时期的主张，甚至可能体现作者的矛盾的心理。生成出来的评价指标误差也会更大。下文挑选了毛泽东早期，中期，晚期的一些言论，ChatGPT给出了计划8，民主7，进步7，世界6的评价。</p>
<p><img src="4.png" /></p>
<p><br></p>
<h3 id="分析毛的间谍日本人言论">分析毛的“间谍日本人”言论</h3>
<p>毛泽东曾经说过这样一句话：</p>
<p>“中日关系的历史是很长的，人类几十万年以来过着和平的生活，我们的祖先吵过架，打过仗，这一套可以忘记啦！应该忘记，因为那是不愉快的事情，记在我们脑子里干什么呢？”</p>
<p>ChatGPT对这句话给出了未知0，民主6，进步6，世界6的打分。</p>
<p><img src="6.png" /></p>
<p><br></p>
<p>但是近年来，中国民族主义思潮流行，而毛泽东本人大体上是全球主义者。所以有一些人在不知道这句话的来源时，攻击这句话“要么是间谍，要么是日本人”，颇有喜剧效果。</p>
<p><img src="5.webp" /></p>
<p><a
href="https://weibo.com/1763708565/O88KZqTBy">https://weibo.com/1763708565/O88KZqTBy</a></p>
]]></content>
      <tags>
        <tag>随想 - Thoughts</tag>
        <tag>技术 - Technology</tag>
      </tags>
  </entry>
  <entry>
    <title>推荐一个听歌识别曲风的网站：cyanite - Recommend a website for identifying music genres：cyanite</title>
    <url>//post/51/</url>
    <content><![CDATA[<p>推荐一个听歌识别曲风的网站：<a
href="https://app.cyanite.ai/library">cyanite</a></p>
<p>Here I recommend a website for identifying music genres: <a
href="https://app.cyanite.ai/library">cyanite</a></p>
<p><br></p>
<p>上传一首音乐，或者输入一个Youtube链接，cyanite会自动识别这首歌的风格，曲风，情感，使用的器乐。识别的还算准确吧。</p>
<p>Upload a piece of music or enter a YouTube link, and Cyanite will
automatically identify the song's style, genre, emotion, and
instrumentation. The accuracy is decent.</p>
<p><img src="1.png" /></p>
<p><br></p>
<p>美中不足的是，似乎它支持的电音种类一共就这么几种，电音仍然是小众音乐。</p>
<p>However, a minor drawback is that it seems to support only a limited
number of electronic music genres, as electronic music remains
niche.</p>
<p><img src="2.png" /></p>
]]></content>
      <tags>
        <tag>推荐 - Recommendation</tag>
      </tags>
  </entry>
  <entry>
    <title>MDAnalysis线性密度模块的bug修复 - Bug fix for the MDAnalysis linear density module</title>
    <url>//post/52/</url>
    <content><![CDATA[<p>MDAnalysis的线性密度模块有bug：模拟一盒Lammps模拟的均匀的水分子，计算出来的线性密度有一些向上突起的尖峰，如图所示：</p>
<p>There is a bug in the MDAnalysis linear density module: when
calculating the linear density of a uniformly simulated box of water
molecules using LAMMPS, the result includes some sharp upward spikes, as
shown below.</p>
<p><img src="1.png" /></p>
<p><br></p>
<p>其bug位于<code>lineardensity.py</code>中，<code>LinearDensity</code>类的<code>__init__</code>function，第218行：</p>
<p>The bug is located in the <code>lineardensity.py</code> file, within
the <code>__init__</code> function of the <code>LinearDensity</code>
class, at line 218:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">bins = (self.dimensions // self.binsize).astype(<span class="built_in">int</span>)</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>当<code>self.dimensions</code>为<code>numpy([20., 20., 20.])</code>且<code>self.binsize</code>为<code>0.1</code>时，由于浮点精度误差<code>bins</code>不是<code>200, 200, 200</code>，而是<code>199, 199, 199</code>。这会导致后续<code>np.histogram</code>函数计算出现错误。</p>
<p>可将其替换为：</p>
<p>When <code>self.dimensions</code> is
<code>numpy([20., 20., 20.])</code> and <code>self.binsize</code> is
<code>0.1</code>, due to floating-point precision errors,
<code>bins</code> becomes <code>199, 199, 199</code> instead of
<code>200, 200, 200</code>. This causes incorrect calculations in the
subsequent <code>np.histogram</code> function.</p>
<p>This can be fixed by replacing the line with:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">bins = np.<span class="built_in">round</span>(self.dimensions / self.binsize).astype(<span class="built_in">int</span>)</span><br></pre></td></tr></table></figure>
<p><img src="2.png" /></p>
<p><br></p>
<p>有关于这个问题的详细讨论在<a
href="https://github.com/MDAnalysis/mdanalysis/issues/4476">这个github
issue</a>中</p>
<p>For more detailed discussion on this issue, please refer to <a
href="https://github.com/MDAnalysis/mdanalysis/issues/4476">this GitHub
issue</a>.</p>
]]></content>
      <tags>
        <tag>编程 - Programming</tag>
        <tag>技术 - Technology</tag>
      </tags>
  </entry>
  <entry>
    <title>视频推荐：马前卒锐评《当马克思遇见孔夫子》</title>
    <url>//post/53/</url>
    <content><![CDATA[<p>推荐马前卒做的系列视频：</p>
<p><a
href="https://www.youtube.com/watch?v=Ff0sCslvKaw">【睡前消息658】请回孔夫子，浪费郭继承——评2023《当马克思遇见孔夫子》</a></p>
<p><a
href="https://www.youtube.com/watch?v=PQdB9pXhcSk">【睡前消息666】遇见马克思
孔子才懂传统文化（上）</a></p>
<p><a
href="https://www.youtube.com/watch?v=DW4W6vrym7g">【睡前消息667】遇见马克思
孔子才懂传统文化（下）</a></p>
<p><br></p>
<p>马克思和中国传统文化是中国人的精神世界的2个内核。23年秋天，湖南台和芒果TV发布了《当马克思遇见孔夫子》节目。此节目由官方支持，尝试证明马克思和中国传统文化是相容的，且中国传统文化相当优秀。但由于节目制作水平低劣尴尬，引发了很多争议。马前卒做了3期视频，以一个年轻的，左派的，非民族主义的视角，来探讨马克思和中国传统文化的关系，以及这个节目应该怎么做。马前卒这三个视频对此节目的分析有很多“妙不可言”的片段，相当值得一看。</p>
<p>以下是这三期视频的简单总结和精彩片段。</p>
<p><br></p>
<p>睡前消息658期：马前卒简单地介绍节目，并指出节目中的制作问题，断章取义之处，和政治学错误。</p>
<blockquote>
<p>“第二集某些地方可以看出他（指郭继承）保留了平时讲课的风格，凡是逻辑连不上的地方，就要批西方自由主义。先证明别人是错的，再默认自己是对的。”</p>
</blockquote>
<blockquote>
<p>“所以（本节目的）最简单的提升方案，就是保留原来的标题，继续让马克思遇见孔夫子，同时给郭继承副教授升值，当总导演兼主持人，这个节目就能用十分之一的成本，达到现在十倍的影响力。至于说影响力是正面还是负面，我觉得方向上肯定和现在的影响力是一致的。”</p>
</blockquote>
<p><br></p>
<p class="tennisbot" id="《遇见马克思，孔子才懂传统文化》这个标题也挺让人绷不住的">
睡前消息666期：马前卒给出了节目的一个改良方案，设想马克思遇到的是人格化的，真实的孔子。马前卒简单介绍了孔子生活的年代，和孔子的政治理念：
</p>
<p>孔子意识到了周天子分封制的脆弱性，即，大贵族对手下势力有绝对掌控力，反叛成本太低。所以孔子要求士大夫不仅要向直属上司负责，更要在精神上额外忠于整套制度，以挽救周天子分封制。</p>
<p>马克思会对此孔子的政治理念有所认同，一是发现道德批判毫无意义，要开设私学培养新道德的载体，二是用“礼制”具象化道德，提高道德约束力。</p>
<p>但是马克思会认为，孔子的政治理念并不完整，还应该分析春秋时期的社会生产力和生产关系，用唯物主义史观分析历史和未来的趋势。马克思会认为分封制必将解体，取而代之的是更适应新生产关系的制度。</p>
<blockquote>
<p>“湖南台的节目......没有在开头给“孔夫子”做一个明确定义，这个“孔夫子”到底是人格化的形象，还是文化符号，观众不知道，导演也不想明说，所以节目就是各种概念混着用，哪个方便用哪个。”</p>
</blockquote>
<blockquote>
<p>“但是不管你（指孔夫子）身上有多少历史局限性，我马克思都很欣赏你参与历史的方式，就是在时代交替的时候，找到最期待变化的年轻人，给他们提供知识和思想，让他们去建设新时代。”</p>
</blockquote>
<p><br></p>
<p>睡前消息667期：马前卒给出节目的另两种改良方案，使马克思和以孔子为代表的中国传统文化对话，和使马克思和中国优秀传统文化对话。马前卒定义了什么是优秀的传统文化，并推荐了《方腊起义》。</p>
<blockquote>
<p>“睡前消息团队有一条基本原则：避免凭空给出否定观点，如果说某件事办得不好，就要尽量给出一个相对好的案例。”</p>
</blockquote>
<blockquote>
<p>“在铁器时代的新条件下，儒法结合就是最稳定的国家制度......从人士管理的角度来说，各个统一王朝在硬件上是法家的制度......但是软件上是儒家意识型态。”</p>
</blockquote>
<blockquote>
<p>“鼓励创造经济增量的文化，给普通人提供更多机会的文化，是好传统。消极保护存量，要求普通人无条件忠于现有秩序的文化，就是坏传统。”（这句话也证明了马前卒是左派工业党）</p>
</blockquote>
<blockquote>
<p>“凭借更多的知识储备，我们对孔子，对传统文化应该有更多的俯视感。”</p>
</blockquote>
<p><br></p>
<p>另，李老师也有出过相同话题的<a
href="https://www.youtube.com/watch?v=SYoYeB-uz0k">视频</a>，从自由派“反贼”的角度分析了这个节目的荒谬之处。</p>
]]></content>
      <tags>
        <tag>推荐 - Recommendation</tag>
      </tags>
  </entry>
  <entry>
    <title>关于压力和拓宽见识的一点看法，致我的好老弟</title>
    <url>//post/54/</url>
    <content><![CDATA[<h3 id="社会压力">社会压力</h3>
<p>从某种角度上来说，社会对我们的的要求很高，也很严，包括要成功，要挣够多少钱，要达到什么样的学历，要在xx岁之前结婚，要在xx岁之前生孩子等等。这些要求中有些是你父母的要求，也有些是其他人提出来的，包括其他亲戚，老师，同学，也有些是我们的文化暗示的。</p>
<p>但是，这些要求对于普通人来说，实在是没法一一实现。即使是对于条件好，天赋又好的天龙人来说也很难同时达到。比如学历越高，通常意味着生孩子越晚。一个专心求学，博士毕业后又读了两三个博士后的人怎么可能30岁之前生孩子？无论怎么做社会都不会完全满意，一味追求社会的要求就属于是被牵鼻子了。</p>
<p>所以说，尽快意识到你我都只是普通人，然后放弃掉社会给你我的不切实际的要求。或者更进一步地说，如果你有自己想要追求的目标的话，所有这些目标都不是不能放弃。</p>
<p><br></p>
<p>（多说一句，“社会为什么向你我提出这样的一套要求”
是一个非常耐人寻味的话题。社会并不总是希望你我成为一个日子过得舒服的人。）</p>
<p><br></p>
<p>当然，如果人真的选择放弃这些目标，肯定会受到来自社会的压力。但是我认为，<strong>阅历足够多的人，是知道自己想要什么的</strong>，不会受到社会压力的影响。</p>
<p>更何况东亚儒教文化都非常“集体主义”，社会压力就是比其他文化大。</p>
<p><br></p>
<p>社会压力其实是一个非常没有意义的东西。主要的原因在于，越是“段位高”，见识广的人，包容心越强，而越是“段位低”，见识短浅的人，越是狭隘，就越喜欢给其他人社会压力。</p>
<p>比如，在上海广州等国际大都市，街上经常会有穿cos服的人，但在咱家那边就几乎没有。我妈妈来西安的时候就说：“大街上穿可爱服装的人真多”。但是打开抖音快手，随便搜一个coser，下边的评论区总会有很多人说“这是什么鬼”，“多少钱一晚”。我的建议是<strong>绕开这种人，自己知道怎么回事就好</strong>。</p>
<p><br></p>
<p>极端的社会压力就是网暴。举一个例子：<a
href="https://news.cctv.com/2023/02/22/ARTI6A4aGGVOh6oDNnUkT47V230222.shtml">郑灵华</a>，因为染了粉红色的头发，被抖音，百家号等平台网暴，因抑郁去世。</p>
<p><br></p>
<p>见识广的人不仅包容心更强，对待社会压力的抗性也更强。再举一个例子，加拿大有1/3的男性一辈子都没有结婚，本地人都觉得很正常。当我知道且认可这件事之后，我再被人指责：一把年纪了还不结婚没正事，我只会觉得他的指责毫无道理，“关你屁事”。</p>
<p><br></p>
<p>（另，我的亲身体会：像恋爱这种事情，越想要越要不到，因为“松弛感”会相当吸引异性。除了恋爱，其他东西也几乎都如此，关心则乱。）</p>
<p><br></p>
<h3 id="父母压力">父母压力</h3>
<p>来自父母的压力会比社会压力更难招架一点。这里我承认，一些父母相当不好对付，掌控性极强，甚至会直接影响子女的生活，父母把孩子逼成精神病的案例也屡见不鲜。父母更难对付的原因有二：一是总是觉得父母无论做什么都是为了子女好，二是与父母生活得更近。</p>
<p><br></p>
<p>虽说父母给子女压力是想为了子女好，但不恰当的爱对人的伤害更大。这个社会每三五年就会有很大变化，父母的价值观和我们会很不一样，父母对我们的要求和我们自己对自己的要求也会有很大差别。父母给子女压力出发点是好的，但效果未必有多好。对于这一点，我的建议是尽量保持清醒，对自身的心理和生活保持敏感，随时警惕父母的行为是否让自己不舒服。</p>
<p>更进一步，我认为：没有人的性格是完美的，所以没有人能给出完美的爱。</p>
<p><br></p>
<p>其次，我们与父母生活的更近，所以父母的压力更持久。对于这一点，我也没什么好的解决方案，只能建议，在人生的一个时期内（比如大学时期），尽量减少与他们的联系，借此机会完善自身的价值观，尽早确定自己要做一个什么样的人。</p>
<p><br></p>
<p>在你我小时候，父母占据了我们世界的100%，但随着我们越长越大，父母占据的比例肯定会越来越小。所以，虽说父母有很多地方做的不太行，但我们也不全指望他们活着。比起期待他俩改变，主动控制与他俩的关系，适当降低他俩在你心中的占比，会让你舒服很多。</p>
<p><br></p>
<h3 id="自己的压力">自己的压力</h3>
<p>这一关恐怕是最难过的，但还是老方法：拓宽见识。这里说一个暴论：95%的自己给自己的压力都是没有意义的，并且，无论你要求自己什么，总有人不这么要求自己。</p>
<p>只有那5%是有意义的，这些压力是人出于合理的，自洽的世界观，对自己的合理的要求。举个例子，假如我想要成为一个写手，那么，每天写点东西就是有必要的压力，而非要学好语文就是没有必要的压力，属于是自己给自己设置的障碍。语文学不好就不能写东西了吗？</p>
<p><br></p>
<p>此外，如果自己没有合理的目标，或者世界观的话，那所谓的自己的压力，多半只是社会压力罢了。</p>
<p><br></p>
<p>自己的压力还来自于情绪，包括恐惧，焦虑。解决办法非常巧，还是拓宽见识，或者换句话说，不要只在乎“你的目标”这件事，多在乎点别的，这样，这件事所占的精力就降低了。关心则乱，稍微对自己放松一下要求，改善一下情绪，反而能出更好的结果。</p>
<p><br></p>
<p>有一个小tip，在确定自己目标时，不妨给目标设立的宽松一点，自由一点。即，假如我想当个写手，但是我也会练习翻译技能，将来当个翻译也不是不行，当个编辑也不是不行，当个申论辅导老师也不是不行。这样，即使一个目标实现不了，还有其他目标可以实现，不会让自己情绪波动太大。</p>
<p><br></p>
<h3 id="其他">其他</h3>
<p>多说一句，我所谓的见识多，不仅包括见识的社会种类多，也包括见识的人多，见识的想法多。<strong>这世界比我们能想象到的还复杂，确实什么人都有，什么想法都有。</strong></p>
<p>有一句难听的话：这世上99%的难题都被人思考过。所以，如果有什么问题想不开，上b站，上知乎，上微博多搜搜别人的处理方法，应该不乏有参考意义的回答。</p>
<p>一个小tip：关于“如何应对社会压力”，微博和小红书的up主往往有非常好的安慰，而知乎网友会给出一套理论扎实且实操可行的方法论。</p>
<p>另一个小tip，如果有可能的话，每个社交平台都搜搜，因为每个平台的用户群体关注的方向不同，可能会有让人惊喜的见解。</p>
<p><br></p>
<p>再多说一句，当人觉得周围的环境压力过大的时候，他/她可能会什么都不想干，什么目标都不想有。这很正常，休息一段时间，找点好玩的玩玩，认识认识新人，就会好。</p>
<p><br></p>
<h3 id="总结">总结</h3>
<p>说了这么多，归根结底，要想使得压力小一点，就是三条：</p>
<ol type="1">
<li><p>尽量多跟见识广的，包容心强的人接触。不要理会那些狭隘的人，自己也不要狭隘。“出淤泥而不染”</p></li>
<li><p>尽早知道自己想做什么样的人，干什么事，保持“自洽”。</p></li>
<li><p>保持复杂，不要太在意一件事，也不要太在意一个人。</p></li>
</ol>
<p><br></p>
<p>无论怎么说，对自身境遇的认识与反思，都是人类思想中的精华。恭喜你已经上道了，坚持思考下去，一定会越来越通透，越来越舒服的。</p>
]]></content>
      <tags>
        <tag>随想 - Thoughts</tag>
      </tags>
  </entry>
  <entry>
    <title>小打油 - 流浪汉</title>
    <url>//post/55/</url>
    <content><![CDATA[<p>流浪汉，身上破破烂烂。</p>
<p>努力也不被需要，永远不是top one。</p>
<p>他不干，有的是人干。</p>
<p><br></p>
<p>流浪汉，简历都没人看。</p>
<p>AI勤劳又肯干，博士每年多十万。</p>
<p>我不干，有的是“人”干。</p>
<p><br></p>
<p>2024/7/10</p>
<p>于爱城</p>
<p><img src="1.webp" /></p>
]]></content>
      <tags>
        <tag>诗 - Poem</tag>
      </tags>
  </entry>
  <entry>
    <title>利用python脚本分别调节多个屏幕的亮度 - Set the brightness of multiple screens separately using python scripts</title>
    <url>//post/56/</url>
    <content><![CDATA[<p>如果Windows电脑同时连接超过一个显示器，通过键盘快捷键就不能调节多个显示屏的亮度了，想要调节的话只能去按外接显示器的物理按钮。</p>
<p>If a Windows computer is connected to more than one monitor, the
brightness of multiple displays cannot be adjusted using keyboard
shortcuts. To adjust the brightness, you have to use the physical
buttons on the external monitors.</p>
<p>如果物理按钮不方便使用，也可以通过python的<code>screen_brightness_control</code>包来调节多个显示器的亮度。</p>
<p>If the physical buttons are inconvenient to use, you can adjust the
brightness of multiple monitors using the Python
<code>screen_brightness_control</code> package.</p>
<p><br></p>
<hr />
<h3
id="使用screen_brightness_control包---using-screen_brightness_control">使用screen_brightness_control包
- Using screen_brightness_control</h3>
<p>首先安装<code>screen_brightness_control</code>包：</p>
<p>First, install the <code>screen_brightness_control</code>
package:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install screen_brightness_control</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>它支持基础的获取屏幕亮度和设置屏幕亮度功能，如下所示。</p>
<p>It supports basic functions for getting and setting screen
brightness, as shown below.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> screen_brightness_control <span class="keyword">as</span> sbc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取所有显示器 - Get all monitors</span></span><br><span class="line">displays = sbc.list_monitors()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取第一个显示器的亮度 - Get the brightness of the first monitor</span></span><br><span class="line"><span class="built_in">print</span>(sbc.get_brightness(display=displays[<span class="number">0</span>]))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置第二个显示器的亮度为30 - Set the brightness of the second monitor to 30</span></span><br><span class="line">sbc.set_brightness(<span class="number">30</span>, display=displays[<span class="number">1</span>])</span><br></pre></td></tr></table></figure>
<p>这样就可以通过python代码来调节多个显示器的亮度了。</p>
<p>With this, you can adjust the brightness of multiple monitors using
Python code.</p>
<p><br></p>
<hr />
<h3 id="图形化界面---graphical-interface-gui">图形化界面 - Graphical
Interface (GUI)</h3>
<p>为了更易于非程序员用户使用，可以使用<code>tkinter</code>库来创建一个简单的图形化界面，通过滑动条来调节各个显示器的亮度，如下所示。</p>
<p>To make it easier for non-programmers to use, you can create a simple
graphical interface using the <code>tkinter</code> library, allowing
users to adjust the brightness of each monitor with sliders, as shown
below.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> tkinter <span class="keyword">as</span> tk</span><br><span class="line"><span class="keyword">import</span> screen_brightness_control <span class="keyword">as</span> sbc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取所有显示器和亮度 - Get all displays and their brightness</span></span><br><span class="line">displays = sbc.list_monitors()</span><br><span class="line">brightness = sbc.get_brightness()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个根窗口 - Create a root window</span></span><br><span class="line">root = tk.Tk()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> index, display <span class="keyword">in</span> <span class="built_in">enumerate</span>(displays):</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 为每个显示器添加控制亮度的滑块</span></span><br><span class="line">    <span class="comment"># Add a slider to control the brightness for each display</span></span><br><span class="line">    brightness_slider = tk.Scale(root, from_=<span class="number">0</span>, to=<span class="number">100</span>, orient=<span class="string">&quot;horizontal&quot;</span>, length=<span class="number">300</span>)</span><br><span class="line">    brightness_slider.<span class="built_in">set</span>(brightness[index])</span><br><span class="line">    brightness_slider.pack()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 绑定滑块到设置亮度的函数</span></span><br><span class="line">    <span class="comment"># Bind the slider to the set_brightness function</span></span><br><span class="line">    brightness_slider.bind(</span><br><span class="line">        <span class="string">&quot;&lt;Motion&gt;&quot;</span>,</span><br><span class="line">        <span class="keyword">lambda</span> event, idx=index: sbc.set_brightness(event.widget.get(), displays[idx]),</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行窗口 - Run the window</span></span><br><span class="line">root.mainloop()</span><br></pre></td></tr></table></figure>
<p>这样就可以通过图形化界面来调节多个显示器的亮度了。</p>
<p>This allows you to adjust the brightness of multiple monitors using a
graphical interface.</p>
<p><img src="3.png" /></p>
<p><br></p>
<p>稍稍美化一下界面。考虑到有些显示器不支持通过程序来调节亮度，在设置亮度时需添加try-except来捕获异常。最终代码如下所示。</p>
<p>Make the interface slightly more polished. Considering that some
monitors do not support brightness adjustment through software, add a
try-except block when setting the brightness to catch exceptions. The
final code is shown below.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Control the brightness of the screen using a GUI interface</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> tkinter <span class="keyword">as</span> tk</span><br><span class="line"><span class="keyword">import</span> screen_brightness_control <span class="keyword">as</span> sbc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取所有显示器和亮度 - Get all displays and their brightness</span></span><br><span class="line">displays = sbc.list_monitors()</span><br><span class="line">brightness = sbc.get_brightness()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个根窗口 - Create a root window</span></span><br><span class="line">root = tk.Tk()</span><br><span class="line">root.title(<span class="string">&quot;屏幕亮度控制 - Screen Brightness Control&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置窗口的位置 - Set the position of the window</span></span><br><span class="line">window_width = <span class="number">500</span></span><br><span class="line">window_height = <span class="number">150</span> * <span class="built_in">len</span>(displays)</span><br><span class="line">screen_width = root.winfo_screenwidth()</span><br><span class="line">screen_height = root.winfo_screenheight()</span><br><span class="line">position_right = <span class="built_in">int</span>(screen_width / <span class="number">2</span> - window_width / <span class="number">2</span>)</span><br><span class="line">position_down = <span class="built_in">int</span>(screen_height / <span class="number">2</span> - window_height / <span class="number">2</span>)</span><br><span class="line">root.geometry(<span class="string">f&quot;<span class="subst">&#123;window_width&#125;</span>x<span class="subst">&#123;window_height&#125;</span>+<span class="subst">&#123;position_right&#125;</span>+<span class="subst">&#123;position_down&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> index, display <span class="keyword">in</span> <span class="built_in">enumerate</span>(displays):</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 为每个显示器添加标签</span></span><br><span class="line">    <span class="comment"># Add a label for each display</span></span><br><span class="line">    display_label = tk.Label(root, text=<span class="string">f&quot;\n<span class="subst">&#123;index + <span class="number">1</span>&#125;</span>: <span class="subst">&#123;display&#125;</span>&quot;</span>)</span><br><span class="line">    display_label.pack(pady=<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 为每个显示器添加控制亮度的滑块</span></span><br><span class="line">    <span class="comment"># Add a slider to control the brightness for each display</span></span><br><span class="line">    brightness_slider = tk.Scale(root, from_=<span class="number">0</span>, to=<span class="number">100</span>, orient=<span class="string">&quot;horizontal&quot;</span>, length=<span class="number">300</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        brightness_slider.<span class="built_in">set</span>(brightness[index])</span><br><span class="line">    <span class="keyword">except</span> IndexError:</span><br><span class="line">        <span class="comment"># 如果显示器不支持亮度控制，则禁用滑块</span></span><br><span class="line">        <span class="comment"># If the display does not support brightness control, disable the slider</span></span><br><span class="line">        brightness_slider.<span class="built_in">set</span>(<span class="number">0</span>)</span><br><span class="line">        brightness_slider.config(state=<span class="string">&quot;disabled&quot;</span>)</span><br><span class="line">        brightness_slider.config(troughcolor=<span class="string">&quot;#505050&quot;</span>)</span><br><span class="line">        display_label.config(text=<span class="string">f&quot;\n<span class="subst">&#123;index + <span class="number">1</span>&#125;</span>: <span class="subst">&#123;display&#125;</span> (不可用 - Not supported)&quot;</span>)</span><br><span class="line">    brightness_slider.pack(pady=<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 绑定滑块到设置亮度的函数</span></span><br><span class="line">    <span class="comment"># Bind the slider to the set_brightness function</span></span><br><span class="line">    brightness_slider.bind(</span><br><span class="line">        <span class="string">&quot;&lt;Motion&gt;&quot;</span>,</span><br><span class="line">        <span class="keyword">lambda</span> event, idx=index: sbc.set_brightness(event.widget.get(), displays[idx]),</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行窗口 - Run the window</span></span><br><span class="line">root.mainloop()</span><br></pre></td></tr></table></figure>
<p><br></p>
<p>其最终效果如图所示：</p>
<p>The final effect:</p>
<p><img src="1.png" /></p>
<p><br></p>
<p>有多个显示器时的效果如图所示：</p>
<p>The effect with multiple monitors:</p>
<p><img src="2.png" /></p>
<p><br></p>
<hr />
<h3 id="编译为可执行文件---compile-to-executable">编译为可执行文件 -
Compile to Executable</h3>
<p>为了方便使用，可以将python脚本编译为可执行文件（.exe文件），这样就不需要安装python环境了。使用pyinstaller库可以实现这一功能。</p>
<p>To make it easier to use, you can compile the Python script into an
executable file (.exe file) so that a Python environment is not needed.
This can be done using the pyinstaller library.</p>
<p><br></p>
<p>首先安装<code>pyinstaller</code>库：</p>
<p>First, install the <code>pyinstaller</code> library:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install pyinstaller</span><br></pre></td></tr></table></figure>
<p>然后使用以下命令将脚本编译为可执行文件，需将<code>script.py</code>替换为实际的脚本文件名。</p>
<p>Then use the following command to compile the script into an
executable file, replacing <code>script.py</code> with the actual script
file name.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pyinstaller --onefile --noconsole script.py</span><br></pre></td></tr></table></figure>
<p>编译完成后，会在<code>dist</code>目录下生成一个可执行文件，双击即可运行。</p>
<p>After compilation, an executable file will be generated in the
<code>dist</code> directory, which can be run by double-clicking.</p>
]]></content>
      <tags>
        <tag>编程 - Programming</tag>
      </tags>
  </entry>
  <entry>
    <title>哈利法克斯 * 乔治岛</title>
    <url>//post/57/</url>
    <content><![CDATA[<p>躺在吊床上，伸出手</p>
<p>好像就能摸到乔治岛</p>
<p>薄雾，砖墙，咸又浓的风</p>
<p>码头灰黄</p>
<p>落日辉煌</p>
<p><br></p>
<p>哈利法克斯，没有人</p>
<p>能剥夺你全部的自由</p>
<p>酒后，至少，我们还可以</p>
<p>随着海浪</p>
<p>飘到岛上</p>
<p><br></p>
<p>于哈法</p>
<p><br></p>
<p><img src="1.webp" /></p>
]]></content>
      <tags>
        <tag>诗 - Poem</tag>
      </tags>
  </entry>
  <entry>
    <title>小打油 - 劝学</title>
    <url>//post/58/</url>
    <content><![CDATA[<p>手里拿把锤子</p>
<p>看啥都是钉子</p>
<p>那么怎么办呢？</p>
<p>就再拿把斧子...</p>
<p><br></p>
<p>于爱城</p>
]]></content>
      <tags>
        <tag>诗 - Poem</tag>
      </tags>
  </entry>
  <entry>
    <title>元键政5：我们是谁，应该为谁说话？ - Meta Political Discussion 5：Who Are We, and Whom Should We Speak For?</title>
    <url>//post/59/</url>
    <content><![CDATA[<p>有一个段子，说的是：晚上吃饭时，一个半生不熟的朋友跟我说，美国太不是东西了，跟我们打贸易战。“我们不惜一切代价，也要打赢贸易战”。我心想，你也不照镜子看看自己，你是那个“我们”吗？其实你就是那个“代价”。</p>
<p>There is a joke that goes like this: While having dinner one evening,
an acquaintance who I barely know said to me, "America is such a jerk,
starting a trade war with us. 'We will spare no cost to win this trade
war.'" I thought to myself: have you even looked in the mirror? Are you
part of that "we"? You're probably just part of the "cost".</p>
<p><img src="1.jpg" /></p>
<p><br></p>
<p>段子当然是有些夸张。但是，不知道大家看完之后是否想过同样的问题：我们什么时候是“我们”，什么时候是“代价”？再进一步问，我们是谁，应该为谁说话？用通俗的话说就是：人的屁股和脑袋应该在哪里？</p>
<p>The joke is somewhat exaggerated. But after reading it, has anyone
thought about this question: when are we the "we" and when are we the
"cost"? Furthermore, who are we, and whom should we speak for?</p>
<p><br></p>
<hr />
<p>“我们是谁”
相对好回答，它问的是身份问题。它的答案可能是民族身份，国家（包括区域，市县）身份，阶级身份，性别身份，宗教身份，兴趣身份，职业身份，思想身份（左派/右派）等等。此外，人的身份问题往往是复杂的，比如，马前卒同时是中国人，河北人，媒体人，男性，满族，无神论者，左派，政治爱好者。</p>
<p>"Who are we" is relatively easier to answer, as it addresses the
issue of identity. The answer might involve ethnic identity, national
(including regional, city, county) identity, class identity, gender
identity, religious identity, interest-based identity, professional
identity, ideological identity (left-wing/right-wing), and so on.
Moreover, a person's identity is often complex. For instance, Ma
Qianzu(马前卒) can simultaneously be Chinese, from Hebei, a media
person, male, Manchu, an atheist, a leftist, and a political
enthusiast.</p>
<p><br></p>
<p>而“应该为谁说话”，这个问题比较复杂。在键政中，人说话的主要目的是为了捍卫自己的政治立场。决定人的政治立场的可能是其民族，国家，阶级，性别身份，但也可能是他自己的政治理论。</p>
<p>人固然会本能地为自己的身份说话，比如，争取民族独立的人往往是本民族的人，争取女性权益的人也往往是女性。但是，人也会因为自己的政治理论而热爱某一团体，为其说话。恩格斯怎么说都是资产阶级，工厂主的儿子，但他却是马克思主义的奠基人。林毅夫为台湾人，但毅然“叛逃”到大陆担任经济学者。屁股不一定决定脑袋，认为“脑袋只会被屁股决定”是一种懒惰的思维方式。</p>
<p>As for "whom should we speak for," this question is more complex. In
political discourse, the main purpose of speaking is often to defend
one's political stance. A person's political stance may be determined by
their ethnicity, nationality, class, gender identity, or their own
political theory.</p>
<p>People naturally tend to speak for their own identity. For example,
those fighting for national independence are often from that nation, and
those advocating for women's rights are often women. However,
individuals may also champion a group because of their political
beliefs. Engels, for instance, was undeniably part of the bourgeoisie
and the son of a factory owner, yet he was a founding figure of Marxism.
Lin Yifu was Taiwanese but resolutely "defected" to the mainland to
serve as an economist. Loyalties do not necessarily dictate beliefs;
thinking that "beliefs are solely determined by loyalties" is a lazy
mindset.</p>
<p><br></p>
<p>所有的身份认同，和所有的立场，只要是出于理性，就没有高下之分。然而有时，政府，或家族族长，或网络上的意见领袖等人，可能会出于政治宣传，而强调某一种身份或某一种立场超出其他的身份和立场（包括强化阶级叙事，讲好中国故事，美国梦，等等）。理性人们要认清这一点。</p>
<p>All forms of identity and all stances, as long as they are based on
rationality, have no inherent hierarchy. However, sometimes governments,
family patriarchs, online opinion leaders, and others may emphasize one
identity or stance over others for political propaganda (such as
reinforcing class narratives, promoting the "China story," or the
"American dream"). As rational individuals, we need to recognize
this.</p>
<p><img src="2.jpg" /></p>
]]></content>
      <categories>
        <category>元键政 - Meta Political Discussion</category>
      </categories>
      <tags>
        <tag>随想 - Thoughts</tag>
      </tags>
  </entry>
</search>
